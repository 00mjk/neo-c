#include "neo-c.h"

extern "C"
{
#include <stdio.h>
#include <stdlib.h>
#include <ncurses.h>
#include <sys/ioctl.h>
#include <unistd.h>

int xgetmaxx() 
{
    var ws = new winsize;
    ioctl(STDOUT_FILENO, TIOCGWINSZ, ws);

    return ws.ws_col
}

int xgetmaxy() 
{
    var ws = new winsize;
    ioctl(STDOUT_FILENO, TIOCGWINSZ, ws);

    return ws.ws_row
}

}

struct win {
    win:WINDOW*;
    texts:list<int>*;
}

impl win {
    initialize() {
//        self.texts = new list<string>.initialize();
        var maxx = xgetmaxx();
        var maxy = xgetmaxy();
//        self.win = newwin(0,0, maxx-1, maxy-1);
    }

    def view() {
    }
}

struct mvi {
    numWinHeight:int;
    numWinWidth:int;

//    windows:vector<win*%>%*;
}

impl mvi {
    initialize() {
        puts("mvi initialize");

        self.numWinHeight = 1;
        self.numWinWidth = 1;

//        var win = new win.initialize();

//        self.windows.push_back(win);
    }

    finalize() {
        puts("mvi initialize");
    }

    def main(self:mvi*):int {
        initscr();
        clear();
        refresh();

        var key = getch();

        endwin();

        0
    }
}
