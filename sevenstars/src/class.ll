; ModuleID = 'Module class'
source_filename = "Module class"

%_IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %_IO_marker*, %_IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %_IO_codecvt*, %_IO_wide_data*, %_IO_FILE*, i8*, i64, i32, [20 x i8] }
%_IO_marker = type {}
%_IO_codecvt = type {}
%_IO_wide_data = type {}
%pcre_callout_block = type { i32, i32, i32*, i8*, i32, i32, i32, i32, i32, i8*, i32, i32, i8* }
%pcre16_callout_block = type { i32, i32, i32*, i16*, i32, i32, i32, i32, i32, i8*, i32, i32, i16* }
%pcre32_callout_block = type { i32, i32, i32*, i32*, i32, i32, i32, i32, i32, i8*, i32, i32, i32* }
%map__charp_sCLClassp = type { i8**, i1*, %sCLClass**, i32, i32 }
%sCLClass = type { i8*, %map__charp_sCLMethodp*, %map__charp_sCLFieldp*, %map__charp_sCLFieldp*, %sCLClass* }
%map__charp_sCLMethodp = type { i8**, i1*, %sCLMethod**, i32, i32 }
%sCLMethod = type { i8*, [32 x %sCLParam], i32, %sCLType*, %buffer*, i1 (%CLVALUE**, %sVMInfo*)*, %sCLNodeBlock*, i32 }
%sCLParam = type { [128 x i8], %sCLType* }
%sCLType = type { i8*, %sCLClass*, i32, [32 x %sCLType*], i1, [32 x %sCLParam], i32, %sCLType*, i32 }
%buffer = type { i8*, i32, i32 }
%CLVALUE = type { i32 }
%sVMInfo = type { [4096 x i8], i32, %sParserInfo*, %sCompileInfo*, i1, %vector__sCLStackFrame*, %CLVALUE }
%sParserInfo = type { [4096 x i8], i32, i32, i32, i8*, %vector__charp*, %vector__sCLNodep*, %vector__sVarTablep*, %vector__sCLNodeBlockp*, %vector__sCLTypep*, %vector__sVarp*, i32 }
%vector__charp = type { i8**, i32, i32 }
%vector__sCLNodep = type { %sCLNode**, i32, i32 }
%sCLNode = type { i32, [4096 x i8], i32, %anon78, i8*, i8*, i8*, %buffer*, %sCLType*, %sCLNode*, %sCLNode*, %sCLNode* }
%anon78 = type { %anon80 }
%anon80 = type { %sCLNodeBlock*, [32 x %sCLParam], i32, %sCLType* }
%vector__sVarTablep = type { %sVarTable**, i32, i32 }
%sVarTable = type { %map__charp_sVarp*, i32, i32, i32, %sVarTable* }
%map__charp_sVarp = type { i8**, i1*, %sVar**, i32, i32 }
%sVar = type { i8*, i32, %sCLType*, i32, i1 }
%vector__sCLNodeBlockp = type { %sCLNodeBlock**, i32, i32 }
%vector__sCLTypep = type { %sCLType**, i32, i32 }
%vector__sVarp = type { %sVar**, i32, i32 }
%sCompileInfo = type { [4096 x i8], i32, i32, i32, %sParserInfo*, %buffer*, %sCLType*, i1, %sCLNode* }
%vector__sCLStackFrame = type { %sCLStackFrame*, i32, i32 }
%sCLStackFrame = type { i32, %CLVALUE*, %CLVALUE**, i32, i32 }
%sCLNodeBlock = type { %vector__sCLNodep*, %vector__sVarTablep*, i1, i32, [32 x %sCLParam], %sCLType*, i32, %buffer*, i32 }
%map__charp_sCLFieldp = type { i8**, i1*, %sCLField**, i32, i32 }
%sCLField = type { i8*, %sCLType*, %CLVALUE, i32 }
%vector__int = type { i32*, i32, i32 }
%map__charp_lambdap = type { i8**, i1*, i1 (%CLVALUE**, %sVMInfo*)**, i32, i32 }
%__locale_struct = type { [13 x %__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%__locale_data = type opaque
%anon0 = type { i32, %anon1 }
%anon1 = type { i32 }
%__builtin_va_list.0 = type { i8* }
%tm = type {}
%_G_fpos_t = type { i64, %anon0 }
%anon7 = type { [16 x i64] }
%timeval = type { i64, i64 }
%timespec = type { i64, i64 }
%anon6 = type { [16 x i64] }
%random_data = type { i32*, i32*, i32*, i32, i32, i32, i32* }
%drand48_data = type { [3 x i16], [3 x i16], i16, i16, i64 }
%anon3 = type { i32, i32 }
%anon4 = type { i64, i64 }
%anon5 = type { i64, i64 }
%real_pcre = type {}
%real_pcre16 = type {}
%real_pcre32 = type {}
%pcre_extra = type { i64, i8*, i64, i8*, i8*, i64, i8**, i8* }
%pcre16_extra = type { i64, i8*, i64, i8*, i8*, i64, i16**, i8* }
%pcre32_extra = type { i64, i8*, i64, i8*, i8*, i64, i32**, i8* }
%real_pcre_jit_stack = type {}
%real_pcre16_jit_stack = type {}
%real_pcre32_jit_stack = type {}
%regex_struct = type { i8*, %real_pcre*, i1, i1, i1, i1, i1, i1, i1, i1 }
%list__charp = type { %list_item__charp*, %list_item__charp*, i32 }
%list_item__charp = type { i8*, %list_item__charp*, %list_item__charp* }
%stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %timespec, %timespec, %timespec, [3 x i64] }
%lconv = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%termios = type { i32, i32, i32, i32, i8, [32 x i8], i32, i32 }
%sCLHeapMem = type { %sCLType*, i32, i32, i8* }
%sCLInt = type { %sCLType*, i32, i32, i32 }
%sCLObject = type { %sCLType*, i32, i32, %anon85 }
%anon85 = type { [32 x %CLVALUE] }

@gLVTable = internal global [8192 x i8*] zeroinitializer, align 8
@gNCDebugHeap = external global i32
@__environ = external externally_initialized global i8**, align 8
@optarg = external externally_initialized global i8*, align 8
@optind = external externally_initialized global i32, align 4
@opterr = external externally_initialized global i32, align 4
@optopt = external externally_initialized global i32, align 4
@stdin = external externally_initialized global %_IO_FILE*, align 8
@stdout = external externally_initialized global %_IO_FILE*, align 8
@stderr = external externally_initialized global %_IO_FILE*, align 8
@sys_nerr = external externally_initialized global i32, align 4
@sys_errlist = external externally_initialized global i8**, align 8
@pcre_malloc = external externally_initialized global i8* (i64)*, align 8
@pcre_free = external externally_initialized global void (i8*)*, align 8
@pcre_stack_malloc = external externally_initialized global i8* (i64)*, align 8
@pcre_stack_free = external externally_initialized global void (i8*)*, align 8
@pcre_callout = external externally_initialized global i32 (%pcre_callout_block*)*, align 8
@pcre_stack_guard = external externally_initialized global i32 ()*, align 8
@pcre16_malloc = external externally_initialized global i8* (i64)*, align 8
@pcre16_free = external externally_initialized global void (i8*)*, align 8
@pcre16_stack_malloc = external externally_initialized global i8* (i64)*, align 8
@pcre16_stack_free = external externally_initialized global void (i8*)*, align 8
@pcre16_callout = external externally_initialized global i32 (%pcre16_callout_block*)*, align 8
@pcre16_stack_guard = external externally_initialized global i32 ()*, align 8
@pcre32_malloc = external externally_initialized global i8* (i64)*, align 8
@pcre32_free = external externally_initialized global void (i8*)*, align 8
@pcre32_stack_malloc = external externally_initialized global i8* (i64)*, align 8
@pcre32_stack_free = external externally_initialized global void (i8*)*, align 8
@pcre32_callout = external externally_initialized global i32 (%pcre32_callout_block*)*, align 8
@pcre32_stack_guard = external externally_initialized global i32 ()*, align 8
@gClasses = global %map__charp_sCLClassp* zeroinitializer, align 8
@gJobs = global %vector__int* zeroinitializer, align 8
@gNativeMethods = global %map__charp_lambdap* zeroinitializer, align 8
@global_string = private constant [3 x i8] c"%d\00", align 1
@global_string.1 = private constant [3 x i8] c"%d\00", align 1
@global_string.2 = private constant [1 x i8] zeroinitializer, align 1
@global_string.3 = private constant [1 x i8] zeroinitializer, align 1
@global_string.4 = private constant [5 x i8] c"true\00", align 1
@global_string.5 = private constant [6 x i8] c"false\00", align 1
@global_string.6 = private constant [5 x i8] c"true\00", align 1
@global_string.7 = private constant [6 x i8] c"false\00", align 1
@global_string.8 = private constant [1 x i8] zeroinitializer, align 1
@global_string.9 = private constant [6 x i8] c"%s.%s\00", align 1
@global_string.10 = private constant [24 x i8] c"map%<char*%,sCLClass*%>\00", align 1
@global_string.11 = private constant [13 x i8] c"src/class.nc\00", align 1
@global_string.12 = private constant [11 x i8] c"class_init\00", align 1
@global_string.13 = private constant [11 x i8] c"class_init\00", align 1
@global_string.14 = private constant [7 x i8] c"char*%\00", align 1
@global_string.15 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.16 = private constant [38 x i8] c"initialize_charp_sCLClassp1_src/class\00", align 1
@global_string.17 = private constant [42 x i8] c"map_initialize_charp_sCLClassp1_src/class\00", align 1
@global_string.18 = private constant [11 x i8] c"sCLClass*%\00", align 1
@global_string.19 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.20 = private constant [38 x i8] c"initialize_charp_sCLClassp1_src/class\00", align 1
@global_string.21 = private constant [42 x i8] c"map_initialize_charp_sCLClassp1_src/class\00", align 1
@global_string.22 = private constant [6 x i8] c"bool%\00", align 1
@global_string.23 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.24 = private constant [38 x i8] c"initialize_charp_sCLClassp1_src/class\00", align 1
@global_string.25 = private constant [42 x i8] c"map_initialize_charp_sCLClassp1_src/class\00", align 1
@global_string.26 = private constant [7 x i8] c"object\00", align 1
@global_string.27 = private constant [5 x i8] c"void\00", align 1
@global_string.28 = private constant [4 x i8] c"int\00", align 1
@global_string.29 = private constant [5 x i8] c"bool\00", align 1
@global_string.30 = private constant [7 x i8] c"string\00", align 1
@global_string.31 = private constant [4 x i8] c"any\00", align 1
@global_string.32 = private constant [8 x i8] c"command\00", align 1
@global_string.33 = private constant [4 x i8] c"job\00", align 1
@global_string.34 = private constant [7 x i8] c"lambda\00", align 1
@global_string.35 = private constant [15 x i8] c"generics_type0\00", align 1
@global_string.36 = private constant [15 x i8] c"generics_type1\00", align 1
@global_string.37 = private constant [15 x i8] c"generics_type2\00", align 1
@global_string.38 = private constant [15 x i8] c"generics_type3\00", align 1
@global_string.39 = private constant [15 x i8] c"generics_type4\00", align 1
@global_string.40 = private constant [15 x i8] c"generics_type5\00", align 1
@global_string.41 = private constant [15 x i8] c"generics_type6\00", align 1
@global_string.42 = private constant [15 x i8] c"generics_type7\00", align 1
@global_string.43 = private constant [15 x i8] c"generics_type8\00", align 1
@global_string.44 = private constant [15 x i8] c"generics_type9\00", align 1
@global_string.45 = private constant [16 x i8] c"generics_type10\00", align 1
@global_string.46 = private constant [16 x i8] c"generics_type11\00", align 1
@global_string.47 = private constant [16 x i8] c"generics_type12\00", align 1
@global_string.48 = private constant [16 x i8] c"generics_type13\00", align 1
@global_string.49 = private constant [16 x i8] c"generics_type14\00", align 1
@global_string.50 = private constant [16 x i8] c"generics_type15\00", align 1
@global_string.51 = private constant [16 x i8] c"generics_type16\00", align 1
@global_string.52 = private constant [16 x i8] c"generics_type17\00", align 1
@global_string.53 = private constant [16 x i8] c"generics_type18\00", align 1
@global_string.54 = private constant [16 x i8] c"generics_type19\00", align 1
@global_string.55 = private constant [16 x i8] c"generics_type20\00", align 1
@global_string.56 = private constant [16 x i8] c"generics_type21\00", align 1
@global_string.57 = private constant [16 x i8] c"generics_type22\00", align 1
@global_string.58 = private constant [16 x i8] c"generics_type23\00", align 1
@global_string.59 = private constant [16 x i8] c"generics_type24\00", align 1
@global_string.60 = private constant [16 x i8] c"generics_type25\00", align 1
@global_string.61 = private constant [16 x i8] c"generics_type26\00", align 1
@global_string.62 = private constant [16 x i8] c"generics_type27\00", align 1
@global_string.63 = private constant [16 x i8] c"generics_type28\00", align 1
@global_string.64 = private constant [16 x i8] c"generics_type29\00", align 1
@global_string.65 = private constant [16 x i8] c"generics_type30\00", align 1
@global_string.66 = private constant [16 x i8] c"generics_type31\00", align 1
@global_string.67 = private constant [46 x i8] c"map%<char*%,lambda(CLVALUE**,sVMInfo*):bool*>\00", align 1
@global_string.68 = private constant [13 x i8] c"src/class.nc\00", align 1
@global_string.69 = private constant [11 x i8] c"class_init\00", align 1
@global_string.70 = private constant [11 x i8] c"class_init\00", align 1
@global_string.71 = private constant [7 x i8] c"char*%\00", align 1
@global_string.72 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.73 = private constant [36 x i8] c"initialize_charp_lambdap2_src/class\00", align 1
@global_string.74 = private constant [40 x i8] c"map_initialize_charp_lambdap2_src/class\00", align 1
@global_string.75 = private constant [34 x i8] c"lambda(CLVALUE**,sVMInfo*):bool*%\00", align 1
@global_string.76 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.77 = private constant [36 x i8] c"initialize_charp_lambdap2_src/class\00", align 1
@global_string.78 = private constant [40 x i8] c"map_initialize_charp_lambdap2_src/class\00", align 1
@global_string.79 = private constant [6 x i8] c"bool%\00", align 1
@global_string.80 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.81 = private constant [36 x i8] c"initialize_charp_lambdap2_src/class\00", align 1
@global_string.82 = private constant [40 x i8] c"map_initialize_charp_lambdap2_src/class\00", align 1
@global_string.83 = private constant [17 x i8] c"object.type_name\00", align 1
@global_string.84 = private constant [7 x i8] c"char*%\00", align 1
@global_string.85 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.86 = private constant [32 x i8] c"rehash_charp_lambdap4_src/class\00", align 1
@global_string.87 = private constant [36 x i8] c"map_rehash_charp_lambdap4_src/class\00", align 1
@global_string.88 = private constant [34 x i8] c"lambda(CLVALUE**,sVMInfo*):bool*%\00", align 1
@global_string.89 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.90 = private constant [32 x i8] c"rehash_charp_lambdap4_src/class\00", align 1
@global_string.91 = private constant [36 x i8] c"map_rehash_charp_lambdap4_src/class\00", align 1
@global_string.92 = private constant [6 x i8] c"bool%\00", align 1
@global_string.93 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.94 = private constant [32 x i8] c"rehash_charp_lambdap4_src/class\00", align 1
@global_string.95 = private constant [36 x i8] c"map_rehash_charp_lambdap4_src/class\00", align 1
@global_string.96 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.97 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.98 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.99 = private constant [18 x i8] c"object.num_fields\00", align 1
@global_string.100 = private constant [7 x i8] c"char*%\00", align 1
@global_string.101 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.102 = private constant [32 x i8] c"rehash_charp_lambdap7_src/class\00", align 1
@global_string.103 = private constant [36 x i8] c"map_rehash_charp_lambdap7_src/class\00", align 1
@global_string.104 = private constant [34 x i8] c"lambda(CLVALUE**,sVMInfo*):bool*%\00", align 1
@global_string.105 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.106 = private constant [32 x i8] c"rehash_charp_lambdap7_src/class\00", align 1
@global_string.107 = private constant [36 x i8] c"map_rehash_charp_lambdap7_src/class\00", align 1
@global_string.108 = private constant [6 x i8] c"bool%\00", align 1
@global_string.109 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.110 = private constant [32 x i8] c"rehash_charp_lambdap7_src/class\00", align 1
@global_string.111 = private constant [36 x i8] c"map_rehash_charp_lambdap7_src/class\00", align 1
@global_string.112 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.113 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.114 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.115 = private constant [14 x i8] c"int.set_value\00", align 1
@global_string.116 = private constant [7 x i8] c"char*%\00", align 1
@global_string.117 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.118 = private constant [33 x i8] c"rehash_charp_lambdap10_src/class\00", align 1
@global_string.119 = private constant [37 x i8] c"map_rehash_charp_lambdap10_src/class\00", align 1
@global_string.120 = private constant [34 x i8] c"lambda(CLVALUE**,sVMInfo*):bool*%\00", align 1
@global_string.121 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.122 = private constant [33 x i8] c"rehash_charp_lambdap10_src/class\00", align 1
@global_string.123 = private constant [37 x i8] c"map_rehash_charp_lambdap10_src/class\00", align 1
@global_string.124 = private constant [6 x i8] c"bool%\00", align 1
@global_string.125 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.126 = private constant [33 x i8] c"rehash_charp_lambdap10_src/class\00", align 1
@global_string.127 = private constant [37 x i8] c"map_rehash_charp_lambdap10_src/class\00", align 1
@global_string.128 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.129 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.130 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.131 = private constant [14 x i8] c"int.to_string\00", align 1
@global_string.132 = private constant [7 x i8] c"char*%\00", align 1
@global_string.133 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.134 = private constant [33 x i8] c"rehash_charp_lambdap13_src/class\00", align 1
@global_string.135 = private constant [37 x i8] c"map_rehash_charp_lambdap13_src/class\00", align 1
@global_string.136 = private constant [34 x i8] c"lambda(CLVALUE**,sVMInfo*):bool*%\00", align 1
@global_string.137 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.138 = private constant [33 x i8] c"rehash_charp_lambdap13_src/class\00", align 1
@global_string.139 = private constant [37 x i8] c"map_rehash_charp_lambdap13_src/class\00", align 1
@global_string.140 = private constant [6 x i8] c"bool%\00", align 1
@global_string.141 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.142 = private constant [33 x i8] c"rehash_charp_lambdap13_src/class\00", align 1
@global_string.143 = private constant [37 x i8] c"map_rehash_charp_lambdap13_src/class\00", align 1
@global_string.144 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.145 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.146 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.147 = private constant [15 x i8] c"int.to_command\00", align 1
@global_string.148 = private constant [7 x i8] c"char*%\00", align 1
@global_string.149 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.150 = private constant [33 x i8] c"rehash_charp_lambdap16_src/class\00", align 1
@global_string.151 = private constant [37 x i8] c"map_rehash_charp_lambdap16_src/class\00", align 1
@global_string.152 = private constant [34 x i8] c"lambda(CLVALUE**,sVMInfo*):bool*%\00", align 1
@global_string.153 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.154 = private constant [33 x i8] c"rehash_charp_lambdap16_src/class\00", align 1
@global_string.155 = private constant [37 x i8] c"map_rehash_charp_lambdap16_src/class\00", align 1
@global_string.156 = private constant [6 x i8] c"bool%\00", align 1
@global_string.157 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.158 = private constant [33 x i8] c"rehash_charp_lambdap16_src/class\00", align 1
@global_string.159 = private constant [37 x i8] c"map_rehash_charp_lambdap16_src/class\00", align 1
@global_string.160 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.161 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.162 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.163 = private constant [12 x i8] c"bool.to_int\00", align 1
@global_string.164 = private constant [7 x i8] c"char*%\00", align 1
@global_string.165 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.166 = private constant [33 x i8] c"rehash_charp_lambdap19_src/class\00", align 1
@global_string.167 = private constant [37 x i8] c"map_rehash_charp_lambdap19_src/class\00", align 1
@global_string.168 = private constant [34 x i8] c"lambda(CLVALUE**,sVMInfo*):bool*%\00", align 1
@global_string.169 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.170 = private constant [33 x i8] c"rehash_charp_lambdap19_src/class\00", align 1
@global_string.171 = private constant [37 x i8] c"map_rehash_charp_lambdap19_src/class\00", align 1
@global_string.172 = private constant [6 x i8] c"bool%\00", align 1
@global_string.173 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.174 = private constant [33 x i8] c"rehash_charp_lambdap19_src/class\00", align 1
@global_string.175 = private constant [37 x i8] c"map_rehash_charp_lambdap19_src/class\00", align 1
@global_string.176 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.177 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.178 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.179 = private constant [15 x i8] c"bool.to_string\00", align 1
@global_string.180 = private constant [7 x i8] c"char*%\00", align 1
@global_string.181 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.182 = private constant [33 x i8] c"rehash_charp_lambdap22_src/class\00", align 1
@global_string.183 = private constant [37 x i8] c"map_rehash_charp_lambdap22_src/class\00", align 1
@global_string.184 = private constant [34 x i8] c"lambda(CLVALUE**,sVMInfo*):bool*%\00", align 1
@global_string.185 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.186 = private constant [33 x i8] c"rehash_charp_lambdap22_src/class\00", align 1
@global_string.187 = private constant [37 x i8] c"map_rehash_charp_lambdap22_src/class\00", align 1
@global_string.188 = private constant [6 x i8] c"bool%\00", align 1
@global_string.189 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.190 = private constant [33 x i8] c"rehash_charp_lambdap22_src/class\00", align 1
@global_string.191 = private constant [37 x i8] c"map_rehash_charp_lambdap22_src/class\00", align 1
@global_string.192 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.193 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.194 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.195 = private constant [16 x i8] c"bool.to_command\00", align 1
@global_string.196 = private constant [7 x i8] c"char*%\00", align 1
@global_string.197 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.198 = private constant [33 x i8] c"rehash_charp_lambdap25_src/class\00", align 1
@global_string.199 = private constant [37 x i8] c"map_rehash_charp_lambdap25_src/class\00", align 1
@global_string.200 = private constant [34 x i8] c"lambda(CLVALUE**,sVMInfo*):bool*%\00", align 1
@global_string.201 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.202 = private constant [33 x i8] c"rehash_charp_lambdap25_src/class\00", align 1
@global_string.203 = private constant [37 x i8] c"map_rehash_charp_lambdap25_src/class\00", align 1
@global_string.204 = private constant [6 x i8] c"bool%\00", align 1
@global_string.205 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.206 = private constant [33 x i8] c"rehash_charp_lambdap25_src/class\00", align 1
@global_string.207 = private constant [37 x i8] c"map_rehash_charp_lambdap25_src/class\00", align 1
@global_string.208 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.209 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.210 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.211 = private constant [15 x i8] c"bool.set_value\00", align 1
@global_string.212 = private constant [7 x i8] c"char*%\00", align 1
@global_string.213 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.214 = private constant [33 x i8] c"rehash_charp_lambdap28_src/class\00", align 1
@global_string.215 = private constant [37 x i8] c"map_rehash_charp_lambdap28_src/class\00", align 1
@global_string.216 = private constant [34 x i8] c"lambda(CLVALUE**,sVMInfo*):bool*%\00", align 1
@global_string.217 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.218 = private constant [33 x i8] c"rehash_charp_lambdap28_src/class\00", align 1
@global_string.219 = private constant [37 x i8] c"map_rehash_charp_lambdap28_src/class\00", align 1
@global_string.220 = private constant [6 x i8] c"bool%\00", align 1
@global_string.221 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.222 = private constant [33 x i8] c"rehash_charp_lambdap28_src/class\00", align 1
@global_string.223 = private constant [37 x i8] c"map_rehash_charp_lambdap28_src/class\00", align 1
@global_string.224 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.225 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.226 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.227 = private constant [17 x i8] c"string.set_value\00", align 1
@global_string.228 = private constant [7 x i8] c"char*%\00", align 1
@global_string.229 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.230 = private constant [33 x i8] c"rehash_charp_lambdap31_src/class\00", align 1
@global_string.231 = private constant [37 x i8] c"map_rehash_charp_lambdap31_src/class\00", align 1
@global_string.232 = private constant [34 x i8] c"lambda(CLVALUE**,sVMInfo*):bool*%\00", align 1
@global_string.233 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.234 = private constant [33 x i8] c"rehash_charp_lambdap31_src/class\00", align 1
@global_string.235 = private constant [37 x i8] c"map_rehash_charp_lambdap31_src/class\00", align 1
@global_string.236 = private constant [6 x i8] c"bool%\00", align 1
@global_string.237 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.238 = private constant [33 x i8] c"rehash_charp_lambdap31_src/class\00", align 1
@global_string.239 = private constant [37 x i8] c"map_rehash_charp_lambdap31_src/class\00", align 1
@global_string.240 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.241 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.242 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.243 = private constant [13 x i8] c"string.equal\00", align 1
@global_string.244 = private constant [7 x i8] c"char*%\00", align 1
@global_string.245 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.246 = private constant [33 x i8] c"rehash_charp_lambdap34_src/class\00", align 1
@global_string.247 = private constant [37 x i8] c"map_rehash_charp_lambdap34_src/class\00", align 1
@global_string.248 = private constant [34 x i8] c"lambda(CLVALUE**,sVMInfo*):bool*%\00", align 1
@global_string.249 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.250 = private constant [33 x i8] c"rehash_charp_lambdap34_src/class\00", align 1
@global_string.251 = private constant [37 x i8] c"map_rehash_charp_lambdap34_src/class\00", align 1
@global_string.252 = private constant [6 x i8] c"bool%\00", align 1
@global_string.253 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.254 = private constant [33 x i8] c"rehash_charp_lambdap34_src/class\00", align 1
@global_string.255 = private constant [37 x i8] c"map_rehash_charp_lambdap34_src/class\00", align 1
@global_string.256 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.257 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.258 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.259 = private constant [17 x i8] c"string.not_equal\00", align 1
@global_string.260 = private constant [7 x i8] c"char*%\00", align 1
@global_string.261 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.262 = private constant [33 x i8] c"rehash_charp_lambdap37_src/class\00", align 1
@global_string.263 = private constant [37 x i8] c"map_rehash_charp_lambdap37_src/class\00", align 1
@global_string.264 = private constant [34 x i8] c"lambda(CLVALUE**,sVMInfo*):bool*%\00", align 1
@global_string.265 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.266 = private constant [33 x i8] c"rehash_charp_lambdap37_src/class\00", align 1
@global_string.267 = private constant [37 x i8] c"map_rehash_charp_lambdap37_src/class\00", align 1
@global_string.268 = private constant [6 x i8] c"bool%\00", align 1
@global_string.269 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.270 = private constant [33 x i8] c"rehash_charp_lambdap37_src/class\00", align 1
@global_string.271 = private constant [37 x i8] c"map_rehash_charp_lambdap37_src/class\00", align 1
@global_string.272 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.273 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.274 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.275 = private constant [18 x i8] c"string.to_command\00", align 1
@global_string.276 = private constant [7 x i8] c"char*%\00", align 1
@global_string.277 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.278 = private constant [33 x i8] c"rehash_charp_lambdap40_src/class\00", align 1
@global_string.279 = private constant [37 x i8] c"map_rehash_charp_lambdap40_src/class\00", align 1
@global_string.280 = private constant [34 x i8] c"lambda(CLVALUE**,sVMInfo*):bool*%\00", align 1
@global_string.281 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.282 = private constant [33 x i8] c"rehash_charp_lambdap40_src/class\00", align 1
@global_string.283 = private constant [37 x i8] c"map_rehash_charp_lambdap40_src/class\00", align 1
@global_string.284 = private constant [6 x i8] c"bool%\00", align 1
@global_string.285 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.286 = private constant [33 x i8] c"rehash_charp_lambdap40_src/class\00", align 1
@global_string.287 = private constant [37 x i8] c"map_rehash_charp_lambdap40_src/class\00", align 1
@global_string.288 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.289 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.290 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.291 = private constant [13 x i8] c"vector%<int>\00", align 1
@global_string.292 = private constant [13 x i8] c"src/class.nc\00", align 1
@global_string.293 = private constant [11 x i8] c"class_init\00", align 1
@global_string.294 = private constant [11 x i8] c"class_init\00", align 1
@global_string.295 = private constant [5 x i8] c"int%\00", align 1
@global_string.296 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.297 = private constant [27 x i8] c"initialize_int42_src/class\00", align 1
@global_string.298 = private constant [34 x i8] c"vector_initialize_int42_src/class\00", align 1
@global_string.299 = private constant [10 x i8] c"sCLClass%\00", align 1
@global_string.300 = private constant [13 x i8] c"src/class.nc\00", align 1
@global_string.301 = private constant [13 x i8] c"append_class\00", align 1
@global_string.302 = private constant [13 x i8] c"append_class\00", align 1
@global_string.303 = private constant [25 x i8] c"map%<char*%,sCLMethod*%>\00", align 1
@global_string.304 = private constant [13 x i8] c"src/class.nc\00", align 1
@global_string.305 = private constant [13 x i8] c"append_class\00", align 1
@global_string.306 = private constant [13 x i8] c"append_class\00", align 1
@global_string.307 = private constant [7 x i8] c"char*%\00", align 1
@global_string.308 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.309 = private constant [40 x i8] c"initialize_charp_sCLMethodp49_src/class\00", align 1
@global_string.310 = private constant [44 x i8] c"map_initialize_charp_sCLMethodp49_src/class\00", align 1
@global_string.311 = private constant [12 x i8] c"sCLMethod*%\00", align 1
@global_string.312 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.313 = private constant [40 x i8] c"initialize_charp_sCLMethodp49_src/class\00", align 1
@global_string.314 = private constant [44 x i8] c"map_initialize_charp_sCLMethodp49_src/class\00", align 1
@global_string.315 = private constant [6 x i8] c"bool%\00", align 1
@global_string.316 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.317 = private constant [40 x i8] c"initialize_charp_sCLMethodp49_src/class\00", align 1
@global_string.318 = private constant [44 x i8] c"map_initialize_charp_sCLMethodp49_src/class\00", align 1
@global_string.319 = private constant [24 x i8] c"map%<char*%,sCLField*%>\00", align 1
@global_string.320 = private constant [13 x i8] c"src/class.nc\00", align 1
@global_string.321 = private constant [13 x i8] c"append_class\00", align 1
@global_string.322 = private constant [13 x i8] c"append_class\00", align 1
@global_string.323 = private constant [7 x i8] c"char*%\00", align 1
@global_string.324 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.325 = private constant [39 x i8] c"initialize_charp_sCLFieldp51_src/class\00", align 1
@global_string.326 = private constant [43 x i8] c"map_initialize_charp_sCLFieldp51_src/class\00", align 1
@global_string.327 = private constant [11 x i8] c"sCLField*%\00", align 1
@global_string.328 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.329 = private constant [39 x i8] c"initialize_charp_sCLFieldp51_src/class\00", align 1
@global_string.330 = private constant [43 x i8] c"map_initialize_charp_sCLFieldp51_src/class\00", align 1
@global_string.331 = private constant [6 x i8] c"bool%\00", align 1
@global_string.332 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.333 = private constant [39 x i8] c"initialize_charp_sCLFieldp51_src/class\00", align 1
@global_string.334 = private constant [43 x i8] c"map_initialize_charp_sCLFieldp51_src/class\00", align 1
@global_string.335 = private constant [24 x i8] c"map%<char*%,sCLField*%>\00", align 1
@global_string.336 = private constant [13 x i8] c"src/class.nc\00", align 1
@global_string.337 = private constant [13 x i8] c"append_class\00", align 1
@global_string.338 = private constant [13 x i8] c"append_class\00", align 1
@global_string.339 = private constant [7 x i8] c"char*%\00", align 1
@global_string.340 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.341 = private constant [39 x i8] c"initialize_charp_sCLFieldp53_src/class\00", align 1
@global_string.342 = private constant [43 x i8] c"map_initialize_charp_sCLFieldp53_src/class\00", align 1
@global_string.343 = private constant [11 x i8] c"sCLField*%\00", align 1
@global_string.344 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.345 = private constant [39 x i8] c"initialize_charp_sCLFieldp53_src/class\00", align 1
@global_string.346 = private constant [43 x i8] c"map_initialize_charp_sCLFieldp53_src/class\00", align 1
@global_string.347 = private constant [6 x i8] c"bool%\00", align 1
@global_string.348 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.349 = private constant [39 x i8] c"initialize_charp_sCLFieldp53_src/class\00", align 1
@global_string.350 = private constant [43 x i8] c"map_initialize_charp_sCLFieldp53_src/class\00", align 1
@global_string.351 = private constant [7 x i8] c"char*%\00", align 1
@global_string.352 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.353 = private constant [35 x i8] c"rehash_charp_sCLClassp56_src/class\00", align 1
@global_string.354 = private constant [39 x i8] c"map_rehash_charp_sCLClassp56_src/class\00", align 1
@global_string.355 = private constant [11 x i8] c"sCLClass*%\00", align 1
@global_string.356 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.357 = private constant [35 x i8] c"rehash_charp_sCLClassp56_src/class\00", align 1
@global_string.358 = private constant [39 x i8] c"map_rehash_charp_sCLClassp56_src/class\00", align 1
@global_string.359 = private constant [6 x i8] c"bool%\00", align 1
@global_string.360 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.361 = private constant [35 x i8] c"rehash_charp_sCLClassp56_src/class\00", align 1
@global_string.362 = private constant [39 x i8] c"map_rehash_charp_sCLClassp56_src/class\00", align 1
@global_string.363 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.364 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.365 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.366 = private constant [7 x i8] c"object\00", align 1
@global_string.367 = private constant [7 x i8] c"object\00", align 1
@global_string.368 = private constant [10 x i8] c"sCLField%\00", align 1
@global_string.369 = private constant [13 x i8] c"src/class.nc\00", align 1
@global_string.370 = private constant [13 x i8] c"append_field\00", align 1
@global_string.371 = private constant [13 x i8] c"append_field\00", align 1
@global_string.372 = private constant [7 x i8] c"char*%\00", align 1
@global_string.373 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.374 = private constant [35 x i8] c"rehash_charp_sCLFieldp61_src/class\00", align 1
@global_string.375 = private constant [39 x i8] c"map_rehash_charp_sCLFieldp61_src/class\00", align 1
@global_string.376 = private constant [11 x i8] c"sCLField*%\00", align 1
@global_string.377 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.378 = private constant [35 x i8] c"rehash_charp_sCLFieldp61_src/class\00", align 1
@global_string.379 = private constant [39 x i8] c"map_rehash_charp_sCLFieldp61_src/class\00", align 1
@global_string.380 = private constant [6 x i8] c"bool%\00", align 1
@global_string.381 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.382 = private constant [35 x i8] c"rehash_charp_sCLFieldp61_src/class\00", align 1
@global_string.383 = private constant [39 x i8] c"map_rehash_charp_sCLFieldp61_src/class\00", align 1
@global_string.384 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.385 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.386 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.387 = private constant [11 x i8] c"sCLMethod%\00", align 1
@global_string.388 = private constant [13 x i8] c"src/class.nc\00", align 1
@global_string.389 = private constant [14 x i8] c"append_method\00", align 1
@global_string.390 = private constant [14 x i8] c"append_method\00", align 1
@global_string.391 = private constant [7 x i8] c"char*%\00", align 1
@global_string.392 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.393 = private constant [36 x i8] c"rehash_charp_sCLMethodp64_src/class\00", align 1
@global_string.394 = private constant [40 x i8] c"map_rehash_charp_sCLMethodp64_src/class\00", align 1
@global_string.395 = private constant [12 x i8] c"sCLMethod*%\00", align 1
@global_string.396 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.397 = private constant [36 x i8] c"rehash_charp_sCLMethodp64_src/class\00", align 1
@global_string.398 = private constant [40 x i8] c"map_rehash_charp_sCLMethodp64_src/class\00", align 1
@global_string.399 = private constant [6 x i8] c"bool%\00", align 1
@global_string.400 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.401 = private constant [36 x i8] c"rehash_charp_sCLMethodp64_src/class\00", align 1
@global_string.402 = private constant [40 x i8] c"map_rehash_charp_sCLMethodp64_src/class\00", align 1
@global_string.403 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.404 = private constant [32 x i8] c"unexpected error in map.rehash\0A\00", align 1
@global_string.405 = private constant [32 x i8] c"unexpected error in map.insert\0A\00", align 1
@global_string.406 = private constant [16 x i8] c"vector%<char*%>\00", align 1
@global_string.407 = private constant [13 x i8] c"src/class.nc\00", align 1
@global_string.408 = private constant [11 x i8] c"eval_class\00", align 1
@global_string.409 = private constant [11 x i8] c"eval_class\00", align 1
@global_string.410 = private constant [7 x i8] c"char*%\00", align 1
@global_string.411 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.412 = private constant [29 x i8] c"initialize_charp66_src/class\00", align 1
@global_string.413 = private constant [36 x i8] c"vector_initialize_charp66_src/class\00", align 1
@global_string.414 = private constant [1 x i8] zeroinitializer, align 1
@global_string.415 = private constant [7 x i8] c"char*%\00", align 1
@global_string.416 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.417 = private constant [28 x i8] c"push_back_charp68_src/class\00", align 1
@global_string.418 = private constant [35 x i8] c"vector_push_back_charp68_src/class\00", align 1
@global_string.419 = private constant [27 x i8] c"unexpected the source end\0A\00", align 1
@global_string.420 = private constant [38 x i8] c"Parser error. The error number is %d\0A\00", align 1
@global_string.421 = private constant [8 x i8] c"extends\00", align 1
@global_string.422 = private constant [47 x i8] c"Invalid parent class name. class not found(%s)\00", align 1
@global_string.423 = private constant [54 x i8] c"Invalid parent class name. recursive parent class(%s)\00", align 1
@global_string.424 = private constant [4 x i8] c"var\00", align 1
@global_string.425 = private constant [10 x i8] c"list_item\00", align 1
@global_string.426 = private constant [5 x i8] c"item\00", align 1
@global_string.427 = private constant [4 x i8] c"def\00", align 1
@global_string.428 = private constant [21 x i8] c"vector%<sVarTable*%>\00", align 1
@global_string.429 = private constant [13 x i8] c"src/class.nc\00", align 1
@global_string.430 = private constant [11 x i8] c"eval_class\00", align 1
@global_string.431 = private constant [11 x i8] c"eval_class\00", align 1
@global_string.432 = private constant [12 x i8] c"sVarTable*%\00", align 1
@global_string.433 = private constant [28 x i8] c"/usr/local//include/neo-c.h\00", align 1
@global_string.434 = private constant [34 x i8] c"initialize_sVarTablep77_src/class\00", align 1
@global_string.435 = private constant [41 x i8] c"vector_initialize_sVarTablep77_src/class\00", align 1
@global_string.436 = private constant [5 x i8] c"self\00", align 1
@global_string.437 = private constant [8 x i8] c"buffer%\00", align 1
@global_string.438 = private constant [13 x i8] c"src/class.nc\00", align 1
@global_string.439 = private constant [11 x i8] c"eval_class\00", align 1
@global_string.440 = private constant [11 x i8] c"eval_class\00", align 1
@global_string.441 = private constant [27 x i8] c"Invalid method result type\00", align 1
@global_string.442 = private constant [15 x i8] c"Compile error\0A\00", align 1
@global_string.443 = private constant [52 x i8] c"Require var or def keyword in the class. This is %s\00", align 1
@global_string.444 = private constant [38 x i8] c"Parser error. The error number is %d\0A\00", align 1

; Function Attrs: nounwind
declare void @llvm.va_start(i8*, ...) #0

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #0

; Function Attrs: nounwind
declare void @llvm.va_copy(i8*, i8*) #0

declare i32* @wcscpy(i32*, i32*)

declare i32* @wcsncpy(i32*, i32*, i64)

declare i32* @wcscat(i32*, i32*)

declare i32* @wcsncat(i32*, i32*, i64)

declare i32 @wcscmp(i32*, i32*)

declare i32 @wcsncmp(i32*, i32*, i64)

declare i32 @wcscasecmp(i32*, i32*)

declare i32 @wcsncasecmp(i32*, i32*, i64)

declare i32 @wcscasecmp_l(i32*, i32*, %__locale_struct*)

declare i32 @wcsncasecmp_l(i32*, i32*, i64, %__locale_struct*)

declare i32 @wcscoll(i32*, i32*)

declare i64 @wcsxfrm(i32*, i32*, i64)

declare i32 @wcscoll_l(i32*, i32*, %__locale_struct*)

declare i64 @wcsxfrm_l(i32*, i32*, i64, %__locale_struct*)

declare i32* @wcsdup(i32*)

declare i32* @wcschr(i32*, i32)

declare i32* @wcsrchr(i32*, i32)

declare i64 @wcscspn(i32*, i32*)

declare i64 @wcsspn(i32*, i32*)

declare i32* @wcspbrk(i32*, i32*)

declare i32* @wcsstr(i32*, i32*)

declare i32* @wcstok(i32*, i32*, i32**)

declare i64 @wcslen(i32*)

declare i32* @wcswcs(i32*, i32*)

declare i64 @wcsnlen(i32*, i64)

declare i32* @wmemchr(i32*, i32, i64)

declare i32 @wmemcmp(i32*, i32*, i64)

declare i32* @wmemcpy(i32*, i32*, i64)

declare i32* @wmemmove(i32*, i32*, i64)

declare i32* @wmemset(i32*, i32, i64)

declare i32 @btowc(i32)

declare i32 @wctob(i32)

declare i32 @mbsinit(%anon0*)

declare i64 @mbrtowc(i32*, i8*, i64, %anon0*)

declare i64 @wcrtomb(i8*, i32, %anon0*)

declare i64 @__mbrlen(i8*, i64, %anon0*)

declare i64 @mbrlen(i8*, i64, %anon0*)

declare i64 @mbsrtowcs(i32*, i8**, i64, %anon0*)

declare i64 @wcsrtombs(i8*, i32**, i64, %anon0*)

declare i64 @mbsnrtowcs(i32*, i8**, i64, i64, %anon0*)

declare i64 @wcsnrtombs(i8*, i32**, i64, i64, %anon0*)

declare i32 @wcwidth(i32)

declare i32 @wcswidth(i32*, i64)

declare double @wcstod(i32*, i32**)

declare float @wcstof(i32*, i32**)

declare fp128 @wcstold(i32*, i32**)

declare i64 @wcstol(i32*, i32**, i32)

declare i64 @wcstoul(i32*, i32**, i32)

declare i64 @wcstoll(i32*, i32**, i32)

declare i64 @wcstoull(i32*, i32**, i32)

declare i32* @wcpcpy(i32*, i32*)

declare i32* @wcpncpy(i32*, i32*, i64)

declare %_IO_FILE* @open_wmemstream(i32**, i64*)

declare i32 @fwide(%_IO_FILE*, i32)

declare i32 @fwprintf(%_IO_FILE*, i32*, ...)

declare i32 @wprintf(i32*, ...)

declare i32 @swprintf(i32*, i64, i32*, ...)

declare i32 @vfwprintf(%_IO_FILE*, i32*, %__builtin_va_list.0)

declare i32 @vwprintf(i32*, %__builtin_va_list.0)

declare i32 @vswprintf(i32*, i64, i32*, %__builtin_va_list.0)

declare i32 @fwscanf(%_IO_FILE*, i32*, ...)

declare i32 @wscanf(i32*, ...)

declare i32 @swscanf(i32*, i32*, ...)

declare i32 @vfwscanf(%_IO_FILE*, i32*, %__builtin_va_list.0)

declare i32 @vwscanf(i32*, %__builtin_va_list.0)

declare i32 @vswscanf(i32*, i32*, %__builtin_va_list.0)

declare i32 @fgetwc(%_IO_FILE*)

declare i32 @getwc(%_IO_FILE*)

declare i32 @getwchar()

declare i32 @fputwc(i32, %_IO_FILE*)

declare i32 @putwc(i32, %_IO_FILE*)

declare i32 @putwchar(i32)

declare i32* @fgetws(i32*, i32, %_IO_FILE*)

declare i32 @fputws(i32*, %_IO_FILE*)

declare i32 @ungetwc(i32, %_IO_FILE*)

declare i64 @wcsftime(i32*, i64, i32*, %tm*)

declare i32 @access(i8*, i32)

declare i32 @faccessat(i32, i8*, i32, i32)

declare i64 @lseek(i32, i64, i32)

declare i32 @close(i32)

declare i64 @read(i32, i8*, i64)

declare i64 @write(i32, i8*, i64)

declare i64 @pread(i32, i8*, i64, i64)

declare i64 @pwrite(i32, i8*, i64, i64)

declare i32 @pipe(i32*)

declare i32 @alarm(i32)

declare i32 @sleep(i32)

declare i32 @ualarm(i32, i32)

declare i32 @usleep(i32)

declare i32 @pause()

declare i32 @chown(i8*, i32, i32)

declare i32 @fchown(i32, i32, i32)

declare i32 @lchown(i8*, i32, i32)

declare i32 @fchownat(i32, i8*, i32, i32, i32)

declare i32 @chdir(i8*)

declare i32 @fchdir(i32)

declare i8* @getcwd(i8*, i64)

declare i8* @getwd(i8*)

declare i32 @dup(i32)

declare i32 @dup2(i32, i32)

declare i32 @execve(i8*, i8**, i8**)

declare i32 @fexecve(i32, i8**, i8**)

declare i32 @execv(i8*, i8**)

declare i32 @execle(i8*, i8*, ...)

declare i32 @execl(i8*, i8*, ...)

declare i32 @execvp(i8*, i8**)

declare i32 @execlp(i8*, i8*, ...)

declare i32 @nice(i32)

declare void @_exit(i32)

declare i64 @pathconf(i8*, i32)

declare i64 @fpathconf(i32, i32)

declare i64 @sysconf(i32)

declare i64 @confstr(i32, i8*, i64)

declare i32 @getpid()

declare i32 @getppid()

declare i32 @getpgrp()

declare i32 @__getpgid(i32)

declare i32 @getpgid(i32)

declare i32 @setpgid(i32, i32)

declare i32 @setpgrp()

declare i32 @setsid()

declare i32 @getsid(i32)

declare i32 @getuid()

declare i32 @geteuid()

declare i32 @getgid()

declare i32 @getegid()

declare i32 @getgroups(i32, i32*)

declare i32 @setuid(i32)

declare i32 @setreuid(i32, i32)

declare i32 @seteuid(i32)

declare i32 @setgid(i32)

declare i32 @setregid(i32, i32)

declare i32 @setegid(i32)

declare i32 @fork()

declare i32 @vfork()

declare i8* @ttyname(i32)

declare i32 @ttyname_r(i32, i8*, i64)

declare i32 @isatty(i32)

declare i32 @ttyslot()

declare i32 @link(i8*, i8*)

declare i32 @linkat(i32, i8*, i32, i8*, i32)

declare i32 @symlink(i8*, i8*)

declare i64 @readlink(i8*, i8*, i64)

declare i32 @symlinkat(i8*, i32, i8*)

declare i64 @readlinkat(i32, i8*, i8*, i64)

declare i32 @unlink(i8*)

declare i32 @unlinkat(i32, i8*, i32)

declare i32 @rmdir(i8*)

declare i32 @tcgetpgrp(i32)

declare i32 @tcsetpgrp(i32, i32)

declare i8* @getlogin()

declare i32 @getlogin_r(i8*, i64)

declare i32 @setlogin(i8*)

declare i32 @getopt(i32, i8**, i8*)

declare i32 @gethostname(i8*, i64)

declare i32 @sethostname(i8*, i64)

declare i32 @sethostid(i64)

declare i32 @getdomainname(i8*, i64)

declare i32 @setdomainname(i8*, i64)

declare i32 @vhangup()

declare i32 @revoke(i8*)

declare i32 @profil(i16*, i64, i64, i32)

declare i32 @acct(i8*)

declare i8* @getusershell()

declare void @endusershell()

declare void @setusershell()

declare i32 @daemon(i32, i32)

declare i32 @chroot(i8*)

declare i8* @getpass(i8*)

declare i32 @fsync(i32)

declare i64 @gethostid()

declare void @sync()

declare i32 @getpagesize()

declare i32 @getdtablesize()

declare i32 @truncate(i8*, i64)

declare i32 @ftruncate(i32, i64)

declare i32 @brk(i8*)

declare i8* @sbrk(i64)

declare i64 @syscall(i64, ...)

declare i32 @lockf(i32, i32, i64)

declare i32 @fdatasync(i32)

declare i8* @crypt(i8*, i8*)

declare void @swab(i8*, i8*, i64)

declare i32 @getentropy(i8*, i64)

declare i32 @remove(i8*)

declare i32 @rename(i8*, i8*)

declare i32 @renameat(i32, i8*, i32, i8*)

declare %_IO_FILE* @tmpfile()

declare i8* @tmpnam(i8*)

declare i8* @tmpnam_r(i8*)

declare i8* @tempnam(i8*, i8*)

declare i32 @fclose(%_IO_FILE*)

declare i32 @fflush(%_IO_FILE*)

declare i32 @fflush_unlocked(%_IO_FILE*)

declare %_IO_FILE* @fopen(i8*, i8*)

declare %_IO_FILE* @freopen(i8*, i8*, %_IO_FILE*)

declare %_IO_FILE* @fdopen(i32, i8*)

declare %_IO_FILE* @fmemopen(i8*, i64, i8*)

declare %_IO_FILE* @open_memstream(i8**, i64*)

declare void @setbuf(%_IO_FILE*, i8*)

declare i32 @setvbuf(%_IO_FILE*, i8*, i32, i64)

declare void @setbuffer(%_IO_FILE*, i8*, i64)

declare void @setlinebuf(%_IO_FILE*)

declare i32 @fprintf(%_IO_FILE*, i8*, ...)

declare i32 @printf(i8*, ...)

declare i32 @sprintf(i8*, i8*, ...)

declare i32 @vfprintf(%_IO_FILE*, i8*, %__builtin_va_list.0)

declare i32 @vprintf(i8*, %__builtin_va_list.0)

declare i32 @vsprintf(i8*, i8*, %__builtin_va_list.0)

declare i32 @snprintf(i8*, i64, i8*, ...)

declare i32 @vsnprintf(i8*, i64, i8*, %__builtin_va_list.0)

declare i32 @vdprintf(i32, i8*, %__builtin_va_list.0)

declare i32 @dprintf(i32, i8*, ...)

declare i32 @fscanf(%_IO_FILE*, i8*, ...)

declare i32 @scanf(i8*, ...)

declare i32 @sscanf(i8*, i8*, ...)

declare i32 @vfscanf(%_IO_FILE*, i8*, %__builtin_va_list.0)

declare i32 @vscanf(i8*, %__builtin_va_list.0)

declare i32 @vsscanf(i8*, i8*, %__builtin_va_list.0)

declare i32 @fgetc(%_IO_FILE*)

declare i32 @getc(%_IO_FILE*)

declare i32 @getchar()

declare i32 @getc_unlocked(%_IO_FILE*)

declare i32 @getchar_unlocked()

declare i32 @fgetc_unlocked(%_IO_FILE*)

declare i32 @fputc(i32, %_IO_FILE*)

declare i32 @putc(i32, %_IO_FILE*)

declare i32 @putchar(i32)

declare i32 @fputc_unlocked(i32, %_IO_FILE*)

declare i32 @putc_unlocked(i32, %_IO_FILE*)

declare i32 @putchar_unlocked(i32)

declare i32 @getw(%_IO_FILE*)

declare i32 @putw(i32, %_IO_FILE*)

declare i8* @fgets(i8*, i32, %_IO_FILE*)

declare i64 @__getdelim(i8**, i64*, i32, %_IO_FILE*)

declare i64 @getdelim(i8**, i64*, i32, %_IO_FILE*)

declare i64 @getline(i8**, i64*, %_IO_FILE*)

declare i32 @fputs(i8*, %_IO_FILE*)

declare i32 @puts(i8*)

declare i32 @ungetc(i32, %_IO_FILE*)

declare i64 @fread(i8*, i64, i64, %_IO_FILE*)

declare i64 @fwrite(i8*, i64, i64, %_IO_FILE*)

declare i64 @fread_unlocked(i8*, i64, i64, %_IO_FILE*)

declare i64 @fwrite_unlocked(i8*, i64, i64, %_IO_FILE*)

declare i32 @fseek(%_IO_FILE*, i64, i32)

declare i64 @ftell(%_IO_FILE*)

declare void @rewind(%_IO_FILE*)

declare i32 @fseeko(%_IO_FILE*, i64, i32)

declare i64 @ftello(%_IO_FILE*)

declare i32 @fgetpos(%_IO_FILE*, %_G_fpos_t*)

declare i32 @fsetpos(%_IO_FILE*, %_G_fpos_t*)

declare void @clearerr(%_IO_FILE*)

declare i32 @feof(%_IO_FILE*)

declare i32 @ferror(%_IO_FILE*)

declare void @clearerr_unlocked(%_IO_FILE*)

declare i32 @feof_unlocked(%_IO_FILE*)

declare i32 @ferror_unlocked(%_IO_FILE*)

declare void @perror(i8*)

declare i32 @fileno(%_IO_FILE*)

declare i32 @fileno_unlocked(%_IO_FILE*)

declare %_IO_FILE* @popen(i8*, i8*)

declare i32 @pclose(%_IO_FILE*)

declare i8* @ctermid(i8*)

declare void @flockfile(%_IO_FILE*)

declare i32 @ftrylockfile(%_IO_FILE*)

declare void @funlockfile(%_IO_FILE*)

declare i32 @__uflow(%_IO_FILE*)

declare i32 @__overflow(%_IO_FILE*, i32)

declare i64 @__ctype_get_mb_cur_max()

declare double @atof(i8*)

declare i32 @atoi(i8*)

declare i64 @atol(i8*)

declare i64 @atoll(i8*)

declare double @strtod(i8*, i8**)

declare float @strtof(i8*, i8**)

declare fp128 @strtold(i8*, i8**)

declare i64 @strtol(i8*, i8**, i32)

declare i64 @strtoul(i8*, i8**, i32)

declare i64 @strtoq(i8*, i8**, i32)

declare i64 @strtouq(i8*, i8**, i32)

declare i64 @strtoll(i8*, i8**, i32)

declare i64 @strtoull(i8*, i8**, i32)

declare i8* @l64a(i64)

declare i64 @a64l(i8*)

declare i32 @select(i32, %anon7*, %anon7*, %anon7*, %timeval*)

declare i32 @pselect(i32, %anon7*, %anon7*, %anon7*, %timespec*, %anon6*)

declare i64 @random()

declare void @srandom(i32)

declare i8* @initstate(i32, i8*, i64)

declare i8* @setstate(i8*)

declare i32 @random_r(%random_data*, i32*)

declare i32 @srandom_r(i32, %random_data*)

declare i32 @initstate_r(i32, i8*, i64, %random_data*)

declare i32 @setstate_r(i8*, %random_data*)

declare i32 @rand()

declare void @srand(i32)

declare i32 @rand_r(i32*)

declare double @drand48()

declare double @erand48(i16*)

declare i64 @lrand48()

declare i64 @nrand48(i16*)

declare i64 @mrand48()

declare i64 @jrand48(i16*)

declare void @srand48(i64)

declare i16* @seed48(i16*)

declare void @lcong48(i16*)

declare i32 @drand48_r(%drand48_data*, double*)

declare i32 @erand48_r(i16*, %drand48_data*, double*)

declare i32 @lrand48_r(%drand48_data*, i64*)

declare i32 @nrand48_r(i16*, %drand48_data*, i64*)

declare i32 @mrand48_r(%drand48_data*, i64*)

declare i32 @jrand48_r(i16*, %drand48_data*, i64*)

declare i32 @srand48_r(i64, %drand48_data*)

declare i32 @seed48_r(i16*, %drand48_data*)

declare i32 @lcong48_r(i16*, %drand48_data*)

declare i8* @malloc(i64)

declare i8* @calloc(i64, i64)

declare i8* @realloc(i8*, i64)

declare void @free(i8*)

declare i8* @alloca(i64)

declare i8* @valloc(i64)

declare i32 @posix_memalign(i8**, i64, i64)

declare i8* @aligned_alloc(i64, i64)

declare void @abort()

declare i32 @atexit(void ()*)

declare i32 @at_quick_exit(void ()*)

declare i32 @on_exit(void (i32, i8*)*, i8*)

declare void @exit(i32)

declare void @quick_exit(i32)

declare void @_Exit(i32)

declare i8* @getenv(i8*)

declare i32 @putenv(i8*)

declare i32 @setenv(i8*, i8*, i32)

declare i32 @unsetenv(i8*)

declare i32 @clearenv()

declare i8* @mktemp(i8*)

declare i32 @mkstemp(i8*)

declare i32 @mkstemps(i8*, i32)

declare i8* @mkdtemp(i8*)

declare i32 @system(i8*)

declare i8* @realpath(i8*, i8*)

declare i8* @bsearch(i8*, i8*, i64, i64, i32 (i8*, i8*)*)

declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)*)

declare i32 @abs(i32)

declare i64 @labs(i64)

declare i64 @llabs(i64)

declare %anon3 @div(i32, i32)

declare %anon4 @ldiv(i64, i64)

declare %anon5 @lldiv(i64, i64)

declare i8* @ecvt(double, i32, i32*, i32*)

declare i8* @fcvt(double, i32, i32*, i32*)

declare i8* @gcvt(double, i32, i8*)

declare i8* @qecvt(fp128, i32, i32*, i32*)

declare i8* @qfcvt(fp128, i32, i32*, i32*)

declare i8* @qgcvt(fp128, i32, i8*)

declare i32 @ecvt_r(double, i32, i32*, i32*, i8*, i64)

declare i32 @fcvt_r(double, i32, i32*, i32*, i8*, i64)

declare i32 @qecvt_r(fp128, i32, i32*, i32*, i8*, i64)

declare i32 @qfcvt_r(fp128, i32, i32*, i32*, i8*, i64)

declare i32 @mblen(i8*, i64)

declare i32 @mbtowc(i32*, i8*, i64)

declare i32 @wctomb(i8*, i32)

declare i64 @mbstowcs(i32*, i8*, i64)

declare i64 @wcstombs(i8*, i32*, i64)

declare i32 @rpmatch(i8*)

declare i32 @getsubopt(i8**, i8**, i8**)

declare i32 @getloadavg(double*, i32)

declare i8* @memcpy(i8*, i8*, i64)

declare i8* @memmove(i8*, i8*, i64)

declare i8* @memccpy(i8*, i8*, i32, i64)

declare i8* @memset(i8*, i32, i64)

declare i32 @memcmp(i8*, i8*, i64)

declare i8* @memchr(i8*, i32, i64)

declare i8* @strcpy(i8*, i8*)

declare i8* @strncpy(i8*, i8*, i64)

declare i8* @strcat(i8*, i8*)

declare i8* @strncat(i8*, i8*, i64)

declare i32 @strcmp(i8*, i8*)

declare i32 @strncmp(i8*, i8*, i64)

declare i32 @strcoll(i8*, i8*)

declare i64 @strxfrm(i8*, i8*, i64)

declare i32 @strcoll_l(i8*, i8*, %__locale_struct*)

declare i64 @strxfrm_l(i8*, i8*, i64, %__locale_struct*)

declare i8* @strdup(i8*)

declare i8* @strndup(i8*, i64)

declare i8* @strchr(i8*, i32)

declare i8* @strrchr(i8*, i32)

declare i64 @strcspn(i8*, i8*)

declare i64 @strspn(i8*, i8*)

declare i8* @strpbrk(i8*, i8*)

declare i8* @strstr(i8*, i8*)

declare i8* @strtok(i8*, i8*)

declare i8* @__strtok_r(i8*, i8*, i8**)

declare i8* @strtok_r(i8*, i8*, i8**)

declare i64 @strlen(i8*)

declare i64 @strnlen(i8*, i64)

declare i8* @strerror(i32)

declare i32 @strerror_r(i32, i8*, i64)

declare i8* @strerror_l(i32, %__locale_struct*)

declare i32 @bcmp(i8*, i8*, i64)

declare void @bcopy(i8*, i8*, i64)

declare void @bzero(i8*, i64)

declare i8* @index(i8*, i32)

declare i8* @rindex(i8*, i32)

declare i32 @ffs(i32)

declare i32 @ffsl(i64)

declare i32 @ffsll(i64)

declare i32 @strcasecmp(i8*, i8*)

declare i32 @strncasecmp(i8*, i8*, i64)

declare i32 @strcasecmp_l(i8*, i8*, %__locale_struct*)

declare i32 @strncasecmp_l(i8*, i8*, i64, %__locale_struct*)

declare void @explicit_bzero(i8*, i64)

declare i8* @strsep(i8**, i8*)

declare i8* @strsignal(i32)

declare i8* @__stpcpy(i8*, i8*)

declare i8* @stpcpy(i8*, i8*)

declare i8* @__stpncpy(i8*, i8*, i64)

declare i8* @stpncpy(i8*, i8*, i64)

declare %real_pcre* @pcre_compile(i8*, i32, i8**, i32*, i8*)

declare %real_pcre16* @pcre16_compile(i16*, i32, i8**, i32*, i8*)

declare %real_pcre32* @pcre32_compile(i32*, i32, i8**, i32*, i8*)

declare %real_pcre* @pcre_compile2(i8*, i32, i32*, i8**, i32*, i8*)

declare %real_pcre16* @pcre16_compile2(i16*, i32, i32*, i8**, i32*, i8*)

declare %real_pcre32* @pcre32_compile2(i32*, i32, i32*, i8**, i32*, i8*)

declare i32 @pcre_config(i32, i8*)

declare i32 @pcre16_config(i32, i8*)

declare i32 @pcre32_config(i32, i8*)

declare i32 @pcre_copy_named_substring(%real_pcre*, i8*, i32*, i32, i8*, i8*, i32)

declare i32 @pcre16_copy_named_substring(%real_pcre16*, i16*, i32*, i32, i16*, i16*, i32)

declare i32 @pcre32_copy_named_substring(%real_pcre32*, i32*, i32*, i32, i32*, i32*, i32)

declare i32 @pcre_copy_substring(i8*, i32*, i32, i32, i8*, i32)

declare i32 @pcre16_copy_substring(i16*, i32*, i32, i32, i16*, i32)

declare i32 @pcre32_copy_substring(i32*, i32*, i32, i32, i32*, i32)

declare i32 @pcre_dfa_exec(%real_pcre*, %pcre_extra*, i8*, i32, i32, i32, i32*, i32, i32*, i32)

declare i32 @pcre16_dfa_exec(%real_pcre16*, %pcre16_extra*, i16*, i32, i32, i32, i32*, i32, i32*, i32)

declare i32 @pcre32_dfa_exec(%real_pcre32*, %pcre32_extra*, i32*, i32, i32, i32, i32*, i32, i32*, i32)

declare i32 @pcre_exec(%real_pcre*, %pcre_extra*, i8*, i32, i32, i32, i32*, i32)

declare i32 @pcre16_exec(%real_pcre16*, %pcre16_extra*, i16*, i32, i32, i32, i32*, i32)

declare i32 @pcre32_exec(%real_pcre32*, %pcre32_extra*, i32*, i32, i32, i32, i32*, i32)

declare i32 @pcre_jit_exec(%real_pcre*, %pcre_extra*, i8*, i32, i32, i32, i32*, i32, %real_pcre_jit_stack*)

declare i32 @pcre16_jit_exec(%real_pcre16*, %pcre16_extra*, i16*, i32, i32, i32, i32*, i32, %real_pcre16_jit_stack*)

declare i32 @pcre32_jit_exec(%real_pcre32*, %pcre32_extra*, i32*, i32, i32, i32, i32*, i32, %real_pcre32_jit_stack*)

declare void @pcre_free_substring(i8*)

declare void @pcre16_free_substring(i16*)

declare void @pcre32_free_substring(i32*)

declare void @pcre_free_substring_list(i8**)

declare void @pcre16_free_substring_list(i16**)

declare void @pcre32_free_substring_list(i32**)

declare i32 @pcre_fullinfo(%real_pcre*, %pcre_extra*, i32, i8*)

declare i32 @pcre16_fullinfo(%real_pcre16*, %pcre16_extra*, i32, i8*)

declare i32 @pcre32_fullinfo(%real_pcre32*, %pcre32_extra*, i32, i8*)

declare i32 @pcre_get_named_substring(%real_pcre*, i8*, i32*, i32, i8*, i8**)

declare i32 @pcre16_get_named_substring(%real_pcre16*, i16*, i32*, i32, i16*, i16**)

declare i32 @pcre32_get_named_substring(%real_pcre32*, i32*, i32*, i32, i32*, i32**)

declare i32 @pcre_get_stringnumber(%real_pcre*, i8*)

declare i32 @pcre16_get_stringnumber(%real_pcre16*, i16*)

declare i32 @pcre32_get_stringnumber(%real_pcre32*, i32*)

declare i32 @pcre_get_stringtable_entries(%real_pcre*, i8*, i8**, i8**)

declare i32 @pcre16_get_stringtable_entries(%real_pcre16*, i16*, i16**, i16**)

declare i32 @pcre32_get_stringtable_entries(%real_pcre32*, i32*, i32**, i32**)

declare i32 @pcre_get_substring(i8*, i32*, i32, i32, i8**)

declare i32 @pcre16_get_substring(i16*, i32*, i32, i32, i16**)

declare i32 @pcre32_get_substring(i32*, i32*, i32, i32, i32**)

declare i32 @pcre_get_substring_list(i8*, i32*, i32, i8***)

declare i32 @pcre16_get_substring_list(i16*, i32*, i32, i16***)

declare i32 @pcre32_get_substring_list(i32*, i32*, i32, i32***)

declare i8* @pcre_maketables()

declare i8* @pcre16_maketables()

declare i8* @pcre32_maketables()

declare i32 @pcre_refcount(%real_pcre*, i32)

declare i32 @pcre16_refcount(%real_pcre16*, i32)

declare i32 @pcre32_refcount(%real_pcre32*, i32)

declare %pcre_extra* @pcre_study(%real_pcre*, i32, i8**)

declare %pcre16_extra* @pcre16_study(%real_pcre16*, i32, i8**)

declare %pcre32_extra* @pcre32_study(%real_pcre32*, i32, i8**)

declare void @pcre_free_study(%pcre_extra*)

declare void @pcre16_free_study(%pcre16_extra*)

declare void @pcre32_free_study(%pcre32_extra*)

declare i8* @pcre_version()

declare i8* @pcre16_version()

declare i8* @pcre32_version()

declare i32 @pcre_pattern_to_host_byte_order(%real_pcre*, %pcre_extra*, i8*)

declare i32 @pcre16_pattern_to_host_byte_order(%real_pcre16*, %pcre16_extra*, i8*)

declare i32 @pcre32_pattern_to_host_byte_order(%real_pcre32*, %pcre32_extra*, i8*)

declare i32 @pcre16_utf16_to_host_byte_order(i16*, i16*, i32, i32*, i32)

declare i32 @pcre32_utf32_to_host_byte_order(i32*, i32*, i32, i32*, i32)

declare %real_pcre_jit_stack* @pcre_jit_stack_alloc(i32, i32)

declare %real_pcre16_jit_stack* @pcre16_jit_stack_alloc(i32, i32)

declare %real_pcre32_jit_stack* @pcre32_jit_stack_alloc(i32, i32)

declare void @pcre_jit_stack_free(%real_pcre_jit_stack*)

declare void @pcre16_jit_stack_free(%real_pcre16_jit_stack*)

declare void @pcre32_jit_stack_free(%real_pcre32_jit_stack*)

declare void @pcre_assign_jit_stack(%pcre_extra*, %real_pcre_jit_stack* (i8*)*, i8*)

declare void @pcre16_assign_jit_stack(%pcre16_extra*, %real_pcre16_jit_stack* (i8*)*, i8*)

declare void @pcre32_assign_jit_stack(%pcre32_extra*, %real_pcre32_jit_stack* (i8*)*, i8*)

declare void @pcre_jit_free_unused_memory()

declare void @pcre16_jit_free_unused_memory()

declare void @pcre32_jit_free_unused_memory()

declare i8* @xcalloc(i64, i64)

declare i8* @xmalloc(i64)

declare i8* @xmemdup(i8*)

declare i8* @xrealloc(i8*, i64)

declare void @xfree(i8*)

declare i8* @xstrncpy(i8*, i8*, i32)

declare i8* @xstrncat(i8*, i8*, i32)

declare i8* @xmemcpy(i8*, i8*, i64)

declare i8* @xasprintf(i8*, ...)

declare i8* @xsprintf(i8*, ...)

declare i8* @xbasename(i8*)

declare i8* @xrealpath(i8*)

declare i8* @string(i8*)

declare i8* @string_from_wchar_t(i32*, i8*)

declare i32* @wstring(i8*)

declare i32* @wstring_from_wchar_t(i32*)

declare i8* @debug_xcalloc(i64, i64, i8*, i8*, i32, i8*, i8*)

declare void @debug_show_none_freed_heap_memory()

declare void @p(i8*)

declare i8* @"op_add_char*_char*"(i8*, i8*)

declare i8* @"op_mult_char*_int"(i8*, i32)

declare i32* @"op_add_wchar_t*_wchar_t*"(i32*, i32*)

declare i32* @"op_mult_wchar_t*_int"(i32*, i32)

declare %buffer* @buffer_initialize(%buffer*)

declare void @buffer_finalize(%buffer*)

declare void @buffer_append(%buffer*, i8*, i64)

declare void @buffer_append_char(%buffer*, i8)

declare void @buffer_append_str(%buffer*, i8*)

declare void @buffer_append_nullterminated_str(%buffer*, i8*)

declare i8* @buffer_to_string(%buffer*)

declare i32 @buffer_length(%buffer*)

declare %regex_struct* @regex(i8*, i1, i1, i1, i1, i1, i1, i1, i1)

declare i8* @op_add_string_string(i8*, i8*)

declare i8* @op_mult_string_int(i8*, i32)

declare i1 @string_equals(i8*, i8*)

declare i32 @string_length(i8*)

declare i32 @string_get_hash_key(i8*)

declare i8* @string_substring(i8*, i32, i32)

declare i32 @string_index(i8*, i8*, i32)

declare i32 @string_rindex(i8*, i8*, i32)

declare i32 @string_index_regex(i8*, %regex_struct*, i32)

declare i32 @string_rindex_regex(i8*, %regex_struct*, i32)

declare i8* @string_delete(i8*, i32)

declare i8* @string_delete_range(i8*, i32, i32)

declare i8* @string_printable(i8*)

declare i8* @string_sub(i8*, %regex_struct*, i8*, %list__charp*)

declare i1 @string_match(i8*, %regex_struct*, %list__charp*)

declare %list__charp* @string_scan(i8*, %regex_struct*)

declare i32* @string_to_wstring(i8*)

declare i8* @string_reverse(i8*)

declare %list__charp* @string_split_char(i8*, i8)

declare %list__charp* @string_split(i8*, %regex_struct*)

declare void @string_replace(i8*, i32, i8)

declare i8 @string_item(i8*, i32, i8)

declare %regex_struct* @string_to_regex(i8*)

declare i32* @op_add_wstring_wstring(i32*, i32*)

declare i32* @op_mult_wstring_int(i32*, i32)

declare i1 @wstring_equals(i32*, i32*)

declare i32 @wstring_length(i32*)

declare i32 @wstring_get_hash_key(i32*)

declare i32* @wstring_reverse(i32*)

declare i32* @wstring_substring(i32*, i32, i32)

declare i32 @wstring_index(i32*, i32*, i32)

declare i32 @wstring_rindex(i32*, i32*, i32)

declare i32* @wstring_delete(i32*, i32)

declare i32* @wstring_delete_range(i32*, i32, i32)

declare i8* @wstring_to_string(i32*, i8*)

declare i32* @wstring_printable(i32*)

declare void @wstring_replace(i32*, i32, i32)

declare i32 @wstring_item(i32*, i32, i32)

declare void @xassert(i8*, i1)

declare i32 @stat(i8*, %stat*)

declare i32 @fstat(i32, %stat*)

declare i32 @fstatat(i32, i8*, %stat*, i32)

declare i32 @lstat(i8*, %stat*)

declare i32 @chmod(i8*, i32)

declare i32 @lchmod(i8*, i32)

declare i32 @fchmod(i32, i32)

declare i32 @fchmodat(i32, i8*, i32, i32)

declare i32 @umask(i32)

declare i32 @mkdir(i8*, i32)

declare i32 @mkdirat(i32, i8*, i32)

declare i32 @mknod(i8*, i32, i64)

declare i32 @mknodat(i32, i8*, i32, i64)

declare i32 @mkfifo(i8*, i32)

declare i32 @mkfifoat(i32, i8*, i32)

declare i32 @utimensat(i32, i8*, %timespec*, i32)

declare i32 @futimens(i32, %timespec*)

declare i32 @__fxstat(i32, i32, %stat*)

declare i32 @__xstat(i32, i8*, %stat*)

declare i32 @__lxstat(i32, i8*, %stat*)

declare i32 @__fxstatat(i32, i32, i8*, %stat*, i32)

declare i32 @__xmknod(i32, i8*, i32, i64*)

declare i32 @__xmknodat(i32, i32, i8*, i32, i64*)

declare i32 @fcntl(i32, i32, ...)

declare i32 @open(i8*, i32, ...)

declare i32 @openat(i32, i8*, i32, ...)

declare i32 @creat(i8*, i32)

declare i32 @posix_fadvise(i32, i64, i64, i32)

declare i32 @posix_fallocate(i32, i64, i64)

declare i16** @__ctype_b_loc()

declare i32** @__ctype_tolower_loc()

declare i32** @__ctype_toupper_loc()

declare i32 @isalnum(i32)

declare i32 @isalpha(i32)

declare i32 @iscntrl(i32)

declare i32 @isdigit(i32)

declare i32 @islower(i32)

declare i32 @isgraph(i32)

declare i32 @isprint(i32)

declare i32 @ispunct(i32)

declare i32 @isspace(i32)

declare i32 @isupper(i32)

declare i32 @isxdigit(i32)

declare i32 @tolower(i32)

declare i32 @toupper(i32)

declare i32 @isblank(i32)

declare i32 @isascii(i32)

declare i32 @toascii(i32)

declare i32 @_toupper(i32)

declare i32 @_tolower(i32)

declare i32 @isalnum_l(i32, %__locale_struct*)

declare i32 @isalpha_l(i32, %__locale_struct*)

declare i32 @iscntrl_l(i32, %__locale_struct*)

declare i32 @isdigit_l(i32, %__locale_struct*)

declare i32 @islower_l(i32, %__locale_struct*)

declare i32 @isgraph_l(i32, %__locale_struct*)

declare i32 @isprint_l(i32, %__locale_struct*)

declare i32 @ispunct_l(i32, %__locale_struct*)

declare i32 @isspace_l(i32, %__locale_struct*)

declare i32 @isupper_l(i32, %__locale_struct*)

declare i32 @isxdigit_l(i32, %__locale_struct*)

declare i32 @isblank_l(i32, %__locale_struct*)

declare i32 @__tolower_l(i32, %__locale_struct*)

declare i32 @tolower_l(i32, %__locale_struct*)

declare i32 @__toupper_l(i32, %__locale_struct*)

declare i32 @toupper_l(i32, %__locale_struct*)

declare i8* @setlocale(i32, i8*)

declare %lconv* @localeconv()

declare %__locale_struct* @newlocale(i32, i8*, %__locale_struct*)

declare %__locale_struct* @duplocale(%__locale_struct*)

declare void @freelocale(%__locale_struct*)

declare %__locale_struct* @uselocale(%__locale_struct*)

declare i8* @dlopen(i8*, i32)

declare i32 @dlclose(i8*)

declare i8* @dlsym(i8*, i8*)

declare i8* @dlerror()

declare i32 @cfgetospeed(%termios*)

declare i32 @cfgetispeed(%termios*)

declare i32 @cfsetospeed(%termios*, i32)

declare i32 @cfsetispeed(%termios*, i32)

declare i32 @cfsetspeed(%termios*, i32)

declare i32 @tcgetattr(i32, %termios*)

declare i32 @tcsetattr(i32, i32, %termios*)

declare void @cfmakeraw(%termios*)

declare i32 @tcsendbreak(i32, i32)

declare i32 @tcdrain(i32)

declare i32 @tcflush(i32, i32)

declare i32 @tcflow(i32, i32)

declare i32 @tcgetsid(i32)

define void @class_init() {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %2 = call i8* @debug_xcalloc(i64 1, i64 32, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_string.10, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.11, i32 0, i32 0), i32 252, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.13, i32 0, i32 0))
  %3 = bitcast i8* %2 to %map__charp_sCLClassp*
  %4 = call %map__charp_sCLClassp* @"map_initialize_charp_sCLClassp1_src/class"(%map__charp_sCLClassp* %3)
  store %map__charp_sCLClassp* %4, %map__charp_sCLClassp** @gClasses, align 8
  call void @append_class(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.26, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_string.27, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_string.28, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_string.29, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.30, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_string.31, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_string.32, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_string.33, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.34, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_string.35, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_string.36, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_string.37, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_string.38, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_string.39, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_string.40, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_string.41, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_string.42, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_string.43, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_string.44, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.45, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.46, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.47, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.48, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.49, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.50, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.51, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.52, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.53, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.54, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.55, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.56, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.57, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.58, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.59, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.60, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.61, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.62, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.63, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.64, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.65, i32 0, i32 0))
  call void @append_class(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.66, i32 0, i32 0))
  %5 = call i8* @debug_xcalloc(i64 1, i64 32, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @global_string.67, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.68, i32 0, i32 0), i32 296, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.69, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.70, i32 0, i32 0))
  %6 = bitcast i8* %5 to %map__charp_lambdap*
  %7 = call %map__charp_lambdap* @"map_initialize_charp_lambdap2_src/class"(%map__charp_lambdap* %6)
  store %map__charp_lambdap* %7, %map__charp_lambdap** @gNativeMethods, align 8
  %gNativeMethods = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  %8 = call i8* @string(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_string.83, i32 0, i32 0))
  call void @"map_insert_charp_lambdap3_src/class"(%map__charp_lambdap* %gNativeMethods, i8* %8, i1 (%CLVALUE**, %sVMInfo*)* @object_type_name)
  %gNativeMethods1 = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  %9 = call i8* @string(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_string.99, i32 0, i32 0))
  call void @"map_insert_charp_lambdap6_src/class"(%map__charp_lambdap* %gNativeMethods1, i8* %9, i1 (%CLVALUE**, %sVMInfo*)* @object_num_fields)
  %gNativeMethods2 = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  %10 = call i8* @string(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_string.115, i32 0, i32 0))
  call void @"map_insert_charp_lambdap9_src/class"(%map__charp_lambdap* %gNativeMethods2, i8* %10, i1 (%CLVALUE**, %sVMInfo*)* @int_set_value)
  %gNativeMethods3 = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  %11 = call i8* @string(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_string.131, i32 0, i32 0))
  call void @"map_insert_charp_lambdap12_src/class"(%map__charp_lambdap* %gNativeMethods3, i8* %11, i1 (%CLVALUE**, %sVMInfo*)* @int_to_string_)
  %gNativeMethods4 = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  %12 = call i8* @string(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_string.147, i32 0, i32 0))
  call void @"map_insert_charp_lambdap15_src/class"(%map__charp_lambdap* %gNativeMethods4, i8* %12, i1 (%CLVALUE**, %sVMInfo*)* @int_to_command)
  %gNativeMethods5 = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  %13 = call i8* @string(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_string.163, i32 0, i32 0))
  call void @"map_insert_charp_lambdap18_src/class"(%map__charp_lambdap* %gNativeMethods5, i8* %13, i1 (%CLVALUE**, %sVMInfo*)* @bool_to_int)
  %gNativeMethods6 = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  %14 = call i8* @string(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_string.179, i32 0, i32 0))
  call void @"map_insert_charp_lambdap21_src/class"(%map__charp_lambdap* %gNativeMethods6, i8* %14, i1 (%CLVALUE**, %sVMInfo*)* @bool_to_string)
  %gNativeMethods7 = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  %15 = call i8* @string(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.195, i32 0, i32 0))
  call void @"map_insert_charp_lambdap24_src/class"(%map__charp_lambdap* %gNativeMethods7, i8* %15, i1 (%CLVALUE**, %sVMInfo*)* @bool_to_command)
  %gNativeMethods8 = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  %16 = call i8* @string(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_string.211, i32 0, i32 0))
  call void @"map_insert_charp_lambdap27_src/class"(%map__charp_lambdap* %gNativeMethods8, i8* %16, i1 (%CLVALUE**, %sVMInfo*)* @bool_set_value)
  %gNativeMethods9 = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  %17 = call i8* @string(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_string.227, i32 0, i32 0))
  call void @"map_insert_charp_lambdap30_src/class"(%map__charp_lambdap* %gNativeMethods9, i8* %17, i1 (%CLVALUE**, %sVMInfo*)* @string_set_value)
  %gNativeMethods10 = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  %18 = call i8* @string(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.243, i32 0, i32 0))
  call void @"map_insert_charp_lambdap33_src/class"(%map__charp_lambdap* %gNativeMethods10, i8* %18, i1 (%CLVALUE**, %sVMInfo*)* @string_equal)
  %gNativeMethods11 = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  %19 = call i8* @string(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_string.259, i32 0, i32 0))
  call void @"map_insert_charp_lambdap36_src/class"(%map__charp_lambdap* %gNativeMethods11, i8* %19, i1 (%CLVALUE**, %sVMInfo*)* @string_not_equal)
  %gNativeMethods12 = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  %20 = call i8* @string(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_string.275, i32 0, i32 0))
  call void @"map_insert_charp_lambdap39_src/class"(%map__charp_lambdap* %gNativeMethods12, i8* %20, i1 (%CLVALUE**, %sVMInfo*)* @string_to_command)
  %21 = call i8* @debug_xcalloc(i64 1, i64 16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.291, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.292, i32 0, i32 0), i32 312, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.293, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.294, i32 0, i32 0))
  %22 = bitcast i8* %21 to %vector__int*
  %23 = call %vector__int* @"vector_initialize_int42_src/class"(%vector__int* %22)
  store %vector__int* %23, %vector__int** @gJobs, align 8
  %24 = bitcast [8192 x i8*]* %lvtable to i8*
  %25 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %24, i64 65536)
  ret void
}

define void @class_final() {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %gJobs = load %vector__int*, %vector__int** @gJobs, align 8
  %2 = load %vector__int*, %vector__int** @gJobs, align 8
  call void @"vector_finalize_int43_src/class"(%vector__int* %2)
  %3 = ptrtoint %vector__int* %2 to i64
  %4 = icmp ne i64 %3, 0
  br i1 %4, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %5 = bitcast %vector__int* %2 to i8*
  call void @xfree(i8* %5)
  %gClasses = load %map__charp_sCLClassp*, %map__charp_sCLClassp** @gClasses, align 8
  %6 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** @gClasses, align 8
  call void @"map_finalize_charp_sCLClassp44_src/class"(%map__charp_sCLClassp* %6)
  %7 = ptrtoint %map__charp_sCLClassp* %6 to i64
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %cond_then_block1, label %cond_end2

cond_then_block1:                                 ; preds = %cond_end
  br label %cond_end2

cond_end2:                                        ; preds = %cond_then_block1, %cond_end
  %9 = bitcast %map__charp_sCLClassp* %6 to i8*
  call void @xfree(i8* %9)
  %gNativeMethods = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  %10 = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  call void @"map_finalize_charp_lambdap48_src/class"(%map__charp_lambdap* %10)
  %11 = ptrtoint %map__charp_lambdap* %10 to i64
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %cond_then_block3, label %cond_end4

cond_then_block3:                                 ; preds = %cond_end2
  br label %cond_end4

cond_end4:                                        ; preds = %cond_then_block3, %cond_end2
  %13 = bitcast %map__charp_lambdap* %10 to i8*
  call void @xfree(i8* %13)
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void
}

define void @append_class(i8* %name) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %name1 = alloca i8*
  store i8* %name, i8** %name1, align 8
  %2 = bitcast i8** %name1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %3 = call i8* @debug_xcalloc(i64 1, i64 40, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_string.299, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.300, i32 0, i32 0), i32 324, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.301, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.302, i32 0, i32 0))
  %4 = bitcast i8* %3 to %sCLClass*
  %klass = alloca %sCLClass*
  %5 = bitcast %sCLClass** %klass to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  store %sCLClass* %4, %sCLClass** %klass, align 8
  %klass2 = load %sCLClass*, %sCLClass** %klass, align 8
  %name3 = load i8*, i8** %name1, align 8
  %6 = call i8* @string(i8* %name3)
  %7 = getelementptr inbounds %sCLClass, %sCLClass* %klass2, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  call void @xfree(i8* %8)
  store i8* %6, i8** %7, align 8
  %klass4 = load %sCLClass*, %sCLClass** %klass, align 8
  %11 = call i8* @debug_xcalloc(i64 1, i64 32, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_string.303, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.304, i32 0, i32 0), i32 328, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.305, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.306, i32 0, i32 0))
  %12 = bitcast i8* %11 to %map__charp_sCLMethodp*
  %13 = call %map__charp_sCLMethodp* @"map_initialize_charp_sCLMethodp49_src/class"(%map__charp_sCLMethodp* %12)
  %14 = getelementptr inbounds %sCLClass, %sCLClass* %klass4, i32 0, i32 1
  %15 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %14, align 8
  call void @"map_finalize_charp_sCLMethodp50_src/class"(%map__charp_sCLMethodp* %15)
  %16 = ptrtoint %map__charp_sCLMethodp* %15 to i64
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %cond_then_block5, label %cond_end6

cond_then_block5:                                 ; preds = %cond_end
  br label %cond_end6

cond_end6:                                        ; preds = %cond_then_block5, %cond_end
  %18 = bitcast %map__charp_sCLMethodp* %15 to i8*
  call void @xfree(i8* %18)
  store %map__charp_sCLMethodp* %13, %map__charp_sCLMethodp** %14, align 8
  %klass7 = load %sCLClass*, %sCLClass** %klass, align 8
  %19 = call i8* @debug_xcalloc(i64 1, i64 32, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_string.319, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.320, i32 0, i32 0), i32 329, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.321, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.322, i32 0, i32 0))
  %20 = bitcast i8* %19 to %map__charp_sCLFieldp*
  %21 = call %map__charp_sCLFieldp* @"map_initialize_charp_sCLFieldp51_src/class"(%map__charp_sCLFieldp* %20)
  %22 = getelementptr inbounds %sCLClass, %sCLClass* %klass7, i32 0, i32 2
  %23 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %22, align 8
  call void @"map_finalize_charp_sCLFieldp52_src/class"(%map__charp_sCLFieldp* %23)
  %24 = ptrtoint %map__charp_sCLFieldp* %23 to i64
  %25 = icmp ne i64 %24, 0
  br i1 %25, label %cond_then_block8, label %cond_end9

cond_then_block8:                                 ; preds = %cond_end6
  br label %cond_end9

cond_end9:                                        ; preds = %cond_then_block8, %cond_end6
  %26 = bitcast %map__charp_sCLFieldp* %23 to i8*
  call void @xfree(i8* %26)
  store %map__charp_sCLFieldp* %21, %map__charp_sCLFieldp** %22, align 8
  %klass10 = load %sCLClass*, %sCLClass** %klass, align 8
  %27 = call i8* @debug_xcalloc(i64 1, i64 32, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_string.335, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.336, i32 0, i32 0), i32 330, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.337, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.338, i32 0, i32 0))
  %28 = bitcast i8* %27 to %map__charp_sCLFieldp*
  %29 = call %map__charp_sCLFieldp* @"map_initialize_charp_sCLFieldp53_src/class"(%map__charp_sCLFieldp* %28)
  %30 = getelementptr inbounds %sCLClass, %sCLClass* %klass10, i32 0, i32 3
  %31 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %30, align 8
  call void @"map_finalize_charp_sCLFieldp54_src/class"(%map__charp_sCLFieldp* %31)
  %32 = ptrtoint %map__charp_sCLFieldp* %31 to i64
  %33 = icmp ne i64 %32, 0
  br i1 %33, label %cond_then_block11, label %cond_end12

cond_then_block11:                                ; preds = %cond_end9
  br label %cond_end12

cond_end12:                                       ; preds = %cond_then_block11, %cond_end9
  %34 = bitcast %map__charp_sCLFieldp* %31 to i8*
  call void @xfree(i8* %34)
  store %map__charp_sCLFieldp* %29, %map__charp_sCLFieldp** %30, align 8
  %gClasses = load %map__charp_sCLClassp*, %map__charp_sCLClassp** @gClasses, align 8
  %name13 = load i8*, i8** %name1, align 8
  %35 = call i8* @string(i8* %name13)
  %klass14 = load %sCLClass*, %sCLClass** %klass, align 8
  call void @"map_insert_charp_sCLClassp55_src/class"(%map__charp_sCLClassp* %gClasses, i8* %35, %sCLClass* %klass14)
  %name15 = load i8*, i8** %name1, align 8
  %36 = call i32 @strcmp(i8* %name15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.366, i32 0, i32 0))
  %eqtmpX = icmp eq i32 %36, 0
  br i1 %eqtmpX, label %cond_jump_then, label %cond_else_block

cond_jump_then:                                   ; preds = %cond_end12
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %38 = bitcast i8* %37 to %sCLClass**
  %klass17 = load %sCLClass*, %sCLClass** %38, align 8
  %39 = getelementptr inbounds %sCLClass, %sCLClass* %klass17, i32 0, i32 4
  store %sCLClass* null, %sCLClass** %39, align 8
  br label %cond_end16

cond_else_block:                                  ; preds = %cond_end12
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %41 = bitcast i8* %40 to %sCLClass**
  %klass18 = load %sCLClass*, %sCLClass** %41, align 8
  %gClasses19 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** @gClasses, align 8
  %42 = call %sCLClass* @"map_at_charp_sCLClassp58_src/class"(%map__charp_sCLClassp* %gClasses19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.367, i32 0, i32 0), %sCLClass* null)
  %43 = getelementptr inbounds %sCLClass, %sCLClass* %klass18, i32 0, i32 4
  store %sCLClass* %42, %sCLClass** %43, align 8
  br label %cond_end16

cond_end16:                                       ; preds = %cond_else_block, %cond_jump_then
  %44 = bitcast [8192 x i8*]* %lvtable to i8*
  %45 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %44, i64 65536)
  ret void
}

define i1 @eval_class(i8* %source, %sCompileInfo* %cinfo, i8* %sname, i32 %sline) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %source1 = alloca i8*
  store i8* %source, i8** %source1, align 8
  %2 = bitcast i8** %source1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %cinfo2 = alloca %sCompileInfo*
  store %sCompileInfo* %cinfo, %sCompileInfo** %cinfo2, align 8
  %3 = bitcast %sCompileInfo** %cinfo2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %sname3 = alloca i8*
  store i8* %sname, i8** %sname3, align 8
  %4 = bitcast i8** %sname3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %sline4 = alloca i32
  store i32 %sline, i32* %sline4, align 4
  %5 = bitcast i32* %sline4 to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %info = alloca %sParserInfo
  %6 = bitcast %sParserInfo* %info to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %cinfo5 = load %sCompileInfo*, %sCompileInfo** %cinfo2, align 8
  %7 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %cinfo5, i32 0, i32 4
  %8 = load %sParserInfo*, %sParserInfo** %7, align 8
  %derefference_value = load %sParserInfo, %sParserInfo* %8, align 8
  store %sParserInfo %derefference_value, %sParserInfo* %info, align 8
  %info6 = load %sParserInfo, %sParserInfo* %info, align 8
  %source7 = load i8*, i8** %source1, align 8
  %9 = getelementptr inbounds %sParserInfo, %sParserInfo* %info, i32 0, i32 4
  store i8* %source7, i8** %9, align 8
  %info8 = load %sParserInfo, %sParserInfo* %info, align 8
  %sline9 = load i32, i32* %sline4, align 4
  %10 = getelementptr inbounds %sParserInfo, %sParserInfo* %info, i32 0, i32 1
  store i32 %sline9, i32* %10, align 4
  %info10 = load %sParserInfo, %sParserInfo* %info, align 8
  %11 = call i8* @debug_xcalloc(i64 1, i64 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_string.406, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.407, i32 0, i32 0), i32 388, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.408, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.409, i32 0, i32 0))
  %12 = bitcast i8* %11 to %vector__charp*
  %13 = call %vector__charp* @"vector_initialize_charp66_src/class"(%vector__charp* %12)
  %14 = getelementptr inbounds %sParserInfo, %sParserInfo* %info, i32 0, i32 5
  store %vector__charp* %13, %vector__charp** %14, align 8
  %info11 = load %sParserInfo, %sParserInfo* %info, align 8
  %15 = call i8* @parse_word(%sParserInfo* %info)
  %name = alloca i8*
  %16 = bitcast i8** %name to i8*
  store i8* %16, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  store i8* %15, i8** %name, align 8
  %info12 = load %sParserInfo, %sParserInfo* %info, align 8
  %17 = getelementptr inbounds %sParserInfo, %sParserInfo* %info, i32 0, i32 0
  %18 = bitcast [4096 x i8]* %17 to i8*
  %sname13 = load i8*, i8** %sname3, align 8
  %19 = call i8* @xstrncpy(i8* %18, i8* %sname13, i32 4096)
  %gClasses = load %map__charp_sCLClassp*, %map__charp_sCLClassp** @gClasses, align 8
  %name14 = load i8*, i8** %name, align 8
  %20 = call %sCLClass* @"map_at_charp_sCLClassp67_src/class"(%map__charp_sCLClassp* %gClasses, i8* %name14, %sCLClass* null)
  %eqtmpX = icmp eq %sCLClass* %20, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %21 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %22 = bitcast i8* %21 to i8**
  %name15 = load i8*, i8** %22, align 8
  call void @append_class(i8* %name15)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %info16 = load %sParserInfo, %sParserInfo* %info, align 8
  %23 = getelementptr inbounds %sParserInfo, %sParserInfo* %info, i32 0, i32 4
  %24 = load i8*, i8** %23, align 8
  %derefference_value17 = load i8, i8* %24, align 8
  %eqtmpX18 = icmp eq i8 %derefference_value17, 60
  br i1 %eqtmpX18, label %cond_jump_then19, label %cond_end20

cond_jump_then19:                                 ; preds = %cond_end
  %25 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %26 = bitcast i8* %25 to %sParserInfo*
  %info21 = load %sParserInfo, %sParserInfo* %26, align 8
  %27 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %28 = bitcast i8* %27 to %sParserInfo*
  %info22 = load %sParserInfo, %sParserInfo* %28, align 8
  %29 = getelementptr inbounds %sParserInfo, %sParserInfo* %28, i32 0, i32 4
  %30 = load i8*, i8** %29, align 8
  %31 = ptrtoint i8* %30 to i64
  %addtmp = add nsw i64 %31, 1
  %32 = inttoptr i64 %addtmp to i8*
  %33 = getelementptr inbounds %sParserInfo, %sParserInfo* %26, i32 0, i32 4
  store i8* %32, i8** %33, align 8
  %34 = ptrtoint i8* %32 to i64
  %subtmp = sub nsw i64 %34, 1
  %35 = inttoptr i64 %subtmp to i8*
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %37 = bitcast i8* %36 to %sParserInfo*
  %info23 = load %sParserInfo, %sParserInfo* %37, align 8
  call void @skip_spaces_and_lf(%sParserInfo* %37)
  br label %loop_top_block

cond_end20:                                       ; preds = %cond_end_block, %cond_end
  %info57 = load %sParserInfo, %sParserInfo* %info, align 8
  %38 = getelementptr inbounds %sParserInfo, %sParserInfo* %info, i32 0, i32 3
  %39 = load i32, i32* %38, align 4
  %gttmp = icmp sgt i32 %39, 0
  br i1 %gttmp, label %cond_jump_then58, label %cond_end59

loop_top_block:                                   ; preds = %cond_end56, %cond_jump_then19
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %41 = bitcast i8* %40 to %sParserInfo*
  %info24 = load %sParserInfo, %sParserInfo* %41, align 8
  %42 = call i8* @parse_word(%sParserInfo* %41)
  %generics_name = alloca i8*
  %43 = bitcast i8** %generics_name to i8*
  store i8* %43, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i8* %42, i8** %generics_name, align 8
  %generics_name25 = load i8*, i8** %generics_name, align 8
  %44 = call i32 @strcmp(i8* %generics_name25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @global_string.414, i32 0, i32 0))
  %noteqtmp = icmp ne i32 %44, 0
  br i1 %noteqtmp, label %cond_jump_then26, label %cond_end27

cond_end_block:                                   ; preds = %cond_end54, %loop_top_block
  br label %cond_end20

cond_jump_then26:                                 ; preds = %cond_then_block
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %46 = bitcast i8* %45 to %sParserInfo*
  %info28 = load %sParserInfo, %sParserInfo* %46, align 8
  %47 = getelementptr inbounds %sParserInfo, %sParserInfo* %46, i32 0, i32 5
  %48 = load %vector__charp*, %vector__charp** %47, align 8
  %49 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %50 = bitcast i8* %49 to i8**
  %generics_name29 = load i8*, i8** %50, align 8
  %51 = load i8*, i8** %50, align 8
  %52 = load i8*, i8** %50, align 8
  %53 = ptrtoint i8* %52 to i64
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %cond_then_block30, label %cond_end31

cond_end27:                                       ; preds = %cond_end31, %cond_then_block
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %56 = bitcast i8* %55 to %sParserInfo*
  %info32 = load %sParserInfo, %sParserInfo* %56, align 8
  %57 = getelementptr inbounds %sParserInfo, %sParserInfo* %56, i32 0, i32 4
  %58 = load i8*, i8** %57, align 8
  %derefference_value33 = load i8, i8* %58, align 8
  %eqtmpX34 = icmp eq i8 %derefference_value33, 44
  br i1 %eqtmpX34, label %cond_jump_then35, label %"cond_jump_elif0\0A"

cond_then_block30:                                ; preds = %cond_jump_then26
  %59 = load i8*, i8** %50, align 8
  %60 = call i8* @xmemdup(i8* %59)
  br label %cond_end31

cond_end31:                                       ; preds = %cond_then_block30, %cond_jump_then26
  call void @"vector_push_back_charp68_src/class"(%vector__charp* %48, i8* %60)
  br label %cond_end27

cond_jump_then35:                                 ; preds = %cond_end27
  %61 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %62 = bitcast i8* %61 to %sParserInfo*
  %info37 = load %sParserInfo, %sParserInfo* %62, align 8
  %63 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %64 = bitcast i8* %63 to %sParserInfo*
  %info38 = load %sParserInfo, %sParserInfo* %64, align 8
  %65 = getelementptr inbounds %sParserInfo, %sParserInfo* %64, i32 0, i32 4
  %66 = load i8*, i8** %65, align 8
  %67 = ptrtoint i8* %66 to i64
  %addtmp39 = add nsw i64 %67, 1
  %68 = inttoptr i64 %addtmp39 to i8*
  %69 = getelementptr inbounds %sParserInfo, %sParserInfo* %62, i32 0, i32 4
  store i8* %68, i8** %69, align 8
  %70 = ptrtoint i8* %68 to i64
  %subtmp40 = sub nsw i64 %70, 1
  %71 = inttoptr i64 %subtmp40 to i8*
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %73 = bitcast i8* %72 to %sParserInfo*
  %info41 = load %sParserInfo, %sParserInfo* %73, align 8
  call void @skip_spaces_and_lf(%sParserInfo* %73)
  br label %cond_end36

"cond_jump_elif0\0A":                             ; preds = %cond_end27
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %75 = bitcast i8* %74 to %sParserInfo*
  %info42 = load %sParserInfo, %sParserInfo* %75, align 8
  %76 = getelementptr inbounds %sParserInfo, %sParserInfo* %75, i32 0, i32 4
  %77 = load i8*, i8** %76, align 8
  %derefference_value43 = load i8, i8* %77, align 8
  %eqtmpX44 = icmp eq i8 %derefference_value43, 0
  br i1 %eqtmpX44, label %"cond_jump_elif_then0\0A", label %"cond_jump_elif1\0A"

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %78 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_string.419, i32 0, i32 0))
  call void @exit(i32 1)
  br label %cond_end36

"cond_jump_elif1\0A":                             ; preds = %"cond_jump_elif0\0A"
  %79 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %80 = bitcast i8* %79 to %sParserInfo*
  %info45 = load %sParserInfo, %sParserInfo* %80, align 8
  %81 = getelementptr inbounds %sParserInfo, %sParserInfo* %80, i32 0, i32 4
  %82 = load i8*, i8** %81, align 8
  %derefference_value46 = load i8, i8* %82, align 8
  %eqtmpX47 = icmp eq i8 %derefference_value46, 62
  br i1 %eqtmpX47, label %"cond_jump_elif_then1\0A", label %cond_end36

"cond_jump_elif_then1\0A":                        ; preds = %"cond_jump_elif1\0A"
  %83 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %84 = bitcast i8* %83 to %sParserInfo*
  %info48 = load %sParserInfo, %sParserInfo* %84, align 8
  %85 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %86 = bitcast i8* %85 to %sParserInfo*
  %info49 = load %sParserInfo, %sParserInfo* %86, align 8
  %87 = getelementptr inbounds %sParserInfo, %sParserInfo* %86, i32 0, i32 4
  %88 = load i8*, i8** %87, align 8
  %89 = ptrtoint i8* %88 to i64
  %addtmp50 = add nsw i64 %89, 1
  %90 = inttoptr i64 %addtmp50 to i8*
  %91 = getelementptr inbounds %sParserInfo, %sParserInfo* %84, i32 0, i32 4
  store i8* %90, i8** %91, align 8
  %92 = ptrtoint i8* %90 to i64
  %subtmp51 = sub nsw i64 %92, 1
  %93 = inttoptr i64 %subtmp51 to i8*
  %94 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %95 = bitcast i8* %94 to %sParserInfo*
  %info52 = load %sParserInfo, %sParserInfo* %95, align 8
  call void @skip_spaces_and_lf(%sParserInfo* %95)
  %96 = load i8*, i8** %generics_name, align 8
  %97 = ptrtoint i8* %96 to i64
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %cond_then_block53, label %cond_end54

cond_end36:                                       ; preds = %after_break, %"cond_jump_elif1\0A", %"cond_jump_elif_then0\0A", %cond_jump_then35
  %99 = load i8*, i8** %generics_name, align 8
  %100 = ptrtoint i8* %99 to i64
  %101 = icmp ne i64 %100, 0
  br i1 %101, label %cond_then_block55, label %cond_end56

cond_then_block53:                                ; preds = %"cond_jump_elif_then1\0A"
  br label %cond_end54

cond_end54:                                       ; preds = %cond_then_block53, %"cond_jump_elif_then1\0A"
  call void @xfree(i8* %96)
  br label %cond_end_block

after_break:                                      ; No predecessors!
  br label %cond_end36

cond_then_block55:                                ; preds = %cond_end36
  br label %cond_end56

cond_end56:                                       ; preds = %cond_then_block55, %cond_end36
  call void @xfree(i8* %99)
  br label %loop_top_block

cond_jump_then58:                                 ; preds = %cond_end20
  %stderr60 = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %102 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %103 = bitcast i8* %102 to %sParserInfo*
  %info61 = load %sParserInfo, %sParserInfo* %103, align 8
  %104 = getelementptr inbounds %sParserInfo, %sParserInfo* %103, i32 0, i32 3
  %105 = load i32, i32* %104, align 4
  %106 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr60, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_string.420, i32 0, i32 0), i32 %105)
  %107 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %108 = bitcast i8* %107 to %sParserInfo*
  %info62 = load %sParserInfo, %sParserInfo* %108, align 8
  %109 = getelementptr inbounds %sParserInfo, %sParserInfo* %108, i32 0, i32 7
  %110 = load %vector__sVarTablep*, %vector__sVarTablep** %109, align 8
  %111 = load %vector__sVarTablep*, %vector__sVarTablep** %109, align 8
  call void @"vector_finalize_sVarTablep69_src/class"(%vector__sVarTablep* %111)
  %112 = ptrtoint %vector__sVarTablep* %111 to i64
  %113 = icmp ne i64 %112, 0
  br i1 %113, label %cond_then_block63, label %cond_end64

cond_end59:                                       ; preds = %cond_end20
  %gClasses70 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** @gClasses, align 8
  %name71 = load i8*, i8** %name, align 8
  %114 = call %sCLClass* @"map_at_charp_sCLClassp72_src/class"(%map__charp_sCLClassp* %gClasses70, i8* %name71, %sCLClass* null)
  %klass = alloca %sCLClass*
  %115 = bitcast %sCLClass** %klass to i8*
  store i8* %115, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store %sCLClass* %114, %sCLClass** %klass, align 8
  br label %loop_top_block72

cond_then_block63:                                ; preds = %cond_jump_then58
  br label %cond_end64

cond_end64:                                       ; preds = %cond_then_block63, %cond_jump_then58
  %116 = bitcast %vector__sVarTablep* %111 to i8*
  call void @xfree(i8* %116)
  %117 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %118 = bitcast i8* %117 to %sParserInfo*
  %info65 = load %sParserInfo, %sParserInfo* %118, align 8
  %119 = getelementptr inbounds %sParserInfo, %sParserInfo* %118, i32 0, i32 5
  %120 = load %vector__charp*, %vector__charp** %119, align 8
  %121 = load %vector__charp*, %vector__charp** %119, align 8
  call void @"vector_finalize_charp71_src/class"(%vector__charp* %121)
  %122 = ptrtoint %vector__charp* %121 to i64
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %cond_then_block66, label %cond_end67

cond_then_block66:                                ; preds = %cond_end64
  br label %cond_end67

cond_end67:                                       ; preds = %cond_then_block66, %cond_end64
  %124 = bitcast %vector__charp* %121 to i8*
  call void @xfree(i8* %124)
  %125 = bitcast [8192 x i8*]* %lvtable to i8*
  %126 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %125, i64 65536)
  %127 = load i8*, i8** %name, align 8
  %128 = ptrtoint i8* %127 to i64
  %129 = icmp ne i64 %128, 0
  br i1 %129, label %cond_then_block68, label %cond_end69

cond_then_block68:                                ; preds = %cond_end67
  br label %cond_end69

cond_end69:                                       ; preds = %cond_then_block68, %cond_end67
  call void @xfree(i8* %127)
  ret i1 false

loop_top_block72:                                 ; preds = %cond_end339, %cond_end59
  %info73 = load %sParserInfo, %sParserInfo* %info, align 8
  %130 = getelementptr inbounds %sParserInfo, %sParserInfo* %info, i32 0, i32 4
  %131 = load i8*, i8** %130, align 8
  %derefference_value74 = load i8, i8* %131, align 8
  %132 = icmp ne i8 %derefference_value74, 0
  br i1 %132, label %cond_then_block75, label %cond_end_block76

cond_then_block75:                                ; preds = %loop_top_block72
  %133 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %134 = bitcast i8* %133 to %sParserInfo*
  %info77 = load %sParserInfo, %sParserInfo* %134, align 8
  %135 = call i8* @parse_word(%sParserInfo* %134)
  %word = alloca i8*
  %136 = bitcast i8** %word to i8*
  store i8* %136, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i8* %135, i8** %word, align 8
  %word78 = load i8*, i8** %word, align 8
  %137 = call i32 @strcmp(i8* %word78, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_string.421, i32 0, i32 0))
  %eqtmpX79 = icmp eq i32 %137, 0
  br i1 %eqtmpX79, label %cond_jump_then80, label %"cond_jump_elif0\0A81"

cond_end_block76:                                 ; preds = %cond_end322, %loop_top_block72
  %info340 = load %sParserInfo, %sParserInfo* %info, align 8
  %138 = getelementptr inbounds %sParserInfo, %sParserInfo* %info, i32 0, i32 3
  %139 = load i32, i32* %138, align 4
  %gttmp341 = icmp sgt i32 %139, 0
  br i1 %gttmp341, label %cond_jump_then342, label %cond_end343

cond_jump_then80:                                 ; preds = %cond_then_block75
  %140 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %141 = bitcast i8* %140 to %sParserInfo*
  %info86 = load %sParserInfo, %sParserInfo* %141, align 8
  %142 = call i8* @parse_word(%sParserInfo* %141)
  %parent_class_name = alloca i8*
  %143 = bitcast i8** %parent_class_name to i8*
  store i8* %143, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i8* %142, i8** %parent_class_name, align 8
  %gClasses87 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** @gClasses, align 8
  %parent_class_name88 = load i8*, i8** %parent_class_name, align 8
  %144 = call %sCLClass* @"map_at_charp_sCLClassp73_src/class"(%map__charp_sCLClassp* %gClasses87, i8* %parent_class_name88, %sCLClass* null)
  %parent_class = alloca %sCLClass*
  %145 = bitcast %sCLClass** %parent_class to i8*
  store i8* %145, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store %sCLClass* %144, %sCLClass** %parent_class, align 8
  %parent_class89 = load %sCLClass*, %sCLClass** %parent_class, align 8
  %eqtmpX90 = icmp eq %sCLClass* %parent_class89, null
  br i1 %eqtmpX90, label %cond_jump_then91, label %cond_end92

"cond_jump_elif0\0A81":                           ; preds = %cond_then_block75
  %word117 = load i8*, i8** %word, align 8
  %146 = call i32 @strcmp(i8* %word117, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_string.424, i32 0, i32 0))
  %eqtmpX118 = icmp eq i32 %146, 0
  br i1 %eqtmpX118, label %"cond_jump_elif_then0\0A82", label %"cond_jump_elif1\0A83"

"cond_jump_elif_then0\0A82":                      ; preds = %"cond_jump_elif0\0A81"
  %147 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %148 = bitcast i8* %147 to %sParserInfo*
  %info119 = load %sParserInfo, %sParserInfo* %148, align 8
  %149 = call i8* @parse_word(%sParserInfo* %148)
  %field_name = alloca i8*
  %150 = bitcast i8** %field_name to i8*
  store i8* %150, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i8* %149, i8** %field_name, align 8
  %151 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %152 = bitcast i8* %151 to %sParserInfo*
  %info120 = load %sParserInfo, %sParserInfo* %152, align 8
  call void @expected_next_character(i8 58, %sParserInfo* %152)
  %field_type = alloca %sCLType*
  %153 = bitcast %sCLType** %field_type to i8*
  store i8* %153, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store %sCLType* null, %sCLType** %field_type, align 8
  %field_type121 = load %sCLType*, %sCLType** %field_type, align 8
  %154 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %155 = bitcast i8* %154 to %sParserInfo*
  %info122 = load %sParserInfo, %sParserInfo* %155, align 8
  %156 = call i1 @parse_type(%sCLType** %field_type, %sParserInfo* %155)
  %LOGICAL_DIANEAL = icmp eq i1 %156, false
  br i1 %LOGICAL_DIANEAL, label %cond_jump_then123, label %cond_end124

"cond_jump_elif1\0A83":                           ; preds = %"cond_jump_elif0\0A81"
  %word159 = load i8*, i8** %word, align 8
  %157 = call i32 @strcmp(i8* %word159, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_string.427, i32 0, i32 0))
  %eqtmpX160 = icmp eq i32 %157, 0
  br i1 %eqtmpX160, label %"cond_jump_elif_then1\0A84", label %"cond_jump_elif2\0A"

"cond_jump_elif_then1\0A84":                      ; preds = %"cond_jump_elif1\0A83"
  %158 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %159 = bitcast i8* %158 to %sParserInfo*
  %info161 = load %sParserInfo, %sParserInfo* %159, align 8
  %160 = call i8* @debug_xcalloc(i64 1, i64 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_string.428, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.429, i32 0, i32 0), i32 482, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.430, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.431, i32 0, i32 0))
  %161 = bitcast i8* %160 to %vector__sVarTablep*
  %162 = call %vector__sVarTablep* @"vector_initialize_sVarTablep77_src/class"(%vector__sVarTablep* %161)
  %163 = getelementptr inbounds %sParserInfo, %sParserInfo* %159, i32 0, i32 7
  store %vector__sVarTablep* %162, %vector__sVarTablep** %163, align 8
  %164 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %165 = bitcast i8* %164 to %sParserInfo*
  %info162 = load %sParserInfo, %sParserInfo* %165, align 8
  %166 = call i8* @parse_word(%sParserInfo* %165)
  %method_name = alloca i8*
  %167 = bitcast i8** %method_name to i8*
  store i8* %167, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i8* %166, i8** %method_name, align 8
  %params = alloca [32 x %sCLParam]
  %168 = bitcast [32 x %sCLParam]* %params to i8*
  store i8* %168, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %num_params = alloca i32
  %169 = bitcast i32* %num_params to i8*
  store i8* %169, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 1, i32* %num_params, align 4
  %170 = bitcast [32 x %sCLParam]* %params to %sCLParam*
  %element_address = getelementptr %sCLParam, %sCLParam* %170, i32 0
  %element = load %sCLParam, %sCLParam* %element_address, align 8
  %171 = getelementptr inbounds %sCLParam, %sCLParam* %element_address, i32 0, i32 0
  %172 = bitcast [128 x i8]* %171 to i8*
  %173 = call i8* @xstrncpy(i8* %172, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_string.436, i32 0, i32 0), i32 128)
  %174 = bitcast [32 x %sCLParam]* %params to %sCLParam*
  %element_address163 = getelementptr %sCLParam, %sCLParam* %174, i32 0
  %element164 = load %sCLParam, %sCLParam* %element_address163, align 8
  %175 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %176 = bitcast i8* %175 to i8**
  %name165 = load i8*, i8** %176, align 8
  %177 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %178 = bitcast i8* %177 to %sParserInfo*
  %info166 = load %sParserInfo, %sParserInfo* %178, align 8
  %179 = call %sCLType* @create_type(i8* %name165, %sParserInfo* %178)
  %180 = getelementptr inbounds %sCLParam, %sCLParam* %element_address163, i32 0, i32 1
  store %sCLType* %179, %sCLType** %180, align 8
  %num_params167 = load i32, i32* %num_params, align 4
  %181 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %182 = bitcast i8* %181 to %sParserInfo*
  %info168 = load %sParserInfo, %sParserInfo* %182, align 8
  %183 = bitcast [32 x %sCLParam]* %params to %sCLParam*
  %184 = call i1 @parse_params(%sCLParam* %183, i32* %num_params, %sParserInfo* %182)
  %LOGICAL_DIANEAL169 = icmp eq i1 %184, false
  br i1 %LOGICAL_DIANEAL169, label %cond_jump_then170, label %cond_end171

"cond_jump_elif2\0A":                             ; preds = %"cond_jump_elif1\0A83"
  %185 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %186 = bitcast i8* %185 to %sParserInfo*
  %info318 = load %sParserInfo, %sParserInfo* %186, align 8
  %187 = getelementptr inbounds %sParserInfo, %sParserInfo* %186, i32 0, i32 4
  %188 = load i8*, i8** %187, align 8
  %derefference_value319 = load i8, i8* %188, align 8
  %eqtmpX320 = icmp eq i8 %derefference_value319, 125
  br i1 %eqtmpX320, label %"cond_jump_elif_then2\0A", label %cond_else_block

"cond_jump_elif_then2\0A":                        ; preds = %"cond_jump_elif2\0A"
  %189 = load i8*, i8** %word, align 8
  %190 = ptrtoint i8* %189 to i64
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %cond_then_block321, label %cond_end322

cond_else_block:                                  ; preds = %"cond_jump_elif2\0A"
  %192 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %193 = bitcast i8* %192 to %sCompileInfo**
  %cinfo324 = load %sCompileInfo*, %sCompileInfo** %193, align 8
  %194 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %195 = bitcast i8* %194 to i8**
  %word325 = load i8*, i8** %195, align 8
  %196 = call i8* (i8*, ...) @xsprintf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_string.443, i32 0, i32 0), i8* %word325)
  call void @compile_err_msg(%sCompileInfo* %cinfo324, i8* %196)
  %197 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %198 = bitcast i8* %197 to %sParserInfo*
  %info326 = load %sParserInfo, %sParserInfo* %198, align 8
  %199 = getelementptr inbounds %sParserInfo, %sParserInfo* %198, i32 0, i32 7
  %200 = load %vector__sVarTablep*, %vector__sVarTablep** %199, align 8
  %201 = load %vector__sVarTablep*, %vector__sVarTablep** %199, align 8
  call void @"vector_finalize_sVarTablep95_src/class"(%vector__sVarTablep* %201)
  %202 = ptrtoint %vector__sVarTablep* %201 to i64
  %203 = icmp ne i64 %202, 0
  br i1 %203, label %cond_then_block327, label %cond_end328

cond_end85:                                       ; preds = %after_break323, %cond_end317, %cond_end158, %cond_end116
  %204 = load i8*, i8** %word, align 8
  %205 = ptrtoint i8* %204 to i64
  %206 = icmp ne i64 %205, 0
  br i1 %206, label %cond_then_block338, label %cond_end339

cond_jump_then91:                                 ; preds = %cond_jump_then80
  %207 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %208 = bitcast i8* %207 to %sParserInfo*
  %info93 = load %sParserInfo, %sParserInfo* %208, align 8
  %209 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %210 = bitcast i8* %209 to i8**
  %parent_class_name94 = load i8*, i8** %210, align 8
  %211 = call i8* (i8*, ...) @xsprintf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_string.422, i32 0, i32 0), i8* %parent_class_name94)
  call void @parser_err_msg(%sParserInfo* %208, i8* %211)
  %212 = ptrtoint i8* %211 to i64
  %213 = icmp ne i64 %212, 0
  br i1 %213, label %cond_then_block95, label %cond_end96

cond_end92:                                       ; preds = %cond_end96, %cond_jump_then80
  %214 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %215 = bitcast i8* %214 to %sCLClass**
  %klass97 = load %sCLClass*, %sCLClass** %215, align 8
  %it = alloca %sCLClass*
  %216 = bitcast %sCLClass** %it to i8*
  store i8* %216, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store %sCLClass* %klass97, %sCLClass** %it, align 8
  br label %loop_top_block98

cond_then_block95:                                ; preds = %cond_jump_then91
  br label %cond_end96

cond_end96:                                       ; preds = %cond_then_block95, %cond_jump_then91
  call void @xfree(i8* %211)
  br label %cond_end92

loop_top_block98:                                 ; preds = %cond_end106, %cond_end92
  %it99 = load %sCLClass*, %sCLClass** %it, align 8
  %217 = ptrtoint %sCLClass* %it99 to i64
  %218 = icmp ne i64 %217, 0
  br i1 %218, label %cond_then_block100, label %cond_end_block101

cond_then_block100:                               ; preds = %loop_top_block98
  %219 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %220 = bitcast i8* %219 to %sCLClass**
  %it102 = load %sCLClass*, %sCLClass** %220, align 8
  %221 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %222 = bitcast i8* %221 to %sCLClass**
  %parent_class103 = load %sCLClass*, %sCLClass** %222, align 8
  %eqtmpX104 = icmp eq %sCLClass* %it102, %parent_class103
  br i1 %eqtmpX104, label %cond_jump_then105, label %cond_end106

cond_end_block101:                                ; preds = %cond_end110, %loop_top_block98
  %223 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %224 = bitcast i8* %223 to %sCLClass**
  %klass113 = load %sCLClass*, %sCLClass** %224, align 8
  %parent_class114 = load %sCLClass*, %sCLClass** %parent_class, align 8
  %225 = getelementptr inbounds %sCLClass, %sCLClass* %klass113, i32 0, i32 4
  store %sCLClass* %parent_class114, %sCLClass** %225, align 8
  %226 = load i8*, i8** %parent_class_name, align 8
  %227 = ptrtoint i8* %226 to i64
  %228 = icmp ne i64 %227, 0
  br i1 %228, label %cond_then_block115, label %cond_end116

cond_jump_then105:                                ; preds = %cond_then_block100
  %229 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %230 = bitcast i8* %229 to %sParserInfo*
  %info107 = load %sParserInfo, %sParserInfo* %230, align 8
  %231 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %232 = bitcast i8* %231 to i8**
  %parent_class_name108 = load i8*, i8** %232, align 8
  %233 = call i8* (i8*, ...) @xsprintf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @global_string.423, i32 0, i32 0), i8* %parent_class_name108)
  call void @parser_err_msg(%sParserInfo* %230, i8* %233)
  %234 = ptrtoint i8* %233 to i64
  %235 = icmp ne i64 %234, 0
  br i1 %235, label %cond_then_block109, label %cond_end110

cond_end106:                                      ; preds = %after_break111, %cond_then_block100
  %236 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %237 = bitcast i8* %236 to %sCLClass**
  %it112 = load %sCLClass*, %sCLClass** %237, align 8
  %238 = getelementptr inbounds %sCLClass, %sCLClass* %it112, i32 0, i32 4
  %239 = load %sCLClass*, %sCLClass** %238, align 8
  %240 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %241 = bitcast i8* %240 to %sCLClass**
  store %sCLClass* %239, %sCLClass** %241, align 8
  br label %loop_top_block98

cond_then_block109:                               ; preds = %cond_jump_then105
  br label %cond_end110

cond_end110:                                      ; preds = %cond_then_block109, %cond_jump_then105
  call void @xfree(i8* %233)
  br label %cond_end_block101

after_break111:                                   ; No predecessors!
  br label %cond_end106

cond_then_block115:                               ; preds = %cond_end_block101
  br label %cond_end116

cond_end116:                                      ; preds = %cond_then_block115, %cond_end_block101
  call void @xfree(i8* %226)
  br label %cond_end85

cond_jump_then123:                                ; preds = %"cond_jump_elif_then0\0A82"
  %242 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %243 = bitcast i8* %242 to %sParserInfo*
  %info125 = load %sParserInfo, %sParserInfo* %243, align 8
  %244 = getelementptr inbounds %sParserInfo, %sParserInfo* %243, i32 0, i32 7
  %245 = load %vector__sVarTablep*, %vector__sVarTablep** %244, align 8
  %246 = load %vector__sVarTablep*, %vector__sVarTablep** %244, align 8
  call void @"vector_finalize_sVarTablep74_src/class"(%vector__sVarTablep* %246)
  %247 = ptrtoint %vector__sVarTablep* %246 to i64
  %248 = icmp ne i64 %247, 0
  br i1 %248, label %cond_then_block126, label %cond_end127

cond_end124:                                      ; preds = %"cond_jump_elif_then0\0A82"
  %249 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %250 = bitcast i8* %249 to %sParserInfo*
  %info137 = load %sParserInfo, %sParserInfo* %250, align 8
  %251 = getelementptr inbounds %sParserInfo, %sParserInfo* %250, i32 0, i32 4
  %252 = load i8*, i8** %251, align 8
  %derefference_value138 = load i8, i8* %252, align 8
  %eqtmpX139 = icmp eq i8 %derefference_value138, 59
  br i1 %eqtmpX139, label %cond_jump_then140, label %cond_end141

cond_then_block126:                               ; preds = %cond_jump_then123
  br label %cond_end127

cond_end127:                                      ; preds = %cond_then_block126, %cond_jump_then123
  %253 = bitcast %vector__sVarTablep* %246 to i8*
  call void @xfree(i8* %253)
  %254 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %255 = bitcast i8* %254 to %sParserInfo*
  %info128 = load %sParserInfo, %sParserInfo* %255, align 8
  %256 = getelementptr inbounds %sParserInfo, %sParserInfo* %255, i32 0, i32 5
  %257 = load %vector__charp*, %vector__charp** %256, align 8
  %258 = load %vector__charp*, %vector__charp** %256, align 8
  call void @"vector_finalize_charp76_src/class"(%vector__charp* %258)
  %259 = ptrtoint %vector__charp* %258 to i64
  %260 = icmp ne i64 %259, 0
  br i1 %260, label %cond_then_block129, label %cond_end130

cond_then_block129:                               ; preds = %cond_end127
  br label %cond_end130

cond_end130:                                      ; preds = %cond_then_block129, %cond_end127
  %261 = bitcast %vector__charp* %258 to i8*
  call void @xfree(i8* %261)
  %262 = bitcast [8192 x i8*]* %lvtable to i8*
  %263 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %262, i64 65536)
  %264 = load i8*, i8** %field_name, align 8
  %265 = ptrtoint i8* %264 to i64
  %266 = icmp ne i64 %265, 0
  br i1 %266, label %cond_then_block131, label %cond_end132

cond_then_block131:                               ; preds = %cond_end130
  br label %cond_end132

cond_end132:                                      ; preds = %cond_then_block131, %cond_end130
  call void @xfree(i8* %264)
  %267 = load i8*, i8** %word, align 8
  %268 = ptrtoint i8* %267 to i64
  %269 = icmp ne i64 %268, 0
  br i1 %269, label %cond_then_block133, label %cond_end134

cond_then_block133:                               ; preds = %cond_end132
  br label %cond_end134

cond_end134:                                      ; preds = %cond_then_block133, %cond_end132
  call void @xfree(i8* %267)
  %270 = load i8*, i8** %name, align 8
  %271 = ptrtoint i8* %270 to i64
  %272 = icmp ne i64 %271, 0
  br i1 %272, label %cond_then_block135, label %cond_end136

cond_then_block135:                               ; preds = %cond_end134
  br label %cond_end136

cond_end136:                                      ; preds = %cond_then_block135, %cond_end134
  call void @xfree(i8* %270)
  ret i1 false

cond_jump_then140:                                ; preds = %cond_end124
  %273 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %274 = bitcast i8* %273 to %sParserInfo*
  %info142 = load %sParserInfo, %sParserInfo* %274, align 8
  %275 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %276 = bitcast i8* %275 to %sParserInfo*
  %info143 = load %sParserInfo, %sParserInfo* %276, align 8
  %277 = getelementptr inbounds %sParserInfo, %sParserInfo* %276, i32 0, i32 4
  %278 = load i8*, i8** %277, align 8
  %279 = ptrtoint i8* %278 to i64
  %addtmp144 = add nsw i64 %279, 1
  %280 = inttoptr i64 %addtmp144 to i8*
  %281 = getelementptr inbounds %sParserInfo, %sParserInfo* %274, i32 0, i32 4
  store i8* %280, i8** %281, align 8
  %282 = ptrtoint i8* %280 to i64
  %subtmp145 = sub nsw i64 %282, 1
  %283 = inttoptr i64 %subtmp145 to i8*
  %284 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %285 = bitcast i8* %284 to %sParserInfo*
  %info146 = load %sParserInfo, %sParserInfo* %285, align 8
  call void @skip_spaces_and_lf(%sParserInfo* %285)
  br label %cond_end141

cond_end141:                                      ; preds = %cond_jump_then140, %cond_end124
  %286 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %287 = bitcast i8* %286 to %sCLClass**
  %klass147 = load %sCLClass*, %sCLClass** %287, align 8
  %field_name148 = load i8*, i8** %field_name, align 8
  %field_type149 = load %sCLType*, %sCLType** %field_type, align 8
  call void @append_field(%sCLClass* %klass147, i8* %field_name148, %sCLType* %field_type149)
  %andand_result_var = alloca i1
  %288 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %289 = bitcast i8* %288 to %sCLClass**
  %klass150 = load %sCLClass*, %sCLClass** %289, align 8
  %290 = getelementptr inbounds %sCLClass, %sCLClass* %klass150, i32 0, i32 0
  %291 = load i8*, i8** %290, align 8
  %292 = call i32 @strcmp(i8* %291, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_string.425, i32 0, i32 0))
  %eqtmpX151 = icmp eq i32 %292, 0
  store i1 %eqtmpX151, i1* %andand_result_var, align 1
  br i1 %eqtmpX151, label %cond_jump_then152, label %cond_jump_end

cond_jump_then152:                                ; preds = %cond_end141
  %field_name153 = load i8*, i8** %field_name, align 8
  %293 = call i32 @strcmp(i8* %field_name153, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_string.426, i32 0, i32 0))
  %eqtmpX154 = icmp eq i32 %293, 0
  %andand = and i1 %eqtmpX151, %eqtmpX154
  store i1 %andand, i1* %andand_result_var, align 1
  br label %cond_jump_end

cond_jump_end:                                    ; preds = %cond_jump_then152, %cond_end141
  %andand_result_value = load i1, i1* %andand_result_var, align 1
  br i1 %andand_result_value, label %cond_jump_then155, label %cond_end156

cond_jump_then155:                                ; preds = %cond_jump_end
  %294 = call i32 @sleep(i32 10)
  br label %cond_end156

cond_end156:                                      ; preds = %cond_jump_then155, %cond_jump_end
  %295 = load i8*, i8** %field_name, align 8
  %296 = ptrtoint i8* %295 to i64
  %297 = icmp ne i64 %296, 0
  br i1 %297, label %cond_then_block157, label %cond_end158

cond_then_block157:                               ; preds = %cond_end156
  br label %cond_end158

cond_end158:                                      ; preds = %cond_then_block157, %cond_end156
  call void @xfree(i8* %295)
  br label %cond_end85

cond_jump_then170:                                ; preds = %"cond_jump_elif_then1\0A84"
  %298 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %299 = bitcast i8* %298 to %sParserInfo*
  %info172 = load %sParserInfo, %sParserInfo* %299, align 8
  %300 = getelementptr inbounds %sParserInfo, %sParserInfo* %299, i32 0, i32 7
  %301 = load %vector__sVarTablep*, %vector__sVarTablep** %300, align 8
  %302 = load %vector__sVarTablep*, %vector__sVarTablep** %300, align 8
  call void @"vector_finalize_sVarTablep78_src/class"(%vector__sVarTablep* %302)
  %303 = ptrtoint %vector__sVarTablep* %302 to i64
  %304 = icmp ne i64 %303, 0
  br i1 %304, label %cond_then_block173, label %cond_end174

cond_end171:                                      ; preds = %"cond_jump_elif_then1\0A84"
  %305 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %306 = bitcast i8* %305 to %sParserInfo*
  %info184 = load %sParserInfo, %sParserInfo* %306, align 8
  call void @expected_next_character(i8 58, %sParserInfo* %306)
  %method_type = alloca %sCLType*
  %307 = bitcast %sCLType** %method_type to i8*
  store i8* %307, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  store %sCLType* null, %sCLType** %method_type, align 8
  %method_type185 = load %sCLType*, %sCLType** %method_type, align 8
  %308 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %309 = bitcast i8* %308 to %sParserInfo*
  %info186 = load %sParserInfo, %sParserInfo* %309, align 8
  %310 = call i1 @parse_type(%sCLType** %method_type, %sParserInfo* %309)
  %LOGICAL_DIANEAL187 = icmp eq i1 %310, false
  br i1 %LOGICAL_DIANEAL187, label %cond_jump_then188, label %cond_end189

cond_then_block173:                               ; preds = %cond_jump_then170
  br label %cond_end174

cond_end174:                                      ; preds = %cond_then_block173, %cond_jump_then170
  %311 = bitcast %vector__sVarTablep* %302 to i8*
  call void @xfree(i8* %311)
  %312 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %313 = bitcast i8* %312 to %sParserInfo*
  %info175 = load %sParserInfo, %sParserInfo* %313, align 8
  %314 = getelementptr inbounds %sParserInfo, %sParserInfo* %313, i32 0, i32 5
  %315 = load %vector__charp*, %vector__charp** %314, align 8
  %316 = load %vector__charp*, %vector__charp** %314, align 8
  call void @"vector_finalize_charp80_src/class"(%vector__charp* %316)
  %317 = ptrtoint %vector__charp* %316 to i64
  %318 = icmp ne i64 %317, 0
  br i1 %318, label %cond_then_block176, label %cond_end177

cond_then_block176:                               ; preds = %cond_end174
  br label %cond_end177

cond_end177:                                      ; preds = %cond_then_block176, %cond_end174
  %319 = bitcast %vector__charp* %316 to i8*
  call void @xfree(i8* %319)
  %320 = bitcast [8192 x i8*]* %lvtable to i8*
  %321 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %320, i64 65536)
  %322 = load i8*, i8** %method_name, align 8
  %323 = ptrtoint i8* %322 to i64
  %324 = icmp ne i64 %323, 0
  br i1 %324, label %cond_then_block178, label %cond_end179

cond_then_block178:                               ; preds = %cond_end177
  br label %cond_end179

cond_end179:                                      ; preds = %cond_then_block178, %cond_end177
  call void @xfree(i8* %322)
  %325 = load i8*, i8** %word, align 8
  %326 = ptrtoint i8* %325 to i64
  %327 = icmp ne i64 %326, 0
  br i1 %327, label %cond_then_block180, label %cond_end181

cond_then_block180:                               ; preds = %cond_end179
  br label %cond_end181

cond_end181:                                      ; preds = %cond_then_block180, %cond_end179
  call void @xfree(i8* %325)
  %328 = load i8*, i8** %name, align 8
  %329 = ptrtoint i8* %328 to i64
  %330 = icmp ne i64 %329, 0
  br i1 %330, label %cond_then_block182, label %cond_end183

cond_then_block182:                               ; preds = %cond_end181
  br label %cond_end183

cond_end183:                                      ; preds = %cond_then_block182, %cond_end181
  call void @xfree(i8* %328)
  ret i1 false

cond_jump_then188:                                ; preds = %cond_end171
  %331 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %332 = bitcast i8* %331 to %sParserInfo*
  %info190 = load %sParserInfo, %sParserInfo* %332, align 8
  %333 = getelementptr inbounds %sParserInfo, %sParserInfo* %332, i32 0, i32 7
  %334 = load %vector__sVarTablep*, %vector__sVarTablep** %333, align 8
  %335 = load %vector__sVarTablep*, %vector__sVarTablep** %333, align 8
  call void @"vector_finalize_sVarTablep81_src/class"(%vector__sVarTablep* %335)
  %336 = ptrtoint %vector__sVarTablep* %335 to i64
  %337 = icmp ne i64 %336, 0
  br i1 %337, label %cond_then_block191, label %cond_end192

cond_end189:                                      ; preds = %cond_end171
  %338 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %339 = bitcast i8* %338 to %sParserInfo*
  %info202 = load %sParserInfo, %sParserInfo* %339, align 8
  %340 = getelementptr inbounds %sParserInfo, %sParserInfo* %339, i32 0, i32 4
  %341 = load i8*, i8** %340, align 8
  %derefference_value203 = load i8, i8* %341, align 8
  %eqtmpX204 = icmp eq i8 %derefference_value203, 59
  br i1 %eqtmpX204, label %cond_jump_then205, label %cond_else_block206

cond_then_block191:                               ; preds = %cond_jump_then188
  br label %cond_end192

cond_end192:                                      ; preds = %cond_then_block191, %cond_jump_then188
  %342 = bitcast %vector__sVarTablep* %335 to i8*
  call void @xfree(i8* %342)
  %343 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %344 = bitcast i8* %343 to %sParserInfo*
  %info193 = load %sParserInfo, %sParserInfo* %344, align 8
  %345 = getelementptr inbounds %sParserInfo, %sParserInfo* %344, i32 0, i32 5
  %346 = load %vector__charp*, %vector__charp** %345, align 8
  %347 = load %vector__charp*, %vector__charp** %345, align 8
  call void @"vector_finalize_charp83_src/class"(%vector__charp* %347)
  %348 = ptrtoint %vector__charp* %347 to i64
  %349 = icmp ne i64 %348, 0
  br i1 %349, label %cond_then_block194, label %cond_end195

cond_then_block194:                               ; preds = %cond_end192
  br label %cond_end195

cond_end195:                                      ; preds = %cond_then_block194, %cond_end192
  %350 = bitcast %vector__charp* %347 to i8*
  call void @xfree(i8* %350)
  %351 = bitcast [8192 x i8*]* %lvtable to i8*
  %352 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %351, i64 65536)
  %353 = load i8*, i8** %method_name, align 8
  %354 = ptrtoint i8* %353 to i64
  %355 = icmp ne i64 %354, 0
  br i1 %355, label %cond_then_block196, label %cond_end197

cond_then_block196:                               ; preds = %cond_end195
  br label %cond_end197

cond_end197:                                      ; preds = %cond_then_block196, %cond_end195
  call void @xfree(i8* %353)
  %356 = load i8*, i8** %word, align 8
  %357 = ptrtoint i8* %356 to i64
  %358 = icmp ne i64 %357, 0
  br i1 %358, label %cond_then_block198, label %cond_end199

cond_then_block198:                               ; preds = %cond_end197
  br label %cond_end199

cond_end199:                                      ; preds = %cond_then_block198, %cond_end197
  call void @xfree(i8* %356)
  %359 = load i8*, i8** %name, align 8
  %360 = ptrtoint i8* %359 to i64
  %361 = icmp ne i64 %360, 0
  br i1 %361, label %cond_then_block200, label %cond_end201

cond_then_block200:                               ; preds = %cond_end199
  br label %cond_end201

cond_end201:                                      ; preds = %cond_then_block200, %cond_end199
  call void @xfree(i8* %359)
  ret i1 false

cond_jump_then205:                                ; preds = %cond_end189
  %362 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %363 = bitcast i8* %362 to %sParserInfo*
  %info208 = load %sParserInfo, %sParserInfo* %363, align 8
  %364 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %365 = bitcast i8* %364 to %sParserInfo*
  %info209 = load %sParserInfo, %sParserInfo* %365, align 8
  %366 = getelementptr inbounds %sParserInfo, %sParserInfo* %365, i32 0, i32 4
  %367 = load i8*, i8** %366, align 8
  %368 = ptrtoint i8* %367 to i64
  %addtmp210 = add nsw i64 %368, 1
  %369 = inttoptr i64 %addtmp210 to i8*
  %370 = getelementptr inbounds %sParserInfo, %sParserInfo* %363, i32 0, i32 4
  store i8* %369, i8** %370, align 8
  %371 = ptrtoint i8* %369 to i64
  %subtmp211 = sub nsw i64 %371, 1
  %372 = inttoptr i64 %subtmp211 to i8*
  %373 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %374 = bitcast i8* %373 to %sParserInfo*
  %info212 = load %sParserInfo, %sParserInfo* %374, align 8
  call void @skip_spaces_and_lf(%sParserInfo* %374)
  %375 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %376 = bitcast i8* %375 to %sCLClass**
  %klass213 = load %sCLClass*, %sCLClass** %376, align 8
  %377 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %378 = bitcast i8* %377 to i8**
  %method_name214 = load i8*, i8** %378, align 8
  %379 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %380 = bitcast i8* %379 to %sCLType**
  %method_type215 = load %sCLType*, %sCLType** %380, align 8
  %381 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %382 = bitcast i8* %381 to i32*
  %num_params216 = load i32, i32* %382, align 4
  %383 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %384 = bitcast i8* %383 to [32 x %sCLParam]*
  %385 = bitcast [32 x %sCLParam]* %384 to %sCLParam*
  call void @append_method(%sCLClass* %klass213, i8* %method_name214, %sCLType* %method_type215, i32 %num_params216, %sCLParam* %385, i1 true, %sCLNodeBlock* null, i32 0, %buffer* null)
  br label %cond_end207

cond_else_block206:                               ; preds = %cond_end189
  %386 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %387 = bitcast i8* %386 to %sParserInfo*
  %info217 = load %sParserInfo, %sParserInfo* %387, align 8
  call void @expected_next_character(i8 123, %sParserInfo* %387)
  %node_block = alloca %sCLNodeBlock*
  %388 = bitcast %sCLNodeBlock** %node_block to i8*
  store i8* %388, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  store %sCLNodeBlock* null, %sCLNodeBlock** %node_block, align 8
  %389 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %390 = bitcast i8* %389 to %sParserInfo*
  %info218 = load %sParserInfo, %sParserInfo* %390, align 8
  %391 = getelementptr inbounds %sParserInfo, %sParserInfo* %390, i32 0, i32 11
  %392 = load i32, i32* %391, align 4
  %max_var_num = alloca i32
  %393 = bitcast i32* %max_var_num to i8*
  store i8* %393, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 %392, i32* %max_var_num, align 4
  %node_block219 = load %sCLNodeBlock*, %sCLNodeBlock** %node_block, align 8
  %394 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %395 = bitcast i8* %394 to i32*
  %num_params220 = load i32, i32* %395, align 4
  %396 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %397 = bitcast i8* %396 to [32 x %sCLParam]*
  %398 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %399 = bitcast i8* %398 to %sParserInfo*
  %info221 = load %sParserInfo, %sParserInfo* %399, align 8
  %400 = bitcast [32 x %sCLParam]* %397 to %sCLParam*
  %401 = call i1 @parse_block(%sCLNodeBlock** %node_block, i32 %num_params220, %sCLParam* %400, %sParserInfo* %399)
  %LOGICAL_DIANEAL222 = icmp eq i1 %401, false
  br i1 %LOGICAL_DIANEAL222, label %cond_jump_then223, label %cond_end224

cond_end207:                                      ; preds = %cond_end288, %cond_jump_then205
  %402 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %403 = bitcast i8* %402 to %sParserInfo*
  %info313 = load %sParserInfo, %sParserInfo* %403, align 8
  %404 = getelementptr inbounds %sParserInfo, %sParserInfo* %403, i32 0, i32 7
  %405 = load %vector__sVarTablep*, %vector__sVarTablep** %404, align 8
  %406 = load %vector__sVarTablep*, %vector__sVarTablep** %404, align 8
  call void @"vector_finalize_sVarTablep93_src/class"(%vector__sVarTablep* %406)
  %407 = ptrtoint %vector__sVarTablep* %406 to i64
  %408 = icmp ne i64 %407, 0
  br i1 %408, label %cond_then_block314, label %cond_end315

cond_jump_then223:                                ; preds = %cond_else_block206
  %409 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %410 = bitcast i8* %409 to %sParserInfo*
  %info225 = load %sParserInfo, %sParserInfo* %410, align 8
  %411 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %412 = bitcast i8* %411 to i32*
  %max_var_num226 = load i32, i32* %412, align 4
  %413 = getelementptr inbounds %sParserInfo, %sParserInfo* %410, i32 0, i32 11
  store i32 %max_var_num226, i32* %413, align 4
  %414 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %415 = bitcast i8* %414 to %sParserInfo*
  %info227 = load %sParserInfo, %sParserInfo* %415, align 8
  %416 = getelementptr inbounds %sParserInfo, %sParserInfo* %415, i32 0, i32 7
  %417 = load %vector__sVarTablep*, %vector__sVarTablep** %416, align 8
  %418 = load %vector__sVarTablep*, %vector__sVarTablep** %416, align 8
  call void @"vector_finalize_sVarTablep84_src/class"(%vector__sVarTablep* %418)
  %419 = ptrtoint %vector__sVarTablep* %418 to i64
  %420 = icmp ne i64 %419, 0
  br i1 %420, label %cond_then_block228, label %cond_end229

cond_end224:                                      ; preds = %cond_else_block206
  %421 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %422 = bitcast i8* %421 to %sParserInfo*
  %info239 = load %sParserInfo, %sParserInfo* %422, align 8
  %423 = getelementptr inbounds %sParserInfo, %sParserInfo* %422, i32 0, i32 11
  %424 = load i32, i32* %423, align 4
  %method_max_var_num = alloca i32
  %425 = bitcast i32* %method_max_var_num to i8*
  store i8* %425, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %424, i32* %method_max_var_num, align 4
  %426 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %427 = bitcast i8* %426 to %sParserInfo*
  %info240 = load %sParserInfo, %sParserInfo* %427, align 8
  %max_var_num241 = load i32, i32* %max_var_num, align 4
  %428 = getelementptr inbounds %sParserInfo, %sParserInfo* %427, i32 0, i32 11
  store i32 %max_var_num241, i32* %428, align 4
  %429 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %430 = bitcast i8* %429 to %sCompileInfo**
  %cinfo242 = load %sCompileInfo*, %sCompileInfo** %430, align 8
  %derefference_value243 = load %sCompileInfo, %sCompileInfo* %cinfo242, align 8
  %cinfo2244 = alloca %sCompileInfo
  %431 = bitcast %sCompileInfo* %cinfo2244 to i8*
  store i8* %431, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store %sCompileInfo %derefference_value243, %sCompileInfo* %cinfo2244, align 8
  %cinfo2245 = load %sCompileInfo, %sCompileInfo* %cinfo2244, align 8
  %432 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %cinfo2244, i32 0, i32 0
  %433 = bitcast [4096 x i8]* %432 to i8*
  %434 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %435 = bitcast i8* %434 to i8**
  %sname246 = load i8*, i8** %435, align 8
  %436 = call i8* @xstrncpy(i8* %433, i8* %sname246, i32 4096)
  %cinfo2247 = load %sCompileInfo, %sCompileInfo* %cinfo2244, align 8
  %437 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %438 = bitcast i8* %437 to %sParserInfo*
  %info248 = load %sParserInfo, %sParserInfo* %438, align 8
  %439 = getelementptr inbounds %sParserInfo, %sParserInfo* %438, i32 0, i32 1
  %440 = load i32, i32* %439, align 4
  %441 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %cinfo2244, i32 0, i32 1
  store i32 %440, i32* %441, align 4
  %cinfo2249 = load %sCompileInfo, %sCompileInfo* %cinfo2244, align 8
  %442 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %cinfo2244, i32 0, i32 2
  store i32 0, i32* %442, align 4
  %cinfo2250 = load %sCompileInfo, %sCompileInfo* %cinfo2244, align 8
  %443 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %cinfo2244, i32 0, i32 3
  store i32 0, i32* %443, align 4
  %cinfo2251 = load %sCompileInfo, %sCompileInfo* %cinfo2244, align 8
  %444 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %445 = bitcast i8* %444 to %sParserInfo*
  %info252 = load %sParserInfo, %sParserInfo* %445, align 8
  %446 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %cinfo2244, i32 0, i32 4
  store %sParserInfo* %445, %sParserInfo** %446, align 8
  %cinfo2253 = load %sCompileInfo, %sCompileInfo* %cinfo2244, align 8
  %447 = call i8* @debug_xcalloc(i64 1, i64 16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_string.437, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.438, i32 0, i32 0), i32 537, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.439, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.440, i32 0, i32 0))
  %448 = bitcast i8* %447 to %buffer*
  %449 = call %buffer* @buffer_initialize(%buffer* %448)
  %450 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %cinfo2244, i32 0, i32 5
  store %buffer* %449, %buffer** %450, align 8
  %cinfo2254 = load %sCompileInfo, %sCompileInfo* %cinfo2244, align 8
  %451 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %cinfo2244, i32 0, i32 6
  store %sCLType* null, %sCLType** %451, align 8
  %cinfo2255 = load %sCompileInfo, %sCompileInfo* %cinfo2244, align 8
  %452 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %cinfo2244, i32 0, i32 7
  store i1 false, i1* %452, align 1
  %node_block256 = load %sCLNodeBlock*, %sCLNodeBlock** %node_block, align 8
  %cinfo2257 = load %sCompileInfo, %sCompileInfo* %cinfo2244, align 8
  %453 = call i1 @compile_block(%sCLNodeBlock* %node_block256, %sCompileInfo* %cinfo2244)
  %LOGICAL_DIANEAL258 = icmp eq i1 %453, false
  br i1 %LOGICAL_DIANEAL258, label %cond_jump_then259, label %cond_end260

cond_then_block228:                               ; preds = %cond_jump_then223
  br label %cond_end229

cond_end229:                                      ; preds = %cond_then_block228, %cond_jump_then223
  %454 = bitcast %vector__sVarTablep* %418 to i8*
  call void @xfree(i8* %454)
  %455 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %456 = bitcast i8* %455 to %sParserInfo*
  %info230 = load %sParserInfo, %sParserInfo* %456, align 8
  %457 = getelementptr inbounds %sParserInfo, %sParserInfo* %456, i32 0, i32 5
  %458 = load %vector__charp*, %vector__charp** %457, align 8
  %459 = load %vector__charp*, %vector__charp** %457, align 8
  call void @"vector_finalize_charp86_src/class"(%vector__charp* %459)
  %460 = ptrtoint %vector__charp* %459 to i64
  %461 = icmp ne i64 %460, 0
  br i1 %461, label %cond_then_block231, label %cond_end232

cond_then_block231:                               ; preds = %cond_end229
  br label %cond_end232

cond_end232:                                      ; preds = %cond_then_block231, %cond_end229
  %462 = bitcast %vector__charp* %459 to i8*
  call void @xfree(i8* %462)
  %463 = bitcast [8192 x i8*]* %lvtable to i8*
  %464 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %463, i64 65536)
  %465 = load i8*, i8** %method_name, align 8
  %466 = ptrtoint i8* %465 to i64
  %467 = icmp ne i64 %466, 0
  br i1 %467, label %cond_then_block233, label %cond_end234

cond_then_block233:                               ; preds = %cond_end232
  br label %cond_end234

cond_end234:                                      ; preds = %cond_then_block233, %cond_end232
  call void @xfree(i8* %465)
  %468 = load i8*, i8** %word, align 8
  %469 = ptrtoint i8* %468 to i64
  %470 = icmp ne i64 %469, 0
  br i1 %470, label %cond_then_block235, label %cond_end236

cond_then_block235:                               ; preds = %cond_end234
  br label %cond_end236

cond_end236:                                      ; preds = %cond_then_block235, %cond_end234
  call void @xfree(i8* %468)
  %471 = load i8*, i8** %name, align 8
  %472 = ptrtoint i8* %471 to i64
  %473 = icmp ne i64 %472, 0
  br i1 %473, label %cond_then_block237, label %cond_end238

cond_then_block237:                               ; preds = %cond_end236
  br label %cond_end238

cond_end238:                                      ; preds = %cond_then_block237, %cond_end236
  call void @xfree(i8* %471)
  ret i1 false

cond_jump_then259:                                ; preds = %cond_end224
  %474 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %475 = bitcast i8* %474 to %sParserInfo*
  %info261 = load %sParserInfo, %sParserInfo* %475, align 8
  %476 = getelementptr inbounds %sParserInfo, %sParserInfo* %475, i32 0, i32 7
  %477 = load %vector__sVarTablep*, %vector__sVarTablep** %476, align 8
  %478 = load %vector__sVarTablep*, %vector__sVarTablep** %476, align 8
  call void @"vector_finalize_sVarTablep87_src/class"(%vector__sVarTablep* %478)
  %479 = ptrtoint %vector__sVarTablep* %478 to i64
  %480 = icmp ne i64 %479, 0
  br i1 %480, label %cond_then_block262, label %cond_end263

cond_end260:                                      ; preds = %cond_end224
  %481 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %482 = bitcast i8* %481 to %sCLType**
  %method_type276 = load %sCLType*, %sCLType** %482, align 8
  %cinfo2277 = load %sCompileInfo, %sCompileInfo* %cinfo2244, align 8
  %483 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %cinfo2244, i32 0, i32 6
  %484 = load %sCLType*, %sCLType** %483, align 8
  %485 = call i1 @substitution_posibility(%sCLType* %method_type276, %sCLType* %484)
  %LOGICAL_DIANEAL278 = icmp eq i1 %485, false
  br i1 %LOGICAL_DIANEAL278, label %cond_jump_then279, label %cond_end280

cond_then_block262:                               ; preds = %cond_jump_then259
  br label %cond_end263

cond_end263:                                      ; preds = %cond_then_block262, %cond_jump_then259
  %486 = bitcast %vector__sVarTablep* %478 to i8*
  call void @xfree(i8* %486)
  %487 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %488 = bitcast i8* %487 to %sCompileInfo*
  %cinfo2264 = load %sCompileInfo, %sCompileInfo* %488, align 8
  %489 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %488, i32 0, i32 5
  %490 = load %buffer*, %buffer** %489, align 8
  %491 = load %buffer*, %buffer** %489, align 8
  call void @buffer_finalize(%buffer* %491)
  %492 = ptrtoint %buffer* %491 to i64
  %493 = icmp ne i64 %492, 0
  br i1 %493, label %cond_then_block265, label %cond_end266

cond_then_block265:                               ; preds = %cond_end263
  br label %cond_end266

cond_end266:                                      ; preds = %cond_then_block265, %cond_end263
  %494 = bitcast %buffer* %491 to i8*
  call void @xfree(i8* %494)
  %495 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %496 = bitcast i8* %495 to %sParserInfo*
  %info267 = load %sParserInfo, %sParserInfo* %496, align 8
  %497 = getelementptr inbounds %sParserInfo, %sParserInfo* %496, i32 0, i32 5
  %498 = load %vector__charp*, %vector__charp** %497, align 8
  %499 = load %vector__charp*, %vector__charp** %497, align 8
  call void @"vector_finalize_charp89_src/class"(%vector__charp* %499)
  %500 = ptrtoint %vector__charp* %499 to i64
  %501 = icmp ne i64 %500, 0
  br i1 %501, label %cond_then_block268, label %cond_end269

cond_then_block268:                               ; preds = %cond_end266
  br label %cond_end269

cond_end269:                                      ; preds = %cond_then_block268, %cond_end266
  %502 = bitcast %vector__charp* %499 to i8*
  call void @xfree(i8* %502)
  %503 = bitcast [8192 x i8*]* %lvtable to i8*
  %504 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %503, i64 65536)
  %505 = load i8*, i8** %method_name, align 8
  %506 = ptrtoint i8* %505 to i64
  %507 = icmp ne i64 %506, 0
  br i1 %507, label %cond_then_block270, label %cond_end271

cond_then_block270:                               ; preds = %cond_end269
  br label %cond_end271

cond_end271:                                      ; preds = %cond_then_block270, %cond_end269
  call void @xfree(i8* %505)
  %508 = load i8*, i8** %word, align 8
  %509 = ptrtoint i8* %508 to i64
  %510 = icmp ne i64 %509, 0
  br i1 %510, label %cond_then_block272, label %cond_end273

cond_then_block272:                               ; preds = %cond_end271
  br label %cond_end273

cond_end273:                                      ; preds = %cond_then_block272, %cond_end271
  call void @xfree(i8* %508)
  %511 = load i8*, i8** %name, align 8
  %512 = ptrtoint i8* %511 to i64
  %513 = icmp ne i64 %512, 0
  br i1 %513, label %cond_then_block274, label %cond_end275

cond_then_block274:                               ; preds = %cond_end273
  br label %cond_end275

cond_end275:                                      ; preds = %cond_then_block274, %cond_end273
  call void @xfree(i8* %511)
  ret i1 false

cond_jump_then279:                                ; preds = %cond_end260
  %514 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %515 = bitcast i8* %514 to %sCompileInfo*
  %cinfo2281 = load %sCompileInfo, %sCompileInfo* %515, align 8
  call void @compile_err_msg(%sCompileInfo* %515, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_string.441, i32 0, i32 0))
  %516 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %517 = bitcast i8* %516 to %sCompileInfo*
  %cinfo2282 = load %sCompileInfo, %sCompileInfo* %517, align 8
  %518 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %519 = bitcast i8* %518 to %sCompileInfo*
  %cinfo2283 = load %sCompileInfo, %sCompileInfo* %519, align 8
  %520 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %519, i32 0, i32 2
  %521 = load i32, i32* %520, align 4
  %addtmp284 = add nsw i32 %521, 1
  %522 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %517, i32 0, i32 2
  store i32 %addtmp284, i32* %522, align 4
  %subttmp = sub nsw i32 %addtmp284, 1
  br label %cond_end280

cond_end280:                                      ; preds = %cond_jump_then279, %cond_end260
  %cinfo2285 = load %sCompileInfo, %sCompileInfo* %cinfo2244, align 8
  %523 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %cinfo2244, i32 0, i32 2
  %524 = load i32, i32* %523, align 4
  %gttmp286 = icmp sgt i32 %524, 0
  br i1 %gttmp286, label %cond_jump_then287, label %cond_end288

cond_jump_then287:                                ; preds = %cond_end280
  %stderr289 = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %525 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr289, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_string.442, i32 0, i32 0))
  %526 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %527 = bitcast i8* %526 to %sParserInfo*
  %info290 = load %sParserInfo, %sParserInfo* %527, align 8
  %528 = getelementptr inbounds %sParserInfo, %sParserInfo* %527, i32 0, i32 7
  %529 = load %vector__sVarTablep*, %vector__sVarTablep** %528, align 8
  %530 = load %vector__sVarTablep*, %vector__sVarTablep** %528, align 8
  call void @"vector_finalize_sVarTablep90_src/class"(%vector__sVarTablep* %530)
  %531 = ptrtoint %vector__sVarTablep* %530 to i64
  %532 = icmp ne i64 %531, 0
  br i1 %532, label %cond_then_block291, label %cond_end292

cond_end288:                                      ; preds = %cond_end280
  %533 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %534 = bitcast i8* %533 to %sParserInfo*
  %info305 = load %sParserInfo, %sParserInfo* %534, align 8
  call void @expected_next_character(i8 125, %sParserInfo* %534)
  %535 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %536 = bitcast i8* %535 to %sCLClass**
  %klass306 = load %sCLClass*, %sCLClass** %536, align 8
  %537 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %538 = bitcast i8* %537 to i8**
  %method_name307 = load i8*, i8** %538, align 8
  %539 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %540 = bitcast i8* %539 to %sCLType**
  %method_type308 = load %sCLType*, %sCLType** %540, align 8
  %541 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %542 = bitcast i8* %541 to i32*
  %num_params309 = load i32, i32* %542, align 4
  %543 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %544 = bitcast i8* %543 to [32 x %sCLParam]*
  %node_block310 = load %sCLNodeBlock*, %sCLNodeBlock** %node_block, align 8
  %method_max_var_num311 = load i32, i32* %method_max_var_num, align 4
  %cinfo2312 = load %sCompileInfo, %sCompileInfo* %cinfo2244, align 8
  %545 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %cinfo2244, i32 0, i32 5
  %546 = load %buffer*, %buffer** %545, align 8
  %547 = bitcast [32 x %sCLParam]* %544 to %sCLParam*
  call void @append_method(%sCLClass* %klass306, i8* %method_name307, %sCLType* %method_type308, i32 %num_params309, %sCLParam* %547, i1 false, %sCLNodeBlock* %node_block310, i32 %method_max_var_num311, %buffer* %546)
  br label %cond_end207

cond_then_block291:                               ; preds = %cond_jump_then287
  br label %cond_end292

cond_end292:                                      ; preds = %cond_then_block291, %cond_jump_then287
  %548 = bitcast %vector__sVarTablep* %530 to i8*
  call void @xfree(i8* %548)
  %549 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %550 = bitcast i8* %549 to %sCompileInfo*
  %cinfo2293 = load %sCompileInfo, %sCompileInfo* %550, align 8
  %551 = getelementptr inbounds %sCompileInfo, %sCompileInfo* %550, i32 0, i32 5
  %552 = load %buffer*, %buffer** %551, align 8
  %553 = load %buffer*, %buffer** %551, align 8
  call void @buffer_finalize(%buffer* %553)
  %554 = ptrtoint %buffer* %553 to i64
  %555 = icmp ne i64 %554, 0
  br i1 %555, label %cond_then_block294, label %cond_end295

cond_then_block294:                               ; preds = %cond_end292
  br label %cond_end295

cond_end295:                                      ; preds = %cond_then_block294, %cond_end292
  %556 = bitcast %buffer* %553 to i8*
  call void @xfree(i8* %556)
  %557 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %558 = bitcast i8* %557 to %sParserInfo*
  %info296 = load %sParserInfo, %sParserInfo* %558, align 8
  %559 = getelementptr inbounds %sParserInfo, %sParserInfo* %558, i32 0, i32 5
  %560 = load %vector__charp*, %vector__charp** %559, align 8
  %561 = load %vector__charp*, %vector__charp** %559, align 8
  call void @"vector_finalize_charp92_src/class"(%vector__charp* %561)
  %562 = ptrtoint %vector__charp* %561 to i64
  %563 = icmp ne i64 %562, 0
  br i1 %563, label %cond_then_block297, label %cond_end298

cond_then_block297:                               ; preds = %cond_end295
  br label %cond_end298

cond_end298:                                      ; preds = %cond_then_block297, %cond_end295
  %564 = bitcast %vector__charp* %561 to i8*
  call void @xfree(i8* %564)
  %565 = bitcast [8192 x i8*]* %lvtable to i8*
  %566 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %565, i64 65536)
  %567 = load i8*, i8** %method_name, align 8
  %568 = ptrtoint i8* %567 to i64
  %569 = icmp ne i64 %568, 0
  br i1 %569, label %cond_then_block299, label %cond_end300

cond_then_block299:                               ; preds = %cond_end298
  br label %cond_end300

cond_end300:                                      ; preds = %cond_then_block299, %cond_end298
  call void @xfree(i8* %567)
  %570 = load i8*, i8** %word, align 8
  %571 = ptrtoint i8* %570 to i64
  %572 = icmp ne i64 %571, 0
  br i1 %572, label %cond_then_block301, label %cond_end302

cond_then_block301:                               ; preds = %cond_end300
  br label %cond_end302

cond_end302:                                      ; preds = %cond_then_block301, %cond_end300
  call void @xfree(i8* %570)
  %573 = load i8*, i8** %name, align 8
  %574 = ptrtoint i8* %573 to i64
  %575 = icmp ne i64 %574, 0
  br i1 %575, label %cond_then_block303, label %cond_end304

cond_then_block303:                               ; preds = %cond_end302
  br label %cond_end304

cond_end304:                                      ; preds = %cond_then_block303, %cond_end302
  call void @xfree(i8* %573)
  ret i1 false

cond_then_block314:                               ; preds = %cond_end207
  br label %cond_end315

cond_end315:                                      ; preds = %cond_then_block314, %cond_end207
  %576 = bitcast %vector__sVarTablep* %406 to i8*
  call void @xfree(i8* %576)
  %577 = load i8*, i8** %method_name, align 8
  %578 = ptrtoint i8* %577 to i64
  %579 = icmp ne i64 %578, 0
  br i1 %579, label %cond_then_block316, label %cond_end317

cond_then_block316:                               ; preds = %cond_end315
  br label %cond_end317

cond_end317:                                      ; preds = %cond_then_block316, %cond_end315
  call void @xfree(i8* %577)
  br label %cond_end85

cond_then_block321:                               ; preds = %"cond_jump_elif_then2\0A"
  br label %cond_end322

cond_end322:                                      ; preds = %cond_then_block321, %"cond_jump_elif_then2\0A"
  call void @xfree(i8* %189)
  br label %cond_end_block76

after_break323:                                   ; No predecessors!
  br label %cond_end85

cond_then_block327:                               ; preds = %cond_else_block
  br label %cond_end328

cond_end328:                                      ; preds = %cond_then_block327, %cond_else_block
  %580 = bitcast %vector__sVarTablep* %201 to i8*
  call void @xfree(i8* %580)
  %581 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %582 = bitcast i8* %581 to %sParserInfo*
  %info329 = load %sParserInfo, %sParserInfo* %582, align 8
  %583 = getelementptr inbounds %sParserInfo, %sParserInfo* %582, i32 0, i32 5
  %584 = load %vector__charp*, %vector__charp** %583, align 8
  %585 = load %vector__charp*, %vector__charp** %583, align 8
  call void @"vector_finalize_charp97_src/class"(%vector__charp* %585)
  %586 = ptrtoint %vector__charp* %585 to i64
  %587 = icmp ne i64 %586, 0
  br i1 %587, label %cond_then_block330, label %cond_end331

cond_then_block330:                               ; preds = %cond_end328
  br label %cond_end331

cond_end331:                                      ; preds = %cond_then_block330, %cond_end328
  %588 = bitcast %vector__charp* %585 to i8*
  call void @xfree(i8* %588)
  %589 = bitcast [8192 x i8*]* %lvtable to i8*
  %590 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %589, i64 65536)
  %591 = ptrtoint i8* %196 to i64
  %592 = icmp ne i64 %591, 0
  br i1 %592, label %cond_then_block332, label %cond_end333

cond_then_block332:                               ; preds = %cond_end331
  br label %cond_end333

cond_end333:                                      ; preds = %cond_then_block332, %cond_end331
  call void @xfree(i8* %196)
  %593 = load i8*, i8** %word, align 8
  %594 = ptrtoint i8* %593 to i64
  %595 = icmp ne i64 %594, 0
  br i1 %595, label %cond_then_block334, label %cond_end335

cond_then_block334:                               ; preds = %cond_end333
  br label %cond_end335

cond_end335:                                      ; preds = %cond_then_block334, %cond_end333
  call void @xfree(i8* %593)
  %596 = load i8*, i8** %name, align 8
  %597 = ptrtoint i8* %596 to i64
  %598 = icmp ne i64 %597, 0
  br i1 %598, label %cond_then_block336, label %cond_end337

cond_then_block336:                               ; preds = %cond_end335
  br label %cond_end337

cond_end337:                                      ; preds = %cond_then_block336, %cond_end335
  call void @xfree(i8* %596)
  ret i1 false

cond_then_block338:                               ; preds = %cond_end85
  br label %cond_end339

cond_end339:                                      ; preds = %cond_then_block338, %cond_end85
  call void @xfree(i8* %204)
  br label %loop_top_block72

cond_jump_then342:                                ; preds = %cond_end_block76
  %stderr344 = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %599 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %600 = bitcast i8* %599 to %sParserInfo*
  %info345 = load %sParserInfo, %sParserInfo* %600, align 8
  %601 = getelementptr inbounds %sParserInfo, %sParserInfo* %600, i32 0, i32 3
  %602 = load i32, i32* %601, align 4
  %603 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr344, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_string.444, i32 0, i32 0), i32 %602)
  %604 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %605 = bitcast i8* %604 to %sParserInfo*
  %info346 = load %sParserInfo, %sParserInfo* %605, align 8
  %606 = getelementptr inbounds %sParserInfo, %sParserInfo* %605, i32 0, i32 5
  %607 = load %vector__charp*, %vector__charp** %606, align 8
  %608 = load %vector__charp*, %vector__charp** %606, align 8
  call void @"vector_finalize_charp98_src/class"(%vector__charp* %608)
  %609 = ptrtoint %vector__charp* %608 to i64
  %610 = icmp ne i64 %609, 0
  br i1 %610, label %cond_then_block347, label %cond_end348

cond_end343:                                      ; preds = %cond_end_block76
  %info351 = load %sParserInfo, %sParserInfo* %info, align 8
  %611 = getelementptr inbounds %sParserInfo, %sParserInfo* %info, i32 0, i32 5
  %612 = load %vector__charp*, %vector__charp** %611, align 8
  %613 = load %vector__charp*, %vector__charp** %611, align 8
  call void @"vector_finalize_charp99_src/class"(%vector__charp* %613)
  %614 = ptrtoint %vector__charp* %613 to i64
  %615 = icmp ne i64 %614, 0
  br i1 %615, label %cond_then_block352, label %cond_end353

cond_then_block347:                               ; preds = %cond_jump_then342
  br label %cond_end348

cond_end348:                                      ; preds = %cond_then_block347, %cond_jump_then342
  %616 = bitcast %vector__charp* %608 to i8*
  call void @xfree(i8* %616)
  %617 = bitcast [8192 x i8*]* %lvtable to i8*
  %618 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %617, i64 65536)
  %619 = load i8*, i8** %name, align 8
  %620 = ptrtoint i8* %619 to i64
  %621 = icmp ne i64 %620, 0
  br i1 %621, label %cond_then_block349, label %cond_end350

cond_then_block349:                               ; preds = %cond_end348
  br label %cond_end350

cond_end350:                                      ; preds = %cond_then_block349, %cond_end348
  call void @xfree(i8* %619)
  ret i1 false

cond_then_block352:                               ; preds = %cond_end343
  br label %cond_end353

cond_end353:                                      ; preds = %cond_then_block352, %cond_end343
  %622 = bitcast %vector__charp* %613 to i8*
  call void @xfree(i8* %622)
  %623 = bitcast [8192 x i8*]* %lvtable to i8*
  %624 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %623, i64 65536)
  %625 = load i8*, i8** %name, align 8
  %626 = ptrtoint i8* %625 to i64
  %627 = icmp ne i64 %626, 0
  br i1 %627, label %cond_then_block354, label %cond_end355

cond_then_block354:                               ; preds = %cond_end353
  br label %cond_end355

cond_end355:                                      ; preds = %cond_then_block354, %cond_end353
  call void @xfree(i8* %625)
  ret i1 true
}

define i1 @invoke_native_method(%sCLClass* %klass, %sCLMethod* %method, %CLVALUE** %stack_ptr, %sVMInfo* %info) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %klass1 = alloca %sCLClass*
  store %sCLClass* %klass, %sCLClass** %klass1, align 8
  %2 = bitcast %sCLClass** %klass1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %method2 = alloca %sCLMethod*
  store %sCLMethod* %method, %sCLMethod** %method2, align 8
  %3 = bitcast %sCLMethod** %method2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %stack_ptr3 = alloca %CLVALUE**
  store %CLVALUE** %stack_ptr, %CLVALUE*** %stack_ptr3, align 8
  %4 = bitcast %CLVALUE*** %stack_ptr3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %info4 = alloca %sVMInfo*
  store %sVMInfo* %info, %sVMInfo** %info4, align 8
  %5 = bitcast %sVMInfo** %info4 to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %buf = alloca [128 x i8]
  %6 = bitcast [128 x i8]* %buf to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %klass5 = load %sCLClass*, %sCLClass** %klass1, align 8
  %method6 = load %sCLMethod*, %sCLMethod** %method2, align 8
  %7 = bitcast [128 x i8]* %buf to i8*
  call void @create_native_method_name(i8* %7, %sCLClass* %klass5, %sCLMethod* %method6)
  %gNativeMethods = load %map__charp_lambdap*, %map__charp_lambdap** @gNativeMethods, align 8
  %8 = bitcast [128 x i8]* %buf to i8*
  %9 = call i1 (%CLVALUE**, %sVMInfo*)* @"map_at_charp_lambdap0_src/class"(%map__charp_lambdap* %gNativeMethods, i8* %8, i1 (%CLVALUE**, %sVMInfo*)* null)
  %native_method = alloca i1 (%CLVALUE**, %sVMInfo*)*
  %10 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %native_method to i8*
  store i8* %10, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  store i1 (%CLVALUE**, %sVMInfo*)* %9, i1 (%CLVALUE**, %sVMInfo*)** %native_method, align 8
  %native_method7 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %native_method, align 8
  %eqtmpX = icmp eq i1 (%CLVALUE**, %sVMInfo*)* %native_method7, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %11 = bitcast [8192 x i8*]* %lvtable to i8*
  %12 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %11, i64 65536)
  ret i1 false

cond_end:                                         ; preds = %entry
  %native_method8 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %native_method, align 8
  %stack_ptr9 = load %CLVALUE**, %CLVALUE*** %stack_ptr3, align 8
  %info10 = load %sVMInfo*, %sVMInfo** %info4, align 8
  %13 = call i1 %native_method8(%CLVALUE** %stack_ptr9, %sVMInfo* %info10)
  %LOGICAL_DIANEAL = icmp eq i1 %13, false
  br i1 %LOGICAL_DIANEAL, label %cond_jump_then11, label %cond_end12

cond_jump_then11:                                 ; preds = %cond_end
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret i1 false

cond_end12:                                       ; preds = %cond_end
  %16 = bitcast [8192 x i8*]* %lvtable to i8*
  %17 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %16, i64 65536)
  ret i1 true
}

declare %sVarTable* @sVarTable_initialize(%sVarTable*)

declare void @parser_err_msg(%sParserInfo*, i8*)

declare void @skip_spaces_and_lf(%sParserInfo*)

declare i1 @parse_params(%sCLParam*, i32*, %sParserInfo*)

declare i8* @parse_word(%sParserInfo*)

declare i1 @parse_type(%sCLType**, %sParserInfo*)

declare void @expected_next_character(i8, %sParserInfo*)

declare void @parse_comment(%sParserInfo*)

declare i1 @expression(%sCLNode**, %sParserInfo*)

declare i1 @compile(%sCLNode*, %sCompileInfo*)

declare void @compile_err_msg(%sCompileInfo*, i8*)

declare void @init_var_table(%sParserInfo*)

declare void @final_var_table(%sParserInfo*)

declare void @add_variable_to_table(%sParserInfo*, i8*, %sCLType*, i1)

declare %sVar* @get_variable_from_table(%sParserInfo*, i8*)

declare void @check_already_added_variable(%sParserInfo*, i8*)

declare i32 @get_var_num(%vector__sVarTablep*)

declare void @show_vtable(%vector__sVarTablep*)

declare %sCLType* @clone_type(%sCLType*, %sParserInfo*)

declare %sCLType* @create_type(i8*, %sParserInfo*)

declare %sCLType* @parse_type_runtime(i8*, %sVMInfo*)

declare i8* @create_type_name(%sCLType*)

declare i1 @type_identify(%sCLType*, %sCLType*)

declare i1 @substitution_posibility(%sCLType*, %sCLType*)

declare i1 @type_identify_with_class_name(%sCLType*, i8*, %sParserInfo*)

declare i1 @is_generics_type(%sCLType*)

declare i32 @get_generics_type_number(%sCLType*, %sParserInfo*)

declare %sCLType* @solve_generics(%sCLType*, %sCLType*, %sParserInfo*)

declare void @show_type(%sCLType*)

declare void @codes_append_type(%buffer*, %sCLType*)

declare void @codes_read_type(i8*, %sCLType**)

declare %sCLNode* @sNodeTree_create_break(%sParserInfo*)

declare %sCLNode* @sNodeTree_create_normal_block(%sCLNodeBlock*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_minus(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_primitive_minus(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_logical_denial(%sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_return(%sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_try(%sCLNodeBlock*, %sCLNodeBlock*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_exit(%sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_primitive_plus(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_while_expression(%sCLNode*, %sCLNodeBlock*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_plus(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_primitive_equal(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_primitive_not_equal(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_primitive_greater(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_primitive_lesser(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_primitive_lesser_equal(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_primitive_greater_equal(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_int_value(i32, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_store_variable(i8*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_load_variable(i8*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_equal(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_not_equal(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_greater(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_lesser(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_lesser_equal(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_greater_equal(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_and_and(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_or_or(%sCLNode*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_string_value(i8*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_true_value(%sParserInfo*)

declare %sCLNode* @sNodeTree_create_false_value(%sParserInfo*)

declare %sCLNode* @sNodeTree_create_null_value(%sParserInfo*)

declare %sCLNode* @sNodeTree_create_command_value(%sParserInfo*)

declare %sCLNode* @sNodeTree_create_if_expression(%sCLNode*, %sCLNodeBlock*, i32, %sCLNode**, %sCLNodeBlock**, %sCLNodeBlock*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_lambda(i32, %sCLParam*, %sCLNodeBlock*, %sCLType*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_method_block(i8*, i32, %buffer*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_class(i8*, i8*, i32, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_object(%sCLType*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_method_call(i8*, i32, %sCLNode**, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_command_call(%sCLNode*, i8*, i32, %sCLNode**, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_block_object_call(i32, %sCLNode**, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_jobs(%sParserInfo*)

declare %sCLNode* @sNodeTree_create_fg(i32, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_load_field(%sCLNode*, i8*, %sParserInfo*)

declare %sCLNode* @NodeTree_create_store_field(%sCLNode*, i8*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_store_field(%sCLNode*, i8*, %sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_throw_exception(%sCLNode*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_macro(i8*, i8*, %sParserInfo*)

declare %sCLNode* @sNodeTree_create_call_macro(i8*, i8*, %sParserInfo*)

declare void @macro_init()

declare void @macro_final()

declare void @append_macro(i8*, i8*)

declare i1 @call_macro(%sCLNode**, i8*, i8*, %sParserInfo*)

declare void @vm_err_msg(%CLVALUE**, %sVMInfo*, i8*)

declare i1 @vm(%buffer*, %CLVALUE*, i32, i32, %CLVALUE*, %sVMInfo*)

declare i32 @alloc_heap_mem(i32, %sCLType*, i32, %sVMInfo*)

declare void @heap_init(i32, i32)

declare void @heap_final(%sVMInfo*)

declare %sCLHeapMem* @get_object_pointer(i32)

declare i32 @create_object(%sCLType*, %sVMInfo*)

declare i32 @create_null_object(%sVMInfo*)

declare i32 @create_int_object(i32, %sVMInfo*)

declare i32 @create_string_object(i8*, %sVMInfo*)

declare i8* @get_string_mem(i32)

declare i32 @create_string_data_object(i8*, %sVMInfo*)

declare i32 @create_bool_object(i32, %sVMInfo*)

declare i32 @create_block_object(i8*, i32*, i32, %sVMInfo*)

declare i32 @create_command_object(i8*, i32, i8*, i32, i32, i1, %sVMInfo*)

declare i32 @create_job_object(i8*, %termios*, i32, %sVMInfo*)

declare void @mark_object(i32, i8*, %sVMInfo*)

declare i1 @free_object(i32, %sVMInfo*)

declare void @mark_belong_objects(i32, i8*, %sVMInfo*)

declare void @alignment(i32*)

declare i1 @parse_block(%sCLNodeBlock**, i32, %sCLParam*, %sParserInfo*)

declare i1 @compile_block(%sCLNodeBlock*, %sCompileInfo*)

define i1 @int_set_value(%CLVALUE** %stack_ptr, %sVMInfo* %info) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %stack_ptr1 = alloca %CLVALUE**
  store %CLVALUE** %stack_ptr, %CLVALUE*** %stack_ptr1, align 8
  %2 = bitcast %CLVALUE*** %stack_ptr1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %info2 = alloca %sVMInfo*
  store %sVMInfo* %info, %sVMInfo** %info2, align 8
  %3 = bitcast %sVMInfo** %info2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %stack_ptr3 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value = load %CLVALUE*, %CLVALUE** %stack_ptr3, align 8
  %4 = ptrtoint %CLVALUE* %derefference_value to i64
  %subtmp = sub nsw i64 %4, 8
  %5 = inttoptr i64 %subtmp to %CLVALUE*
  %self = alloca %CLVALUE*
  %6 = bitcast %CLVALUE** %self to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  store %CLVALUE* %5, %CLVALUE** %self, align 8
  %stack_ptr4 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value5 = load %CLVALUE*, %CLVALUE** %stack_ptr4, align 8
  %7 = ptrtoint %CLVALUE* %derefference_value5 to i64
  %subtmp6 = sub nsw i64 %7, 4
  %8 = inttoptr i64 %subtmp6 to %CLVALUE*
  %value = alloca %CLVALUE*
  %9 = bitcast %CLVALUE** %value to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store %CLVALUE* %8, %CLVALUE** %value, align 8
  %self7 = load %CLVALUE*, %CLVALUE** %self, align 8
  %10 = bitcast %CLVALUE* %self7 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = call %sCLHeapMem* @get_object_pointer(i32 %11)
  %13 = bitcast %sCLHeapMem* %12 to %sCLInt*
  %object_data = alloca %sCLInt*
  %14 = bitcast %sCLInt** %object_data to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store %sCLInt* %13, %sCLInt** %object_data, align 8
  %value8 = load %CLVALUE*, %CLVALUE** %value, align 8
  %15 = bitcast %CLVALUE* %value8 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = call %sCLHeapMem* @get_object_pointer(i32 %16)
  %18 = bitcast %sCLHeapMem* %17 to %sCLInt*
  %object_data2 = alloca %sCLInt*
  %19 = bitcast %sCLInt** %object_data2 to i8*
  store i8* %19, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  store %sCLInt* %18, %sCLInt** %object_data2, align 8
  %object_data9 = load %sCLInt*, %sCLInt** %object_data, align 8
  %object_data210 = load %sCLInt*, %sCLInt** %object_data2, align 8
  %20 = getelementptr inbounds %sCLInt, %sCLInt* %object_data210, i32 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %sCLInt, %sCLInt* %object_data9, i32 0, i32 3
  store i32 %21, i32* %22, align 4
  %23 = bitcast [8192 x i8*]* %lvtable to i8*
  %24 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %23, i64 65536)
  ret i1 true
}

define i1 @string_set_value(%CLVALUE** %stack_ptr, %sVMInfo* %info) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %stack_ptr1 = alloca %CLVALUE**
  store %CLVALUE** %stack_ptr, %CLVALUE*** %stack_ptr1, align 8
  %2 = bitcast %CLVALUE*** %stack_ptr1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %info2 = alloca %sVMInfo*
  store %sVMInfo* %info, %sVMInfo** %info2, align 8
  %3 = bitcast %sVMInfo** %info2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %stack_ptr3 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value = load %CLVALUE*, %CLVALUE** %stack_ptr3, align 8
  %4 = ptrtoint %CLVALUE* %derefference_value to i64
  %subtmp = sub nsw i64 %4, 8
  %5 = inttoptr i64 %subtmp to %CLVALUE*
  %self = alloca %CLVALUE*
  %6 = bitcast %CLVALUE** %self to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  store %CLVALUE* %5, %CLVALUE** %self, align 8
  %stack_ptr4 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value5 = load %CLVALUE*, %CLVALUE** %stack_ptr4, align 8
  %7 = ptrtoint %CLVALUE* %derefference_value5 to i64
  %subtmp6 = sub nsw i64 %7, 4
  %8 = inttoptr i64 %subtmp6 to %CLVALUE*
  %value = alloca %CLVALUE*
  %9 = bitcast %CLVALUE** %value to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store %CLVALUE* %8, %CLVALUE** %value, align 8
  %value7 = load %CLVALUE*, %CLVALUE** %value, align 8
  %10 = bitcast %CLVALUE* %value7 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = call i8* @get_string_mem(i32 %11)
  %str = alloca i8*
  %13 = bitcast i8** %str to i8*
  store i8* %13, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i8* %12, i8** %str, align 8
  %str8 = load i8*, i8** %str, align 8
  %info9 = load %sVMInfo*, %sVMInfo** %info2, align 8
  %14 = call i32 @create_string_data_object(i8* %str8, %sVMInfo* %info9)
  %obj = alloca i32
  %15 = bitcast i32* %obj to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  store i32 %14, i32* %obj, align 4
  %self10 = load %CLVALUE*, %CLVALUE** %self, align 8
  %16 = bitcast %CLVALUE* %self10 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = call %sCLHeapMem* @get_object_pointer(i32 %17)
  %19 = bitcast %sCLHeapMem* %18 to %sCLObject*
  %object_data = alloca %sCLObject*
  %20 = bitcast %sCLObject** %object_data to i8*
  store i8* %20, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store %sCLObject* %19, %sCLObject** %object_data, align 8
  %object_data11 = load %sCLObject*, %sCLObject** %object_data, align 8
  %21 = getelementptr inbounds %sCLObject, %sCLObject* %object_data11, i32 0, i32 3
  %22 = load %anon85, %anon85* %21, align 8
  %23 = bitcast %anon85* %21 to [32 x %CLVALUE]*
  %24 = bitcast [32 x %CLVALUE]* %23 to %CLVALUE*
  %element_address = getelementptr %CLVALUE, %CLVALUE* %24, i32 0
  %element = load %CLVALUE, %CLVALUE* %element_address, align 8
  %obj12 = load i32, i32* %obj, align 4
  %25 = bitcast %CLVALUE* %element_address to i32*
  store i32 %obj12, i32* %25, align 4
  %26 = bitcast [8192 x i8*]* %lvtable to i8*
  %27 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %26, i64 65536)
  ret i1 true
}

define i1 @bool_set_value(%CLVALUE** %stack_ptr, %sVMInfo* %info) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %stack_ptr1 = alloca %CLVALUE**
  store %CLVALUE** %stack_ptr, %CLVALUE*** %stack_ptr1, align 8
  %2 = bitcast %CLVALUE*** %stack_ptr1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %info2 = alloca %sVMInfo*
  store %sVMInfo* %info, %sVMInfo** %info2, align 8
  %3 = bitcast %sVMInfo** %info2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %stack_ptr3 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value = load %CLVALUE*, %CLVALUE** %stack_ptr3, align 8
  %4 = ptrtoint %CLVALUE* %derefference_value to i64
  %subtmp = sub nsw i64 %4, 8
  %5 = inttoptr i64 %subtmp to %CLVALUE*
  %self = alloca %CLVALUE*
  %6 = bitcast %CLVALUE** %self to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  store %CLVALUE* %5, %CLVALUE** %self, align 8
  %stack_ptr4 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value5 = load %CLVALUE*, %CLVALUE** %stack_ptr4, align 8
  %7 = ptrtoint %CLVALUE* %derefference_value5 to i64
  %subtmp6 = sub nsw i64 %7, 4
  %8 = inttoptr i64 %subtmp6 to %CLVALUE*
  %value = alloca %CLVALUE*
  %9 = bitcast %CLVALUE** %value to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store %CLVALUE* %8, %CLVALUE** %value, align 8
  %self7 = load %CLVALUE*, %CLVALUE** %self, align 8
  %10 = bitcast %CLVALUE* %self7 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = call %sCLHeapMem* @get_object_pointer(i32 %11)
  %13 = bitcast %sCLHeapMem* %12 to %sCLInt*
  %object_data = alloca %sCLInt*
  %14 = bitcast %sCLInt** %object_data to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store %sCLInt* %13, %sCLInt** %object_data, align 8
  %value8 = load %CLVALUE*, %CLVALUE** %value, align 8
  %15 = bitcast %CLVALUE* %value8 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = call %sCLHeapMem* @get_object_pointer(i32 %16)
  %18 = bitcast %sCLHeapMem* %17 to %sCLInt*
  %object_data2 = alloca %sCLInt*
  %19 = bitcast %sCLInt** %object_data2 to i8*
  store i8* %19, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  store %sCLInt* %18, %sCLInt** %object_data2, align 8
  %object_data9 = load %sCLInt*, %sCLInt** %object_data, align 8
  %object_data210 = load %sCLInt*, %sCLInt** %object_data2, align 8
  %20 = getelementptr inbounds %sCLInt, %sCLInt* %object_data210, i32 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %sCLInt, %sCLInt* %object_data9, i32 0, i32 3
  store i32 %21, i32* %22, align 4
  %23 = bitcast [8192 x i8*]* %lvtable to i8*
  %24 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %23, i64 65536)
  ret i1 true
}

define i1 @int_to_string_(%CLVALUE** %stack_ptr, %sVMInfo* %info) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %stack_ptr1 = alloca %CLVALUE**
  store %CLVALUE** %stack_ptr, %CLVALUE*** %stack_ptr1, align 8
  %2 = bitcast %CLVALUE*** %stack_ptr1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %info2 = alloca %sVMInfo*
  store %sVMInfo* %info, %sVMInfo** %info2, align 8
  %3 = bitcast %sVMInfo** %info2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %stack_ptr3 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value = load %CLVALUE*, %CLVALUE** %stack_ptr3, align 8
  %4 = ptrtoint %CLVALUE* %derefference_value to i64
  %subtmp = sub nsw i64 %4, 4
  %5 = inttoptr i64 %subtmp to %CLVALUE*
  %left = alloca %CLVALUE*
  %6 = bitcast %CLVALUE** %left to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  store %CLVALUE* %5, %CLVALUE** %left, align 8
  %left4 = load %CLVALUE*, %CLVALUE** %left, align 8
  %7 = bitcast %CLVALUE* %left4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = call %sCLHeapMem* @get_object_pointer(i32 %8)
  %10 = bitcast %sCLHeapMem* %9 to %sCLInt*
  %object_data = alloca %sCLInt*
  %11 = bitcast %sCLInt** %object_data to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store %sCLInt* %10, %sCLInt** %object_data, align 8
  %buf = alloca [128 x i8]
  %12 = bitcast [128 x i8]* %buf to i8*
  store i8* %12, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %object_data5 = load %sCLInt*, %sCLInt** %object_data, align 8
  %13 = getelementptr inbounds %sCLInt, %sCLInt* %object_data5, i32 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = bitcast [128 x i8]* %buf to i8*
  %16 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %15, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_string, i32 0, i32 0), i32 %14)
  %info6 = load %sVMInfo*, %sVMInfo** %info2, align 8
  %17 = bitcast [128 x i8]* %buf to i8*
  %18 = call i32 @create_string_object(i8* %17, %sVMInfo* %info6)
  %obj = alloca i32
  %19 = bitcast i32* %obj to i8*
  store i8* %19, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  store i32 %18, i32* %obj, align 4
  %stack_ptr7 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value8 = load %CLVALUE*, %CLVALUE** %stack_ptr7, align 8
  %obj9 = load i32, i32* %obj, align 4
  %20 = bitcast %CLVALUE* %derefference_value8 to i32*
  store i32 %obj9, i32* %20, align 4
  %stack_ptr10 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value11 = load %CLVALUE*, %CLVALUE** %stack_ptr10, align 8
  %21 = ptrtoint %CLVALUE* %derefference_value11 to i64
  %adddtmp = add nsw i64 %21, 4
  %22 = inttoptr i64 %adddtmp to %CLVALUE*
  store %CLVALUE* %22, %CLVALUE** %stack_ptr10, align 8
  %23 = bitcast [8192 x i8*]* %lvtable to i8*
  %24 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %23, i64 65536)
  ret i1 true
}

define i1 @int_to_command(%CLVALUE** %stack_ptr, %sVMInfo* %info) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %stack_ptr1 = alloca %CLVALUE**
  store %CLVALUE** %stack_ptr, %CLVALUE*** %stack_ptr1, align 8
  %2 = bitcast %CLVALUE*** %stack_ptr1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %info2 = alloca %sVMInfo*
  store %sVMInfo* %info, %sVMInfo** %info2, align 8
  %3 = bitcast %sVMInfo** %info2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %stack_ptr3 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value = load %CLVALUE*, %CLVALUE** %stack_ptr3, align 8
  %4 = ptrtoint %CLVALUE* %derefference_value to i64
  %subtmp = sub nsw i64 %4, 4
  %5 = inttoptr i64 %subtmp to %CLVALUE*
  %left = alloca %CLVALUE*
  %6 = bitcast %CLVALUE** %left to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  store %CLVALUE* %5, %CLVALUE** %left, align 8
  %left4 = load %CLVALUE*, %CLVALUE** %left, align 8
  %7 = bitcast %CLVALUE* %left4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = call %sCLHeapMem* @get_object_pointer(i32 %8)
  %10 = bitcast %sCLHeapMem* %9 to %sCLInt*
  %object_data = alloca %sCLInt*
  %11 = bitcast %sCLInt** %object_data to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store %sCLInt* %10, %sCLInt** %object_data, align 8
  %buf = alloca [128 x i8]
  %12 = bitcast [128 x i8]* %buf to i8*
  store i8* %12, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %object_data5 = load %sCLInt*, %sCLInt** %object_data, align 8
  %13 = getelementptr inbounds %sCLInt, %sCLInt* %object_data5, i32 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = bitcast [128 x i8]* %buf to i8*
  %16 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %15, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_string.1, i32 0, i32 0), i32 %14)
  %17 = bitcast [128 x i8]* %buf to i8*
  %18 = call i64 @strlen(i8* %17)
  %info6 = load %sVMInfo*, %sVMInfo** %info2, align 8
  %19 = bitcast [128 x i8]* %buf to i8*
  %20 = trunc i64 %18 to i32
  %21 = call i32 @create_command_object(i8* %19, i32 %20, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @global_string.2, i32 0, i32 0), i32 0, i32 0, i1 false, %sVMInfo* %info6)
  %obj = alloca i32
  %22 = bitcast i32* %obj to i8*
  store i8* %22, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  store i32 %21, i32* %obj, align 4
  %stack_ptr7 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value8 = load %CLVALUE*, %CLVALUE** %stack_ptr7, align 8
  %obj9 = load i32, i32* %obj, align 4
  %23 = bitcast %CLVALUE* %derefference_value8 to i32*
  store i32 %obj9, i32* %23, align 4
  %stack_ptr10 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value11 = load %CLVALUE*, %CLVALUE** %stack_ptr10, align 8
  %24 = ptrtoint %CLVALUE* %derefference_value11 to i64
  %adddtmp = add nsw i64 %24, 4
  %25 = inttoptr i64 %adddtmp to %CLVALUE*
  store %CLVALUE* %25, %CLVALUE** %stack_ptr10, align 8
  %26 = bitcast [8192 x i8*]* %lvtable to i8*
  %27 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %26, i64 65536)
  ret i1 true
}

define i1 @string_to_command(%CLVALUE** %stack_ptr, %sVMInfo* %info) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %stack_ptr1 = alloca %CLVALUE**
  store %CLVALUE** %stack_ptr, %CLVALUE*** %stack_ptr1, align 8
  %2 = bitcast %CLVALUE*** %stack_ptr1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %info2 = alloca %sVMInfo*
  store %sVMInfo* %info, %sVMInfo** %info2, align 8
  %3 = bitcast %sVMInfo** %info2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %stack_ptr3 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value = load %CLVALUE*, %CLVALUE** %stack_ptr3, align 8
  %4 = ptrtoint %CLVALUE* %derefference_value to i64
  %subtmp = sub nsw i64 %4, 4
  %5 = inttoptr i64 %subtmp to %CLVALUE*
  %left = alloca %CLVALUE*
  %6 = bitcast %CLVALUE** %left to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  store %CLVALUE* %5, %CLVALUE** %left, align 8
  %left4 = load %CLVALUE*, %CLVALUE** %left, align 8
  %7 = bitcast %CLVALUE* %left4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = call i8* @get_string_mem(i32 %8)
  %buf = alloca i8*
  %10 = bitcast i8** %buf to i8*
  store i8* %10, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i8* %9, i8** %buf, align 8
  %buf5 = load i8*, i8** %buf, align 8
  %buf6 = load i8*, i8** %buf, align 8
  %11 = call i64 @strlen(i8* %buf6)
  %info7 = load %sVMInfo*, %sVMInfo** %info2, align 8
  %12 = trunc i64 %11 to i32
  %13 = call i32 @create_command_object(i8* %buf5, i32 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @global_string.3, i32 0, i32 0), i32 0, i32 0, i1 false, %sVMInfo* %info7)
  %obj = alloca i32
  %14 = bitcast i32* %obj to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %13, i32* %obj, align 4
  %stack_ptr8 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value9 = load %CLVALUE*, %CLVALUE** %stack_ptr8, align 8
  %obj10 = load i32, i32* %obj, align 4
  %15 = bitcast %CLVALUE* %derefference_value9 to i32*
  store i32 %obj10, i32* %15, align 4
  %stack_ptr11 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value12 = load %CLVALUE*, %CLVALUE** %stack_ptr11, align 8
  %16 = ptrtoint %CLVALUE* %derefference_value12 to i64
  %adddtmp = add nsw i64 %16, 4
  %17 = inttoptr i64 %adddtmp to %CLVALUE*
  store %CLVALUE* %17, %CLVALUE** %stack_ptr11, align 8
  %18 = bitcast [8192 x i8*]* %lvtable to i8*
  %19 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %18, i64 65536)
  ret i1 true
}

define i1 @bool_to_int(%CLVALUE** %stack_ptr, %sVMInfo* %info) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %stack_ptr1 = alloca %CLVALUE**
  store %CLVALUE** %stack_ptr, %CLVALUE*** %stack_ptr1, align 8
  %2 = bitcast %CLVALUE*** %stack_ptr1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %info2 = alloca %sVMInfo*
  store %sVMInfo* %info, %sVMInfo** %info2, align 8
  %3 = bitcast %sVMInfo** %info2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %stack_ptr3 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value = load %CLVALUE*, %CLVALUE** %stack_ptr3, align 8
  %4 = ptrtoint %CLVALUE* %derefference_value to i64
  %subtmp = sub nsw i64 %4, 4
  %5 = inttoptr i64 %subtmp to %CLVALUE*
  %left = alloca %CLVALUE*
  %6 = bitcast %CLVALUE** %left to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  store %CLVALUE* %5, %CLVALUE** %left, align 8
  %left4 = load %CLVALUE*, %CLVALUE** %left, align 8
  %7 = bitcast %CLVALUE* %left4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = call %sCLHeapMem* @get_object_pointer(i32 %8)
  %10 = bitcast %sCLHeapMem* %9 to %sCLInt*
  %object_data = alloca %sCLInt*
  %11 = bitcast %sCLInt** %object_data to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store %sCLInt* %10, %sCLInt** %object_data, align 8
  %object_data5 = load %sCLInt*, %sCLInt** %object_data, align 8
  %12 = getelementptr inbounds %sCLInt, %sCLInt* %object_data5, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %info6 = load %sVMInfo*, %sVMInfo** %info2, align 8
  %14 = call i32 @create_int_object(i32 %13, %sVMInfo* %info6)
  %obj = alloca i32
  %15 = bitcast i32* %obj to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %14, i32* %obj, align 4
  %stack_ptr7 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value8 = load %CLVALUE*, %CLVALUE** %stack_ptr7, align 8
  %obj9 = load i32, i32* %obj, align 4
  %16 = bitcast %CLVALUE* %derefference_value8 to i32*
  store i32 %obj9, i32* %16, align 4
  %stack_ptr10 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value11 = load %CLVALUE*, %CLVALUE** %stack_ptr10, align 8
  %17 = ptrtoint %CLVALUE* %derefference_value11 to i64
  %adddtmp = add nsw i64 %17, 4
  %18 = inttoptr i64 %adddtmp to %CLVALUE*
  store %CLVALUE* %18, %CLVALUE** %stack_ptr10, align 8
  %19 = bitcast [8192 x i8*]* %lvtable to i8*
  %20 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %19, i64 65536)
  ret i1 true
}

define i1 @bool_to_string(%CLVALUE** %stack_ptr, %sVMInfo* %info) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %stack_ptr1 = alloca %CLVALUE**
  store %CLVALUE** %stack_ptr, %CLVALUE*** %stack_ptr1, align 8
  %2 = bitcast %CLVALUE*** %stack_ptr1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %info2 = alloca %sVMInfo*
  store %sVMInfo* %info, %sVMInfo** %info2, align 8
  %3 = bitcast %sVMInfo** %info2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %stack_ptr3 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value = load %CLVALUE*, %CLVALUE** %stack_ptr3, align 8
  %4 = ptrtoint %CLVALUE* %derefference_value to i64
  %subtmp = sub nsw i64 %4, 4
  %5 = inttoptr i64 %subtmp to %CLVALUE*
  %left = alloca %CLVALUE*
  %6 = bitcast %CLVALUE** %left to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  store %CLVALUE* %5, %CLVALUE** %left, align 8
  %left4 = load %CLVALUE*, %CLVALUE** %left, align 8
  %7 = bitcast %CLVALUE* %left4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = call %sCLHeapMem* @get_object_pointer(i32 %8)
  %10 = bitcast %sCLHeapMem* %9 to %sCLInt*
  %object_data = alloca %sCLInt*
  %11 = bitcast %sCLInt** %object_data to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store %sCLInt* %10, %sCLInt** %object_data, align 8
  %buf = alloca [128 x i8]
  %12 = bitcast [128 x i8]* %buf to i8*
  store i8* %12, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %object_data5 = load %sCLInt*, %sCLInt** %object_data, align 8
  %13 = getelementptr inbounds %sCLInt, %sCLInt* %object_data5, i32 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %cond_jump_then, label %cond_else_block

cond_jump_then:                                   ; preds = %entry
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %17 = bitcast i8* %16 to [128 x i8]*
  %18 = bitcast [128 x i8]* %17 to i8*
  %19 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %18, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_string.4, i32 0, i32 0))
  br label %cond_end

cond_else_block:                                  ; preds = %entry
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %21 = bitcast i8* %20 to [128 x i8]*
  %22 = bitcast [128 x i8]* %21 to i8*
  %23 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %22, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.5, i32 0, i32 0))
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_jump_then
  %info6 = load %sVMInfo*, %sVMInfo** %info2, align 8
  %24 = bitcast [128 x i8]* %buf to i8*
  %25 = call i32 @create_string_object(i8* %24, %sVMInfo* %info6)
  %obj = alloca i32
  %26 = bitcast i32* %obj to i8*
  store i8* %26, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  store i32 %25, i32* %obj, align 4
  %stack_ptr7 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value8 = load %CLVALUE*, %CLVALUE** %stack_ptr7, align 8
  %obj9 = load i32, i32* %obj, align 4
  %27 = bitcast %CLVALUE* %derefference_value8 to i32*
  store i32 %obj9, i32* %27, align 4
  %stack_ptr10 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value11 = load %CLVALUE*, %CLVALUE** %stack_ptr10, align 8
  %28 = ptrtoint %CLVALUE* %derefference_value11 to i64
  %adddtmp = add nsw i64 %28, 4
  %29 = inttoptr i64 %adddtmp to %CLVALUE*
  store %CLVALUE* %29, %CLVALUE** %stack_ptr10, align 8
  %30 = bitcast [8192 x i8*]* %lvtable to i8*
  %31 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %30, i64 65536)
  ret i1 true
}

define i1 @bool_to_command(%CLVALUE** %stack_ptr, %sVMInfo* %info) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %stack_ptr1 = alloca %CLVALUE**
  store %CLVALUE** %stack_ptr, %CLVALUE*** %stack_ptr1, align 8
  %2 = bitcast %CLVALUE*** %stack_ptr1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %info2 = alloca %sVMInfo*
  store %sVMInfo* %info, %sVMInfo** %info2, align 8
  %3 = bitcast %sVMInfo** %info2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %stack_ptr3 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value = load %CLVALUE*, %CLVALUE** %stack_ptr3, align 8
  %4 = ptrtoint %CLVALUE* %derefference_value to i64
  %subtmp = sub nsw i64 %4, 4
  %5 = inttoptr i64 %subtmp to %CLVALUE*
  %left = alloca %CLVALUE*
  %6 = bitcast %CLVALUE** %left to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  store %CLVALUE* %5, %CLVALUE** %left, align 8
  %left4 = load %CLVALUE*, %CLVALUE** %left, align 8
  %7 = bitcast %CLVALUE* %left4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = call %sCLHeapMem* @get_object_pointer(i32 %8)
  %10 = bitcast %sCLHeapMem* %9 to %sCLInt*
  %object_data = alloca %sCLInt*
  %11 = bitcast %sCLInt** %object_data to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store %sCLInt* %10, %sCLInt** %object_data, align 8
  %buf = alloca [128 x i8]
  %12 = bitcast [128 x i8]* %buf to i8*
  store i8* %12, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %object_data5 = load %sCLInt*, %sCLInt** %object_data, align 8
  %13 = getelementptr inbounds %sCLInt, %sCLInt* %object_data5, i32 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %cond_jump_then, label %cond_else_block

cond_jump_then:                                   ; preds = %entry
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %17 = bitcast i8* %16 to [128 x i8]*
  %18 = bitcast [128 x i8]* %17 to i8*
  %19 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %18, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_string.6, i32 0, i32 0))
  br label %cond_end

cond_else_block:                                  ; preds = %entry
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %21 = bitcast i8* %20 to [128 x i8]*
  %22 = bitcast [128 x i8]* %21 to i8*
  %23 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %22, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.7, i32 0, i32 0))
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_jump_then
  %24 = bitcast [128 x i8]* %buf to i8*
  %25 = call i64 @strlen(i8* %24)
  %info6 = load %sVMInfo*, %sVMInfo** %info2, align 8
  %26 = bitcast [128 x i8]* %buf to i8*
  %27 = trunc i64 %25 to i32
  %28 = call i32 @create_command_object(i8* %26, i32 %27, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @global_string.8, i32 0, i32 0), i32 0, i32 0, i1 false, %sVMInfo* %info6)
  %obj = alloca i32
  %29 = bitcast i32* %obj to i8*
  store i8* %29, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  store i32 %28, i32* %obj, align 4
  %stack_ptr7 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value8 = load %CLVALUE*, %CLVALUE** %stack_ptr7, align 8
  %obj9 = load i32, i32* %obj, align 4
  %30 = bitcast %CLVALUE* %derefference_value8 to i32*
  store i32 %obj9, i32* %30, align 4
  %stack_ptr10 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value11 = load %CLVALUE*, %CLVALUE** %stack_ptr10, align 8
  %31 = ptrtoint %CLVALUE* %derefference_value11 to i64
  %adddtmp = add nsw i64 %31, 4
  %32 = inttoptr i64 %adddtmp to %CLVALUE*
  store %CLVALUE* %32, %CLVALUE** %stack_ptr10, align 8
  %33 = bitcast [8192 x i8*]* %lvtable to i8*
  %34 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %33, i64 65536)
  ret i1 true
}

define i1 @string_equal(%CLVALUE** %stack_ptr, %sVMInfo* %info) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %stack_ptr1 = alloca %CLVALUE**
  store %CLVALUE** %stack_ptr, %CLVALUE*** %stack_ptr1, align 8
  %2 = bitcast %CLVALUE*** %stack_ptr1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %info2 = alloca %sVMInfo*
  store %sVMInfo* %info, %sVMInfo** %info2, align 8
  %3 = bitcast %sVMInfo** %info2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %stack_ptr3 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value = load %CLVALUE*, %CLVALUE** %stack_ptr3, align 8
  %4 = ptrtoint %CLVALUE* %derefference_value to i64
  %subtmp = sub nsw i64 %4, 8
  %5 = inttoptr i64 %subtmp to %CLVALUE*
  %left = alloca %CLVALUE*
  %6 = bitcast %CLVALUE** %left to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  store %CLVALUE* %5, %CLVALUE** %left, align 8
  %stack_ptr4 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value5 = load %CLVALUE*, %CLVALUE** %stack_ptr4, align 8
  %7 = ptrtoint %CLVALUE* %derefference_value5 to i64
  %subtmp6 = sub nsw i64 %7, 4
  %8 = inttoptr i64 %subtmp6 to %CLVALUE*
  %right = alloca %CLVALUE*
  %9 = bitcast %CLVALUE** %right to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store %CLVALUE* %8, %CLVALUE** %right, align 8
  %left7 = load %CLVALUE*, %CLVALUE** %left, align 8
  %10 = bitcast %CLVALUE* %left7 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = call i8* @get_string_mem(i32 %11)
  %mem1 = alloca i8*
  %13 = bitcast i8** %mem1 to i8*
  store i8* %13, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i8* %12, i8** %mem1, align 8
  %right8 = load %CLVALUE*, %CLVALUE** %right, align 8
  %14 = bitcast %CLVALUE* %right8 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = call i8* @get_string_mem(i32 %15)
  %mem2 = alloca i8*
  %17 = bitcast i8** %mem2 to i8*
  store i8* %17, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  store i8* %16, i8** %mem2, align 8
  %mem19 = load i8*, i8** %mem1, align 8
  %mem210 = load i8*, i8** %mem2, align 8
  %18 = call i32 @strcmp(i8* %mem19, i8* %mem210)
  %eqtmpX = icmp eq i32 %18, 0
  %sext13 = zext i1 %eqtmpX to i32
  %value = alloca i32
  %19 = bitcast i32* %value to i8*
  store i8* %19, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %sext13, i32* %value, align 4
  %value11 = load i32, i32* %value, align 4
  %info12 = load %sVMInfo*, %sVMInfo** %info2, align 8
  %20 = call i32 @create_bool_object(i32 %value11, %sVMInfo* %info12)
  %obj = alloca i32
  %21 = bitcast i32* %obj to i8*
  store i8* %21, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i32 %20, i32* %obj, align 4
  %stack_ptr13 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value14 = load %CLVALUE*, %CLVALUE** %stack_ptr13, align 8
  %obj15 = load i32, i32* %obj, align 4
  %22 = bitcast %CLVALUE* %derefference_value14 to i32*
  store i32 %obj15, i32* %22, align 4
  %stack_ptr16 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value17 = load %CLVALUE*, %CLVALUE** %stack_ptr16, align 8
  %23 = ptrtoint %CLVALUE* %derefference_value17 to i64
  %adddtmp = add nsw i64 %23, 4
  %24 = inttoptr i64 %adddtmp to %CLVALUE*
  store %CLVALUE* %24, %CLVALUE** %stack_ptr16, align 8
  %25 = bitcast [8192 x i8*]* %lvtable to i8*
  %26 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %25, i64 65536)
  ret i1 true
}

define i1 @string_not_equal(%CLVALUE** %stack_ptr, %sVMInfo* %info) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %stack_ptr1 = alloca %CLVALUE**
  store %CLVALUE** %stack_ptr, %CLVALUE*** %stack_ptr1, align 8
  %2 = bitcast %CLVALUE*** %stack_ptr1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %info2 = alloca %sVMInfo*
  store %sVMInfo* %info, %sVMInfo** %info2, align 8
  %3 = bitcast %sVMInfo** %info2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %stack_ptr3 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value = load %CLVALUE*, %CLVALUE** %stack_ptr3, align 8
  %4 = ptrtoint %CLVALUE* %derefference_value to i64
  %subtmp = sub nsw i64 %4, 8
  %5 = inttoptr i64 %subtmp to %CLVALUE*
  %left = alloca %CLVALUE*
  %6 = bitcast %CLVALUE** %left to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  store %CLVALUE* %5, %CLVALUE** %left, align 8
  %stack_ptr4 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value5 = load %CLVALUE*, %CLVALUE** %stack_ptr4, align 8
  %7 = ptrtoint %CLVALUE* %derefference_value5 to i64
  %subtmp6 = sub nsw i64 %7, 4
  %8 = inttoptr i64 %subtmp6 to %CLVALUE*
  %right = alloca %CLVALUE*
  %9 = bitcast %CLVALUE** %right to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store %CLVALUE* %8, %CLVALUE** %right, align 8
  %left7 = load %CLVALUE*, %CLVALUE** %left, align 8
  %10 = bitcast %CLVALUE* %left7 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = call i8* @get_string_mem(i32 %11)
  %mem1 = alloca i8*
  %13 = bitcast i8** %mem1 to i8*
  store i8* %13, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i8* %12, i8** %mem1, align 8
  %right8 = load %CLVALUE*, %CLVALUE** %right, align 8
  %14 = bitcast %CLVALUE* %right8 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = call i8* @get_string_mem(i32 %15)
  %mem2 = alloca i8*
  %17 = bitcast i8** %mem2 to i8*
  store i8* %17, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  store i8* %16, i8** %mem2, align 8
  %mem19 = load i8*, i8** %mem1, align 8
  %mem210 = load i8*, i8** %mem2, align 8
  %18 = call i32 @strcmp(i8* %mem19, i8* %mem210)
  %noteqtmp = icmp ne i32 %18, 0
  %sext13 = zext i1 %noteqtmp to i32
  %value = alloca i32
  %19 = bitcast i32* %value to i8*
  store i8* %19, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %sext13, i32* %value, align 4
  %value11 = load i32, i32* %value, align 4
  %info12 = load %sVMInfo*, %sVMInfo** %info2, align 8
  %20 = call i32 @create_bool_object(i32 %value11, %sVMInfo* %info12)
  %obj = alloca i32
  %21 = bitcast i32* %obj to i8*
  store i8* %21, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i32 %20, i32* %obj, align 4
  %stack_ptr13 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value14 = load %CLVALUE*, %CLVALUE** %stack_ptr13, align 8
  %obj15 = load i32, i32* %obj, align 4
  %22 = bitcast %CLVALUE* %derefference_value14 to i32*
  store i32 %obj15, i32* %22, align 4
  %stack_ptr16 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value17 = load %CLVALUE*, %CLVALUE** %stack_ptr16, align 8
  %23 = ptrtoint %CLVALUE* %derefference_value17 to i64
  %adddtmp = add nsw i64 %23, 4
  %24 = inttoptr i64 %adddtmp to %CLVALUE*
  store %CLVALUE* %24, %CLVALUE** %stack_ptr16, align 8
  %25 = bitcast [8192 x i8*]* %lvtable to i8*
  %26 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %25, i64 65536)
  ret i1 true
}

define i1 @object_type_name(%CLVALUE** %stack_ptr, %sVMInfo* %info) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %stack_ptr1 = alloca %CLVALUE**
  store %CLVALUE** %stack_ptr, %CLVALUE*** %stack_ptr1, align 8
  %2 = bitcast %CLVALUE*** %stack_ptr1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %info2 = alloca %sVMInfo*
  store %sVMInfo* %info, %sVMInfo** %info2, align 8
  %3 = bitcast %sVMInfo** %info2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %stack_ptr3 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value = load %CLVALUE*, %CLVALUE** %stack_ptr3, align 8
  %4 = ptrtoint %CLVALUE* %derefference_value to i64
  %subtmp = sub nsw i64 %4, 4
  %5 = inttoptr i64 %subtmp to %CLVALUE*
  %left = alloca %CLVALUE*
  %6 = bitcast %CLVALUE** %left to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  store %CLVALUE* %5, %CLVALUE** %left, align 8
  %left4 = load %CLVALUE*, %CLVALUE** %left, align 8
  %7 = bitcast %CLVALUE* %left4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = call %sCLHeapMem* @get_object_pointer(i32 %8)
  %10 = bitcast %sCLHeapMem* %9 to %sCLObject*
  %object_data = alloca %sCLObject*
  %11 = bitcast %sCLObject** %object_data to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store %sCLObject* %10, %sCLObject** %object_data, align 8
  %object_data5 = load %sCLObject*, %sCLObject** %object_data, align 8
  %12 = getelementptr inbounds %sCLObject, %sCLObject* %object_data5, i32 0, i32 0
  %13 = load %sCLType*, %sCLType** %12, align 8
  %14 = call i8* @create_type_name(%sCLType* %13)
  %type_name = alloca i8*
  %15 = bitcast i8** %type_name to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i8* %14, i8** %type_name, align 8
  %type_name6 = load i8*, i8** %type_name, align 8
  %info7 = load %sVMInfo*, %sVMInfo** %info2, align 8
  %16 = call i32 @create_string_object(i8* %type_name6, %sVMInfo* %info7)
  %obj = alloca i32
  %17 = bitcast i32* %obj to i8*
  store i8* %17, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  store i32 %16, i32* %obj, align 4
  %stack_ptr8 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value9 = load %CLVALUE*, %CLVALUE** %stack_ptr8, align 8
  %obj10 = load i32, i32* %obj, align 4
  %18 = bitcast %CLVALUE* %derefference_value9 to i32*
  store i32 %obj10, i32* %18, align 4
  %stack_ptr11 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value12 = load %CLVALUE*, %CLVALUE** %stack_ptr11, align 8
  %19 = ptrtoint %CLVALUE* %derefference_value12 to i64
  %adddtmp = add nsw i64 %19, 4
  %20 = inttoptr i64 %adddtmp to %CLVALUE*
  store %CLVALUE* %20, %CLVALUE** %stack_ptr11, align 8
  %21 = bitcast [8192 x i8*]* %lvtable to i8*
  %22 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %21, i64 65536)
  %23 = load i8*, i8** %type_name, align 8
  %24 = ptrtoint i8* %23 to i64
  %25 = icmp ne i64 %24, 0
  br i1 %25, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  call void @xfree(i8* %23)
  ret i1 true
}

define i1 @object_num_fields(%CLVALUE** %stack_ptr, %sVMInfo* %info) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %stack_ptr1 = alloca %CLVALUE**
  store %CLVALUE** %stack_ptr, %CLVALUE*** %stack_ptr1, align 8
  %2 = bitcast %CLVALUE*** %stack_ptr1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %info2 = alloca %sVMInfo*
  store %sVMInfo* %info, %sVMInfo** %info2, align 8
  %3 = bitcast %sVMInfo** %info2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %stack_ptr3 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value = load %CLVALUE*, %CLVALUE** %stack_ptr3, align 8
  %4 = ptrtoint %CLVALUE* %derefference_value to i64
  %subtmp = sub nsw i64 %4, 4
  %5 = inttoptr i64 %subtmp to %CLVALUE*
  %left = alloca %CLVALUE*
  %6 = bitcast %CLVALUE** %left to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  store %CLVALUE* %5, %CLVALUE** %left, align 8
  %left4 = load %CLVALUE*, %CLVALUE** %left, align 8
  %7 = bitcast %CLVALUE* %left4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = call %sCLHeapMem* @get_object_pointer(i32 %8)
  %10 = bitcast %sCLHeapMem* %9 to %sCLObject*
  %object_data = alloca %sCLObject*
  %11 = bitcast %sCLObject** %object_data to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store %sCLObject* %10, %sCLObject** %object_data, align 8
  %object_data5 = load %sCLObject*, %sCLObject** %object_data, align 8
  %12 = getelementptr inbounds %sCLObject, %sCLObject* %object_data5, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %num_fields = alloca i32
  %14 = bitcast i32* %num_fields to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %13, i32* %num_fields, align 4
  %num_fields6 = load i32, i32* %num_fields, align 4
  %info7 = load %sVMInfo*, %sVMInfo** %info2, align 8
  %15 = call i32 @create_int_object(i32 %num_fields6, %sVMInfo* %info7)
  %obj = alloca i32
  %16 = bitcast i32* %obj to i8*
  store i8* %16, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  store i32 %15, i32* %obj, align 4
  %stack_ptr8 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value9 = load %CLVALUE*, %CLVALUE** %stack_ptr8, align 8
  %obj10 = load i32, i32* %obj, align 4
  %17 = bitcast %CLVALUE* %derefference_value9 to i32*
  store i32 %obj10, i32* %17, align 4
  %stack_ptr11 = load %CLVALUE**, %CLVALUE*** %stack_ptr1, align 8
  %derefference_value12 = load %CLVALUE*, %CLVALUE** %stack_ptr11, align 8
  %18 = ptrtoint %CLVALUE* %derefference_value12 to i64
  %adddtmp = add nsw i64 %18, 4
  %19 = inttoptr i64 %adddtmp to %CLVALUE*
  store %CLVALUE* %19, %CLVALUE** %stack_ptr11, align 8
  %20 = bitcast [8192 x i8*]* %lvtable to i8*
  %21 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %20, i64 65536)
  ret i1 true
}

define void @create_native_method_name(i8* %result, %sCLClass* %klass, %sCLMethod* %method) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %result1 = alloca i8*
  store i8* %result, i8** %result1, align 8
  %2 = bitcast i8** %result1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %klass2 = alloca %sCLClass*
  store %sCLClass* %klass, %sCLClass** %klass2, align 8
  %3 = bitcast %sCLClass** %klass2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %method3 = alloca %sCLMethod*
  store %sCLMethod* %method, %sCLMethod** %method3, align 8
  %4 = bitcast %sCLMethod** %method3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %result4 = load i8*, i8** %result1, align 8
  %klass5 = load %sCLClass*, %sCLClass** %klass2, align 8
  %5 = getelementptr inbounds %sCLClass, %sCLClass* %klass5, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %method6 = load %sCLMethod*, %sCLMethod** %method3, align 8
  %7 = getelementptr inbounds %sCLMethod, %sCLMethod* %method6, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %result4, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.9, i32 0, i32 0), i8* %6, i8* %8)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void
}

define i1 (%CLVALUE**, %sVMInfo*)* @"map_at_charp_lambdap0_src/class"(%map__charp_lambdap* %self, i8* %key, i1 (%CLVALUE**, %sVMInfo*)* %default_value) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %default_value3 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %default_value, i1 (%CLVALUE**, %sVMInfo*)** %default_value3, align 8
  %4 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %default_value3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %key4 = load i8*, i8** %key2, align 8
  %5 = call i32 @string_get_hash_key(i8* %key4)
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %6 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  %remtmp = srem i32 %5, %7
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash6 = load i32, i32* %hash, align 4
  %it = alloca i32
  %9 = bitcast i32* %it to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 %hash6, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %11 = bitcast i8* %10 to %map__charp_lambdap**
  %self7 = load %map__charp_lambdap*, %map__charp_lambdap** %11, align 8
  %12 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self7, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %14 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %15 = bitcast i8* %14 to i32*
  %it8 = load i32, i32* %15, align 4
  %element_address = getelementptr i1, i1* %13, i32 %it8
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %default_value29 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %default_value3, align 8
  %16 = bitcast [8192 x i8*]* %lvtable to i8*
  %17 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %16, i64 65536)
  ret i1 (%CLVALUE**, %sVMInfo*)* %default_value29

cond_jump_then:                                   ; preds = %cond_then_block
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %19 = bitcast i8* %18 to %map__charp_lambdap**
  %self9 = load %map__charp_lambdap*, %map__charp_lambdap** %19, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self9, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %23 = bitcast i8* %22 to i32*
  %it10 = load i32, i32* %23, align 4
  %element_address11 = getelementptr i8*, i8** %21, i32 %it10
  %element12 = load i8*, i8** %element_address11, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %25 = bitcast i8* %24 to i8**
  %key13 = load i8*, i8** %25, align 8
  %26 = call i1 @string_equals(i8* %element12, i8* %key13)
  br i1 %26, label %cond_jump_then14, label %cond_end15

cond_else_block:                                  ; preds = %cond_then_block
  %27 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %28 = bitcast i8* %27 to i1 (%CLVALUE**, %sVMInfo*)**
  %default_value28 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %28, align 8
  %29 = bitcast [8192 x i8*]* %lvtable to i8*
  %30 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %29, i64 65536)
  ret i1 (%CLVALUE**, %sVMInfo*)* %default_value28

cond_end:                                         ; preds = %cond_end24
  br label %loop_top_block

cond_jump_then14:                                 ; preds = %cond_jump_then
  %31 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %32 = bitcast i8* %31 to %map__charp_lambdap**
  %self16 = load %map__charp_lambdap*, %map__charp_lambdap** %32, align 8
  %33 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self16, i32 0, i32 2
  %34 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %33, align 8
  %35 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %36 = bitcast i8* %35 to i32*
  %it17 = load i32, i32* %36, align 4
  %element_address18 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %34, i32 %it17
  %element19 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address18, align 8
  %37 = bitcast [8192 x i8*]* %lvtable to i8*
  %38 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %37, i64 65536)
  ret i1 (%CLVALUE**, %sVMInfo*)* %element19

cond_end15:                                       ; preds = %cond_jump_then
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %40 = bitcast i8* %39 to i32*
  %it20 = load i32, i32* %40, align 4
  %addtmp = add nsw i32 %it20, 1
  %41 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %42 = bitcast i8* %41 to i32*
  store i32 %addtmp, i32* %42, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %44 = bitcast i8* %43 to i32*
  %it21 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %46 = bitcast i8* %45 to %map__charp_lambdap**
  %self22 = load %map__charp_lambdap*, %map__charp_lambdap** %46, align 8
  %47 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self22, i32 0, i32 3
  %48 = load i32, i32* %47, align 4
  %getmp = icmp sge i32 %it21, %48
  br i1 %getmp, label %cond_jump_then23, label %"cond_jump_elif0\0A"

cond_jump_then23:                                 ; preds = %cond_end15
  %49 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 4
  br label %cond_end24

"cond_jump_elif0\0A":                             ; preds = %cond_end15
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %52 = bitcast i8* %51 to i32*
  %it25 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %54 = bitcast i8* %53 to i32*
  %hash26 = load i32, i32* %54, align 4
  %eqtmpX = icmp eq i32 %it25, %hash26
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end24

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %56 = bitcast i8* %55 to i1 (%CLVALUE**, %sVMInfo*)**
  %default_value27 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %56, align 8
  %57 = bitcast [8192 x i8*]* %lvtable to i8*
  %58 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %57, i64 65536)
  ret i1 (%CLVALUE**, %sVMInfo*)* %default_value27

cond_end24:                                       ; preds = %"cond_jump_elif0\0A", %cond_jump_then23
  br label %cond_end
}

define %map__charp_sCLClassp* @"map_initialize_charp_sCLClassp1_src/class"(%map__charp_sCLClassp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLClassp*
  store %map__charp_sCLClassp* %self, %map__charp_sCLClassp** %self1, align 8
  %2 = bitcast %map__charp_sCLClassp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %self2 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %3 = call i8* @debug_xcalloc(i64 128, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.14, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.15, i32 0, i32 0), i32 2007, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_string.16, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_string.17, i32 0, i32 0))
  %4 = bitcast i8* %3 to i8**
  %5 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self2, i32 0, i32 0
  store i8** %4, i8*** %5, align 8
  %self3 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %6 = call i8* @debug_xcalloc(i64 128, i64 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.18, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.19, i32 0, i32 0), i32 2008, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_string.20, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_string.21, i32 0, i32 0))
  %7 = bitcast i8* %6 to %sCLClass**
  %8 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self3, i32 0, i32 2
  store %sCLClass** %7, %sCLClass*** %8, align 8
  %self4 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %9 = call i8* @debug_xcalloc(i64 128, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.22, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.23, i32 0, i32 0), i32 2009, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_string.24, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_string.25, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1*
  %11 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self4, i32 0, i32 1
  store i1* %10, i1** %11, align 8
  %i = alloca i32
  %12 = bitcast i32* %i to i8*
  store i8* %12, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_then_block, %entry
  %i5 = load i32, i32* %i, align 4
  %letmp = icmp slt i32 %i5, 128
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %13 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %14 = bitcast i8* %13 to %map__charp_sCLClassp**
  %self6 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %14, align 8
  %15 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self6, i32 0, i32 1
  %16 = load i1*, i1** %15, align 8
  %i7 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %16, i32 %i7
  store i1 false, i1* %element_address, align 1
  %i8 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i8, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_end_block:                                   ; preds = %loop_top_block
  %self9 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %17 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self9, i32 0, i32 3
  store i32 128, i32* %17, align 4
  %self10 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %18 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self10, i32 0, i32 4
  store i32 0, i32* %18, align 4
  %self11 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %19 = bitcast [8192 x i8*]* %lvtable to i8*
  %20 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %19, i64 65536)
  ret %map__charp_sCLClassp* %self11
}

define %map__charp_lambdap* @"map_initialize_charp_lambdap2_src/class"(%map__charp_lambdap* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %self2 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %3 = call i8* @debug_xcalloc(i64 128, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.71, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.72, i32 0, i32 0), i32 2007, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_string.73, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_string.74, i32 0, i32 0))
  %4 = bitcast i8* %3 to i8**
  %5 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self2, i32 0, i32 0
  store i8** %4, i8*** %5, align 8
  %self3 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %6 = call i8* @debug_xcalloc(i64 128, i64 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.75, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.76, i32 0, i32 0), i32 2008, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_string.77, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_string.78, i32 0, i32 0))
  %7 = bitcast i8* %6 to i1 (%CLVALUE**, %sVMInfo*)**
  %8 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self3, i32 0, i32 2
  store i1 (%CLVALUE**, %sVMInfo*)** %7, i1 (%CLVALUE**, %sVMInfo*)*** %8, align 8
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %9 = call i8* @debug_xcalloc(i64 128, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.79, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.80, i32 0, i32 0), i32 2009, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_string.81, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_string.82, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1*
  %11 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 1
  store i1* %10, i1** %11, align 8
  %i = alloca i32
  %12 = bitcast i32* %i to i8*
  store i8* %12, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_then_block, %entry
  %i5 = load i32, i32* %i, align 4
  %letmp = icmp slt i32 %i5, 128
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %13 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %14 = bitcast i8* %13 to %map__charp_lambdap**
  %self6 = load %map__charp_lambdap*, %map__charp_lambdap** %14, align 8
  %15 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self6, i32 0, i32 1
  %16 = load i1*, i1** %15, align 8
  %i7 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %16, i32 %i7
  store i1 false, i1* %element_address, align 1
  %i8 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i8, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_end_block:                                   ; preds = %loop_top_block
  %self9 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %17 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self9, i32 0, i32 3
  store i32 128, i32* %17, align 4
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %18 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 4
  store i32 0, i32* %18, align 4
  %self11 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %19 = bitcast [8192 x i8*]* %lvtable to i8*
  %20 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %19, i64 65536)
  ret %map__charp_lambdap* %self11
}

define void @"map_insert_charp_lambdap3_src/class"(%map__charp_lambdap* %self, i8* %key, i1 (%CLVALUE**, %sVMInfo*)* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %item3 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %item, i1 (%CLVALUE**, %sVMInfo*)** %item3, align 8
  %4 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %5 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self6 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  call void @"map_rehash_charp_lambdap4_src/class"(%map__charp_lambdap* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %12 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %17 = bitcast i8* %16 to %map__charp_lambdap**
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %17, align 8
  %18 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %34 = bitcast i8* %33 to %map__charp_lambdap**
  %self33 = load %map__charp_lambdap*, %map__charp_lambdap** %34, align 8
  %35 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %40 = bitcast i8* %39 to %map__charp_lambdap**
  %self36 = load %map__charp_lambdap*, %map__charp_lambdap** %40, align 8
  %41 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %48 = bitcast i8* %47 to %map__charp_lambdap**
  %self40 = load %map__charp_lambdap*, %map__charp_lambdap** %48, align 8
  %49 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self40, i32 0, i32 2
  %50 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %54 = bitcast i8* %53 to i1 (%CLVALUE**, %sVMInfo*)**
  %item42 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %54, align 8
  %element_address43 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %50, i32 %it41
  store i1 (%CLVALUE**, %sVMInfo*)* %item42, i1 (%CLVALUE**, %sVMInfo*)** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %56 = bitcast i8* %55 to %map__charp_lambdap**
  %self44 = load %map__charp_lambdap*, %map__charp_lambdap** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %58 = bitcast i8* %57 to %map__charp_lambdap**
  %self45 = load %map__charp_lambdap*, %map__charp_lambdap** %58, align 8
  %59 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %63 = bitcast i8* %62 to %map__charp_lambdap**
  %self21 = load %map__charp_lambdap*, %map__charp_lambdap** %63, align 8
  %64 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self21, i32 0, i32 2
  %65 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %69 = bitcast i8* %68 to i1 (%CLVALUE**, %sVMInfo*)**
  %item23 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %69, align 8
  %element_address24 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %65, i32 %it22
  store i1 (%CLVALUE**, %sVMInfo*)* %item23, i1 (%CLVALUE**, %sVMInfo*)** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %77 = bitcast i8* %76 to %map__charp_lambdap**
  %self27 = load %map__charp_lambdap*, %map__charp_lambdap** %77, align 8
  %78 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.98, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_lambdap4_src/class"(%map__charp_lambdap* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %self2 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %3 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.84, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.85, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.86, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_string.87, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.88, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.89, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.90, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_string.91, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1 (%CLVALUE**, %sVMInfo*)**
  %items = alloca i1 (%CLVALUE**, %sVMInfo*)**
  %11 = bitcast i1 (%CLVALUE**, %sVMInfo*)*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i1 (%CLVALUE**, %sVMInfo*)** %10, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.92, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.93, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.94, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_string.95, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  call void @"map_each_charp_lambdap5_src/class"(%map__charp_lambdap* %self8, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* @class_lambda0)
  %self9 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %16 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self9, i32 0, i32 2
  %17 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %18 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %19 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %items15 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %31 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 2
  store i1 (%CLVALUE**, %sVMInfo*)** %items15, i1 (%CLVALUE**, %sVMInfo*)*** %31, align 8
  %self16 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda0(i8* %it, i1 (%CLVALUE**, %sVMInfo*)* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %it22 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %it2, i1 (%CLVALUE**, %sVMInfo*)** %it22, align 8
  %3 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %35 = bitcast i8* %34 to i1 (%CLVALUE**, %sVMInfo*)***
  %items = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %39 = bitcast i8* %38 to i1 (%CLVALUE**, %sVMInfo*)**
  %it221 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %39, align 8
  %element_address22 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %items, i32 %n20
  store i1 (%CLVALUE**, %sVMInfo*)* %it221, i1 (%CLVALUE**, %sVMInfo*)** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.97, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_lambdap5_src/class"(%map__charp_lambdap* %self, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %block_2 = alloca void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*
  store void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %6 = bitcast i8* %5 to %map__charp_lambdap**
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %6, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  %11 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)**
  %block_7 = load void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %19 = bitcast i8* %18 to %map__charp_lambdap**
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %19, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 2
  %27 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %27, i32 %i_13
  %element15 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, i1 (%CLVALUE**, %sVMInfo*)* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define void @"map_insert_charp_lambdap6_src/class"(%map__charp_lambdap* %self, i8* %key, i1 (%CLVALUE**, %sVMInfo*)* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %item3 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %item, i1 (%CLVALUE**, %sVMInfo*)** %item3, align 8
  %4 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %5 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self6 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  call void @"map_rehash_charp_lambdap7_src/class"(%map__charp_lambdap* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %12 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %17 = bitcast i8* %16 to %map__charp_lambdap**
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %17, align 8
  %18 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %34 = bitcast i8* %33 to %map__charp_lambdap**
  %self33 = load %map__charp_lambdap*, %map__charp_lambdap** %34, align 8
  %35 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %40 = bitcast i8* %39 to %map__charp_lambdap**
  %self36 = load %map__charp_lambdap*, %map__charp_lambdap** %40, align 8
  %41 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %48 = bitcast i8* %47 to %map__charp_lambdap**
  %self40 = load %map__charp_lambdap*, %map__charp_lambdap** %48, align 8
  %49 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self40, i32 0, i32 2
  %50 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %54 = bitcast i8* %53 to i1 (%CLVALUE**, %sVMInfo*)**
  %item42 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %54, align 8
  %element_address43 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %50, i32 %it41
  store i1 (%CLVALUE**, %sVMInfo*)* %item42, i1 (%CLVALUE**, %sVMInfo*)** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %56 = bitcast i8* %55 to %map__charp_lambdap**
  %self44 = load %map__charp_lambdap*, %map__charp_lambdap** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %58 = bitcast i8* %57 to %map__charp_lambdap**
  %self45 = load %map__charp_lambdap*, %map__charp_lambdap** %58, align 8
  %59 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %63 = bitcast i8* %62 to %map__charp_lambdap**
  %self21 = load %map__charp_lambdap*, %map__charp_lambdap** %63, align 8
  %64 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self21, i32 0, i32 2
  %65 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %69 = bitcast i8* %68 to i1 (%CLVALUE**, %sVMInfo*)**
  %item23 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %69, align 8
  %element_address24 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %65, i32 %it22
  store i1 (%CLVALUE**, %sVMInfo*)* %item23, i1 (%CLVALUE**, %sVMInfo*)** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %77 = bitcast i8* %76 to %map__charp_lambdap**
  %self27 = load %map__charp_lambdap*, %map__charp_lambdap** %77, align 8
  %78 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.114, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_lambdap7_src/class"(%map__charp_lambdap* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %self2 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %3 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.100, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.101, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.102, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_string.103, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.104, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.105, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.106, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_string.107, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1 (%CLVALUE**, %sVMInfo*)**
  %items = alloca i1 (%CLVALUE**, %sVMInfo*)**
  %11 = bitcast i1 (%CLVALUE**, %sVMInfo*)*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i1 (%CLVALUE**, %sVMInfo*)** %10, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.108, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.109, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.110, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_string.111, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  call void @"map_each_charp_lambdap8_src/class"(%map__charp_lambdap* %self8, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* @class_lambda1)
  %self9 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %16 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self9, i32 0, i32 2
  %17 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %18 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %19 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %items15 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %31 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 2
  store i1 (%CLVALUE**, %sVMInfo*)** %items15, i1 (%CLVALUE**, %sVMInfo*)*** %31, align 8
  %self16 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda1(i8* %it, i1 (%CLVALUE**, %sVMInfo*)* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %it22 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %it2, i1 (%CLVALUE**, %sVMInfo*)** %it22, align 8
  %3 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %35 = bitcast i8* %34 to i1 (%CLVALUE**, %sVMInfo*)***
  %items = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %39 = bitcast i8* %38 to i1 (%CLVALUE**, %sVMInfo*)**
  %it221 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %39, align 8
  %element_address22 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %items, i32 %n20
  store i1 (%CLVALUE**, %sVMInfo*)* %it221, i1 (%CLVALUE**, %sVMInfo*)** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.113, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_lambdap8_src/class"(%map__charp_lambdap* %self, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %block_2 = alloca void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*
  store void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %6 = bitcast i8* %5 to %map__charp_lambdap**
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %6, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  %11 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)**
  %block_7 = load void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %19 = bitcast i8* %18 to %map__charp_lambdap**
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %19, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 2
  %27 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %27, i32 %i_13
  %element15 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, i1 (%CLVALUE**, %sVMInfo*)* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define void @"map_insert_charp_lambdap9_src/class"(%map__charp_lambdap* %self, i8* %key, i1 (%CLVALUE**, %sVMInfo*)* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %item3 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %item, i1 (%CLVALUE**, %sVMInfo*)** %item3, align 8
  %4 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %5 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self6 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  call void @"map_rehash_charp_lambdap10_src/class"(%map__charp_lambdap* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %12 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %17 = bitcast i8* %16 to %map__charp_lambdap**
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %17, align 8
  %18 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %34 = bitcast i8* %33 to %map__charp_lambdap**
  %self33 = load %map__charp_lambdap*, %map__charp_lambdap** %34, align 8
  %35 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %40 = bitcast i8* %39 to %map__charp_lambdap**
  %self36 = load %map__charp_lambdap*, %map__charp_lambdap** %40, align 8
  %41 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %48 = bitcast i8* %47 to %map__charp_lambdap**
  %self40 = load %map__charp_lambdap*, %map__charp_lambdap** %48, align 8
  %49 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self40, i32 0, i32 2
  %50 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %54 = bitcast i8* %53 to i1 (%CLVALUE**, %sVMInfo*)**
  %item42 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %54, align 8
  %element_address43 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %50, i32 %it41
  store i1 (%CLVALUE**, %sVMInfo*)* %item42, i1 (%CLVALUE**, %sVMInfo*)** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %56 = bitcast i8* %55 to %map__charp_lambdap**
  %self44 = load %map__charp_lambdap*, %map__charp_lambdap** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %58 = bitcast i8* %57 to %map__charp_lambdap**
  %self45 = load %map__charp_lambdap*, %map__charp_lambdap** %58, align 8
  %59 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %63 = bitcast i8* %62 to %map__charp_lambdap**
  %self21 = load %map__charp_lambdap*, %map__charp_lambdap** %63, align 8
  %64 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self21, i32 0, i32 2
  %65 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %69 = bitcast i8* %68 to i1 (%CLVALUE**, %sVMInfo*)**
  %item23 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %69, align 8
  %element_address24 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %65, i32 %it22
  store i1 (%CLVALUE**, %sVMInfo*)* %item23, i1 (%CLVALUE**, %sVMInfo*)** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %77 = bitcast i8* %76 to %map__charp_lambdap**
  %self27 = load %map__charp_lambdap*, %map__charp_lambdap** %77, align 8
  %78 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.130, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_lambdap10_src/class"(%map__charp_lambdap* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %self2 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %3 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.116, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.117, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.118, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.119, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.120, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.121, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.122, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.123, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1 (%CLVALUE**, %sVMInfo*)**
  %items = alloca i1 (%CLVALUE**, %sVMInfo*)**
  %11 = bitcast i1 (%CLVALUE**, %sVMInfo*)*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i1 (%CLVALUE**, %sVMInfo*)** %10, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.124, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.125, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.126, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.127, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  call void @"map_each_charp_lambdap11_src/class"(%map__charp_lambdap* %self8, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* @class_lambda2)
  %self9 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %16 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self9, i32 0, i32 2
  %17 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %18 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %19 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %items15 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %31 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 2
  store i1 (%CLVALUE**, %sVMInfo*)** %items15, i1 (%CLVALUE**, %sVMInfo*)*** %31, align 8
  %self16 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda2(i8* %it, i1 (%CLVALUE**, %sVMInfo*)* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %it22 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %it2, i1 (%CLVALUE**, %sVMInfo*)** %it22, align 8
  %3 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %35 = bitcast i8* %34 to i1 (%CLVALUE**, %sVMInfo*)***
  %items = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %39 = bitcast i8* %38 to i1 (%CLVALUE**, %sVMInfo*)**
  %it221 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %39, align 8
  %element_address22 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %items, i32 %n20
  store i1 (%CLVALUE**, %sVMInfo*)* %it221, i1 (%CLVALUE**, %sVMInfo*)** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.129, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_lambdap11_src/class"(%map__charp_lambdap* %self, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %block_2 = alloca void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*
  store void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %6 = bitcast i8* %5 to %map__charp_lambdap**
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %6, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  %11 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)**
  %block_7 = load void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %19 = bitcast i8* %18 to %map__charp_lambdap**
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %19, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 2
  %27 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %27, i32 %i_13
  %element15 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, i1 (%CLVALUE**, %sVMInfo*)* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define void @"map_insert_charp_lambdap12_src/class"(%map__charp_lambdap* %self, i8* %key, i1 (%CLVALUE**, %sVMInfo*)* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %item3 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %item, i1 (%CLVALUE**, %sVMInfo*)** %item3, align 8
  %4 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %5 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self6 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  call void @"map_rehash_charp_lambdap13_src/class"(%map__charp_lambdap* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %12 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %17 = bitcast i8* %16 to %map__charp_lambdap**
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %17, align 8
  %18 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %34 = bitcast i8* %33 to %map__charp_lambdap**
  %self33 = load %map__charp_lambdap*, %map__charp_lambdap** %34, align 8
  %35 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %40 = bitcast i8* %39 to %map__charp_lambdap**
  %self36 = load %map__charp_lambdap*, %map__charp_lambdap** %40, align 8
  %41 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %48 = bitcast i8* %47 to %map__charp_lambdap**
  %self40 = load %map__charp_lambdap*, %map__charp_lambdap** %48, align 8
  %49 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self40, i32 0, i32 2
  %50 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %54 = bitcast i8* %53 to i1 (%CLVALUE**, %sVMInfo*)**
  %item42 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %54, align 8
  %element_address43 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %50, i32 %it41
  store i1 (%CLVALUE**, %sVMInfo*)* %item42, i1 (%CLVALUE**, %sVMInfo*)** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %56 = bitcast i8* %55 to %map__charp_lambdap**
  %self44 = load %map__charp_lambdap*, %map__charp_lambdap** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %58 = bitcast i8* %57 to %map__charp_lambdap**
  %self45 = load %map__charp_lambdap*, %map__charp_lambdap** %58, align 8
  %59 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %63 = bitcast i8* %62 to %map__charp_lambdap**
  %self21 = load %map__charp_lambdap*, %map__charp_lambdap** %63, align 8
  %64 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self21, i32 0, i32 2
  %65 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %69 = bitcast i8* %68 to i1 (%CLVALUE**, %sVMInfo*)**
  %item23 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %69, align 8
  %element_address24 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %65, i32 %it22
  store i1 (%CLVALUE**, %sVMInfo*)* %item23, i1 (%CLVALUE**, %sVMInfo*)** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %77 = bitcast i8* %76 to %map__charp_lambdap**
  %self27 = load %map__charp_lambdap*, %map__charp_lambdap** %77, align 8
  %78 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.146, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_lambdap13_src/class"(%map__charp_lambdap* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %self2 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %3 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.132, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.133, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.134, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.135, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.136, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.137, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.138, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.139, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1 (%CLVALUE**, %sVMInfo*)**
  %items = alloca i1 (%CLVALUE**, %sVMInfo*)**
  %11 = bitcast i1 (%CLVALUE**, %sVMInfo*)*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i1 (%CLVALUE**, %sVMInfo*)** %10, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.140, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.141, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.142, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.143, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  call void @"map_each_charp_lambdap14_src/class"(%map__charp_lambdap* %self8, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* @class_lambda3)
  %self9 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %16 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self9, i32 0, i32 2
  %17 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %18 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %19 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %items15 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %31 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 2
  store i1 (%CLVALUE**, %sVMInfo*)** %items15, i1 (%CLVALUE**, %sVMInfo*)*** %31, align 8
  %self16 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda3(i8* %it, i1 (%CLVALUE**, %sVMInfo*)* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %it22 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %it2, i1 (%CLVALUE**, %sVMInfo*)** %it22, align 8
  %3 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %35 = bitcast i8* %34 to i1 (%CLVALUE**, %sVMInfo*)***
  %items = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %39 = bitcast i8* %38 to i1 (%CLVALUE**, %sVMInfo*)**
  %it221 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %39, align 8
  %element_address22 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %items, i32 %n20
  store i1 (%CLVALUE**, %sVMInfo*)* %it221, i1 (%CLVALUE**, %sVMInfo*)** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.145, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_lambdap14_src/class"(%map__charp_lambdap* %self, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %block_2 = alloca void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*
  store void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %6 = bitcast i8* %5 to %map__charp_lambdap**
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %6, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  %11 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)**
  %block_7 = load void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %19 = bitcast i8* %18 to %map__charp_lambdap**
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %19, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 2
  %27 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %27, i32 %i_13
  %element15 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, i1 (%CLVALUE**, %sVMInfo*)* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define void @"map_insert_charp_lambdap15_src/class"(%map__charp_lambdap* %self, i8* %key, i1 (%CLVALUE**, %sVMInfo*)* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %item3 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %item, i1 (%CLVALUE**, %sVMInfo*)** %item3, align 8
  %4 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %5 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self6 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  call void @"map_rehash_charp_lambdap16_src/class"(%map__charp_lambdap* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %12 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %17 = bitcast i8* %16 to %map__charp_lambdap**
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %17, align 8
  %18 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %34 = bitcast i8* %33 to %map__charp_lambdap**
  %self33 = load %map__charp_lambdap*, %map__charp_lambdap** %34, align 8
  %35 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %40 = bitcast i8* %39 to %map__charp_lambdap**
  %self36 = load %map__charp_lambdap*, %map__charp_lambdap** %40, align 8
  %41 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %48 = bitcast i8* %47 to %map__charp_lambdap**
  %self40 = load %map__charp_lambdap*, %map__charp_lambdap** %48, align 8
  %49 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self40, i32 0, i32 2
  %50 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %54 = bitcast i8* %53 to i1 (%CLVALUE**, %sVMInfo*)**
  %item42 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %54, align 8
  %element_address43 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %50, i32 %it41
  store i1 (%CLVALUE**, %sVMInfo*)* %item42, i1 (%CLVALUE**, %sVMInfo*)** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %56 = bitcast i8* %55 to %map__charp_lambdap**
  %self44 = load %map__charp_lambdap*, %map__charp_lambdap** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %58 = bitcast i8* %57 to %map__charp_lambdap**
  %self45 = load %map__charp_lambdap*, %map__charp_lambdap** %58, align 8
  %59 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %63 = bitcast i8* %62 to %map__charp_lambdap**
  %self21 = load %map__charp_lambdap*, %map__charp_lambdap** %63, align 8
  %64 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self21, i32 0, i32 2
  %65 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %69 = bitcast i8* %68 to i1 (%CLVALUE**, %sVMInfo*)**
  %item23 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %69, align 8
  %element_address24 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %65, i32 %it22
  store i1 (%CLVALUE**, %sVMInfo*)* %item23, i1 (%CLVALUE**, %sVMInfo*)** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %77 = bitcast i8* %76 to %map__charp_lambdap**
  %self27 = load %map__charp_lambdap*, %map__charp_lambdap** %77, align 8
  %78 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.162, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_lambdap16_src/class"(%map__charp_lambdap* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %self2 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %3 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.148, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.149, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.150, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.151, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.152, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.153, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.154, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.155, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1 (%CLVALUE**, %sVMInfo*)**
  %items = alloca i1 (%CLVALUE**, %sVMInfo*)**
  %11 = bitcast i1 (%CLVALUE**, %sVMInfo*)*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i1 (%CLVALUE**, %sVMInfo*)** %10, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.156, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.157, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.158, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.159, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  call void @"map_each_charp_lambdap17_src/class"(%map__charp_lambdap* %self8, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* @class_lambda4)
  %self9 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %16 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self9, i32 0, i32 2
  %17 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %18 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %19 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %items15 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %31 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 2
  store i1 (%CLVALUE**, %sVMInfo*)** %items15, i1 (%CLVALUE**, %sVMInfo*)*** %31, align 8
  %self16 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda4(i8* %it, i1 (%CLVALUE**, %sVMInfo*)* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %it22 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %it2, i1 (%CLVALUE**, %sVMInfo*)** %it22, align 8
  %3 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %35 = bitcast i8* %34 to i1 (%CLVALUE**, %sVMInfo*)***
  %items = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %39 = bitcast i8* %38 to i1 (%CLVALUE**, %sVMInfo*)**
  %it221 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %39, align 8
  %element_address22 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %items, i32 %n20
  store i1 (%CLVALUE**, %sVMInfo*)* %it221, i1 (%CLVALUE**, %sVMInfo*)** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.161, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_lambdap17_src/class"(%map__charp_lambdap* %self, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %block_2 = alloca void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*
  store void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %6 = bitcast i8* %5 to %map__charp_lambdap**
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %6, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  %11 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)**
  %block_7 = load void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %19 = bitcast i8* %18 to %map__charp_lambdap**
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %19, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 2
  %27 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %27, i32 %i_13
  %element15 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, i1 (%CLVALUE**, %sVMInfo*)* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define void @"map_insert_charp_lambdap18_src/class"(%map__charp_lambdap* %self, i8* %key, i1 (%CLVALUE**, %sVMInfo*)* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %item3 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %item, i1 (%CLVALUE**, %sVMInfo*)** %item3, align 8
  %4 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %5 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self6 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  call void @"map_rehash_charp_lambdap19_src/class"(%map__charp_lambdap* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %12 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %17 = bitcast i8* %16 to %map__charp_lambdap**
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %17, align 8
  %18 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %34 = bitcast i8* %33 to %map__charp_lambdap**
  %self33 = load %map__charp_lambdap*, %map__charp_lambdap** %34, align 8
  %35 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %40 = bitcast i8* %39 to %map__charp_lambdap**
  %self36 = load %map__charp_lambdap*, %map__charp_lambdap** %40, align 8
  %41 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %48 = bitcast i8* %47 to %map__charp_lambdap**
  %self40 = load %map__charp_lambdap*, %map__charp_lambdap** %48, align 8
  %49 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self40, i32 0, i32 2
  %50 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %54 = bitcast i8* %53 to i1 (%CLVALUE**, %sVMInfo*)**
  %item42 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %54, align 8
  %element_address43 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %50, i32 %it41
  store i1 (%CLVALUE**, %sVMInfo*)* %item42, i1 (%CLVALUE**, %sVMInfo*)** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %56 = bitcast i8* %55 to %map__charp_lambdap**
  %self44 = load %map__charp_lambdap*, %map__charp_lambdap** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %58 = bitcast i8* %57 to %map__charp_lambdap**
  %self45 = load %map__charp_lambdap*, %map__charp_lambdap** %58, align 8
  %59 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %63 = bitcast i8* %62 to %map__charp_lambdap**
  %self21 = load %map__charp_lambdap*, %map__charp_lambdap** %63, align 8
  %64 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self21, i32 0, i32 2
  %65 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %69 = bitcast i8* %68 to i1 (%CLVALUE**, %sVMInfo*)**
  %item23 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %69, align 8
  %element_address24 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %65, i32 %it22
  store i1 (%CLVALUE**, %sVMInfo*)* %item23, i1 (%CLVALUE**, %sVMInfo*)** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %77 = bitcast i8* %76 to %map__charp_lambdap**
  %self27 = load %map__charp_lambdap*, %map__charp_lambdap** %77, align 8
  %78 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.178, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_lambdap19_src/class"(%map__charp_lambdap* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %self2 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %3 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.164, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.165, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.166, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.167, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.168, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.169, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.170, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.171, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1 (%CLVALUE**, %sVMInfo*)**
  %items = alloca i1 (%CLVALUE**, %sVMInfo*)**
  %11 = bitcast i1 (%CLVALUE**, %sVMInfo*)*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i1 (%CLVALUE**, %sVMInfo*)** %10, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.172, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.173, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.174, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.175, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  call void @"map_each_charp_lambdap20_src/class"(%map__charp_lambdap* %self8, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* @class_lambda5)
  %self9 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %16 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self9, i32 0, i32 2
  %17 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %18 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %19 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %items15 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %31 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 2
  store i1 (%CLVALUE**, %sVMInfo*)** %items15, i1 (%CLVALUE**, %sVMInfo*)*** %31, align 8
  %self16 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda5(i8* %it, i1 (%CLVALUE**, %sVMInfo*)* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %it22 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %it2, i1 (%CLVALUE**, %sVMInfo*)** %it22, align 8
  %3 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %35 = bitcast i8* %34 to i1 (%CLVALUE**, %sVMInfo*)***
  %items = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %39 = bitcast i8* %38 to i1 (%CLVALUE**, %sVMInfo*)**
  %it221 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %39, align 8
  %element_address22 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %items, i32 %n20
  store i1 (%CLVALUE**, %sVMInfo*)* %it221, i1 (%CLVALUE**, %sVMInfo*)** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.177, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_lambdap20_src/class"(%map__charp_lambdap* %self, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %block_2 = alloca void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*
  store void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %6 = bitcast i8* %5 to %map__charp_lambdap**
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %6, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  %11 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)**
  %block_7 = load void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %19 = bitcast i8* %18 to %map__charp_lambdap**
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %19, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 2
  %27 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %27, i32 %i_13
  %element15 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, i1 (%CLVALUE**, %sVMInfo*)* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define void @"map_insert_charp_lambdap21_src/class"(%map__charp_lambdap* %self, i8* %key, i1 (%CLVALUE**, %sVMInfo*)* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %item3 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %item, i1 (%CLVALUE**, %sVMInfo*)** %item3, align 8
  %4 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %5 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self6 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  call void @"map_rehash_charp_lambdap22_src/class"(%map__charp_lambdap* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %12 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %17 = bitcast i8* %16 to %map__charp_lambdap**
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %17, align 8
  %18 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %34 = bitcast i8* %33 to %map__charp_lambdap**
  %self33 = load %map__charp_lambdap*, %map__charp_lambdap** %34, align 8
  %35 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %40 = bitcast i8* %39 to %map__charp_lambdap**
  %self36 = load %map__charp_lambdap*, %map__charp_lambdap** %40, align 8
  %41 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %48 = bitcast i8* %47 to %map__charp_lambdap**
  %self40 = load %map__charp_lambdap*, %map__charp_lambdap** %48, align 8
  %49 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self40, i32 0, i32 2
  %50 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %54 = bitcast i8* %53 to i1 (%CLVALUE**, %sVMInfo*)**
  %item42 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %54, align 8
  %element_address43 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %50, i32 %it41
  store i1 (%CLVALUE**, %sVMInfo*)* %item42, i1 (%CLVALUE**, %sVMInfo*)** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %56 = bitcast i8* %55 to %map__charp_lambdap**
  %self44 = load %map__charp_lambdap*, %map__charp_lambdap** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %58 = bitcast i8* %57 to %map__charp_lambdap**
  %self45 = load %map__charp_lambdap*, %map__charp_lambdap** %58, align 8
  %59 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %63 = bitcast i8* %62 to %map__charp_lambdap**
  %self21 = load %map__charp_lambdap*, %map__charp_lambdap** %63, align 8
  %64 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self21, i32 0, i32 2
  %65 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %69 = bitcast i8* %68 to i1 (%CLVALUE**, %sVMInfo*)**
  %item23 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %69, align 8
  %element_address24 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %65, i32 %it22
  store i1 (%CLVALUE**, %sVMInfo*)* %item23, i1 (%CLVALUE**, %sVMInfo*)** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %77 = bitcast i8* %76 to %map__charp_lambdap**
  %self27 = load %map__charp_lambdap*, %map__charp_lambdap** %77, align 8
  %78 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.194, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_lambdap22_src/class"(%map__charp_lambdap* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %self2 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %3 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.180, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.181, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.182, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.183, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.184, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.185, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.186, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.187, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1 (%CLVALUE**, %sVMInfo*)**
  %items = alloca i1 (%CLVALUE**, %sVMInfo*)**
  %11 = bitcast i1 (%CLVALUE**, %sVMInfo*)*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i1 (%CLVALUE**, %sVMInfo*)** %10, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.188, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.189, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.190, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.191, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  call void @"map_each_charp_lambdap23_src/class"(%map__charp_lambdap* %self8, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* @class_lambda6)
  %self9 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %16 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self9, i32 0, i32 2
  %17 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %18 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %19 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %items15 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %31 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 2
  store i1 (%CLVALUE**, %sVMInfo*)** %items15, i1 (%CLVALUE**, %sVMInfo*)*** %31, align 8
  %self16 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda6(i8* %it, i1 (%CLVALUE**, %sVMInfo*)* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %it22 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %it2, i1 (%CLVALUE**, %sVMInfo*)** %it22, align 8
  %3 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %35 = bitcast i8* %34 to i1 (%CLVALUE**, %sVMInfo*)***
  %items = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %39 = bitcast i8* %38 to i1 (%CLVALUE**, %sVMInfo*)**
  %it221 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %39, align 8
  %element_address22 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %items, i32 %n20
  store i1 (%CLVALUE**, %sVMInfo*)* %it221, i1 (%CLVALUE**, %sVMInfo*)** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.193, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_lambdap23_src/class"(%map__charp_lambdap* %self, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %block_2 = alloca void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*
  store void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %6 = bitcast i8* %5 to %map__charp_lambdap**
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %6, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  %11 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)**
  %block_7 = load void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %19 = bitcast i8* %18 to %map__charp_lambdap**
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %19, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 2
  %27 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %27, i32 %i_13
  %element15 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, i1 (%CLVALUE**, %sVMInfo*)* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define void @"map_insert_charp_lambdap24_src/class"(%map__charp_lambdap* %self, i8* %key, i1 (%CLVALUE**, %sVMInfo*)* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %item3 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %item, i1 (%CLVALUE**, %sVMInfo*)** %item3, align 8
  %4 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %5 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self6 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  call void @"map_rehash_charp_lambdap25_src/class"(%map__charp_lambdap* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %12 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %17 = bitcast i8* %16 to %map__charp_lambdap**
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %17, align 8
  %18 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %34 = bitcast i8* %33 to %map__charp_lambdap**
  %self33 = load %map__charp_lambdap*, %map__charp_lambdap** %34, align 8
  %35 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %40 = bitcast i8* %39 to %map__charp_lambdap**
  %self36 = load %map__charp_lambdap*, %map__charp_lambdap** %40, align 8
  %41 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %48 = bitcast i8* %47 to %map__charp_lambdap**
  %self40 = load %map__charp_lambdap*, %map__charp_lambdap** %48, align 8
  %49 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self40, i32 0, i32 2
  %50 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %54 = bitcast i8* %53 to i1 (%CLVALUE**, %sVMInfo*)**
  %item42 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %54, align 8
  %element_address43 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %50, i32 %it41
  store i1 (%CLVALUE**, %sVMInfo*)* %item42, i1 (%CLVALUE**, %sVMInfo*)** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %56 = bitcast i8* %55 to %map__charp_lambdap**
  %self44 = load %map__charp_lambdap*, %map__charp_lambdap** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %58 = bitcast i8* %57 to %map__charp_lambdap**
  %self45 = load %map__charp_lambdap*, %map__charp_lambdap** %58, align 8
  %59 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %63 = bitcast i8* %62 to %map__charp_lambdap**
  %self21 = load %map__charp_lambdap*, %map__charp_lambdap** %63, align 8
  %64 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self21, i32 0, i32 2
  %65 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %69 = bitcast i8* %68 to i1 (%CLVALUE**, %sVMInfo*)**
  %item23 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %69, align 8
  %element_address24 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %65, i32 %it22
  store i1 (%CLVALUE**, %sVMInfo*)* %item23, i1 (%CLVALUE**, %sVMInfo*)** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %77 = bitcast i8* %76 to %map__charp_lambdap**
  %self27 = load %map__charp_lambdap*, %map__charp_lambdap** %77, align 8
  %78 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.210, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_lambdap25_src/class"(%map__charp_lambdap* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %self2 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %3 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.196, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.197, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.198, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.199, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.200, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.201, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.202, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.203, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1 (%CLVALUE**, %sVMInfo*)**
  %items = alloca i1 (%CLVALUE**, %sVMInfo*)**
  %11 = bitcast i1 (%CLVALUE**, %sVMInfo*)*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i1 (%CLVALUE**, %sVMInfo*)** %10, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.204, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.205, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.206, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.207, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  call void @"map_each_charp_lambdap26_src/class"(%map__charp_lambdap* %self8, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* @class_lambda7)
  %self9 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %16 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self9, i32 0, i32 2
  %17 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %18 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %19 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %items15 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %31 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 2
  store i1 (%CLVALUE**, %sVMInfo*)** %items15, i1 (%CLVALUE**, %sVMInfo*)*** %31, align 8
  %self16 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda7(i8* %it, i1 (%CLVALUE**, %sVMInfo*)* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %it22 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %it2, i1 (%CLVALUE**, %sVMInfo*)** %it22, align 8
  %3 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %35 = bitcast i8* %34 to i1 (%CLVALUE**, %sVMInfo*)***
  %items = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %39 = bitcast i8* %38 to i1 (%CLVALUE**, %sVMInfo*)**
  %it221 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %39, align 8
  %element_address22 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %items, i32 %n20
  store i1 (%CLVALUE**, %sVMInfo*)* %it221, i1 (%CLVALUE**, %sVMInfo*)** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.209, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_lambdap26_src/class"(%map__charp_lambdap* %self, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %block_2 = alloca void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*
  store void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %6 = bitcast i8* %5 to %map__charp_lambdap**
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %6, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  %11 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)**
  %block_7 = load void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %19 = bitcast i8* %18 to %map__charp_lambdap**
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %19, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 2
  %27 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %27, i32 %i_13
  %element15 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, i1 (%CLVALUE**, %sVMInfo*)* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define void @"map_insert_charp_lambdap27_src/class"(%map__charp_lambdap* %self, i8* %key, i1 (%CLVALUE**, %sVMInfo*)* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %item3 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %item, i1 (%CLVALUE**, %sVMInfo*)** %item3, align 8
  %4 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %5 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self6 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  call void @"map_rehash_charp_lambdap28_src/class"(%map__charp_lambdap* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %12 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %17 = bitcast i8* %16 to %map__charp_lambdap**
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %17, align 8
  %18 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %34 = bitcast i8* %33 to %map__charp_lambdap**
  %self33 = load %map__charp_lambdap*, %map__charp_lambdap** %34, align 8
  %35 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %40 = bitcast i8* %39 to %map__charp_lambdap**
  %self36 = load %map__charp_lambdap*, %map__charp_lambdap** %40, align 8
  %41 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %48 = bitcast i8* %47 to %map__charp_lambdap**
  %self40 = load %map__charp_lambdap*, %map__charp_lambdap** %48, align 8
  %49 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self40, i32 0, i32 2
  %50 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %54 = bitcast i8* %53 to i1 (%CLVALUE**, %sVMInfo*)**
  %item42 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %54, align 8
  %element_address43 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %50, i32 %it41
  store i1 (%CLVALUE**, %sVMInfo*)* %item42, i1 (%CLVALUE**, %sVMInfo*)** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %56 = bitcast i8* %55 to %map__charp_lambdap**
  %self44 = load %map__charp_lambdap*, %map__charp_lambdap** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %58 = bitcast i8* %57 to %map__charp_lambdap**
  %self45 = load %map__charp_lambdap*, %map__charp_lambdap** %58, align 8
  %59 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %63 = bitcast i8* %62 to %map__charp_lambdap**
  %self21 = load %map__charp_lambdap*, %map__charp_lambdap** %63, align 8
  %64 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self21, i32 0, i32 2
  %65 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %69 = bitcast i8* %68 to i1 (%CLVALUE**, %sVMInfo*)**
  %item23 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %69, align 8
  %element_address24 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %65, i32 %it22
  store i1 (%CLVALUE**, %sVMInfo*)* %item23, i1 (%CLVALUE**, %sVMInfo*)** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %77 = bitcast i8* %76 to %map__charp_lambdap**
  %self27 = load %map__charp_lambdap*, %map__charp_lambdap** %77, align 8
  %78 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.226, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_lambdap28_src/class"(%map__charp_lambdap* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %self2 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %3 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.212, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.213, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.214, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.215, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.216, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.217, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.218, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.219, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1 (%CLVALUE**, %sVMInfo*)**
  %items = alloca i1 (%CLVALUE**, %sVMInfo*)**
  %11 = bitcast i1 (%CLVALUE**, %sVMInfo*)*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i1 (%CLVALUE**, %sVMInfo*)** %10, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.220, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.221, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.222, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.223, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  call void @"map_each_charp_lambdap29_src/class"(%map__charp_lambdap* %self8, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* @class_lambda8)
  %self9 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %16 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self9, i32 0, i32 2
  %17 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %18 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %19 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %items15 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %31 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 2
  store i1 (%CLVALUE**, %sVMInfo*)** %items15, i1 (%CLVALUE**, %sVMInfo*)*** %31, align 8
  %self16 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda8(i8* %it, i1 (%CLVALUE**, %sVMInfo*)* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %it22 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %it2, i1 (%CLVALUE**, %sVMInfo*)** %it22, align 8
  %3 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %35 = bitcast i8* %34 to i1 (%CLVALUE**, %sVMInfo*)***
  %items = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %39 = bitcast i8* %38 to i1 (%CLVALUE**, %sVMInfo*)**
  %it221 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %39, align 8
  %element_address22 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %items, i32 %n20
  store i1 (%CLVALUE**, %sVMInfo*)* %it221, i1 (%CLVALUE**, %sVMInfo*)** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.225, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_lambdap29_src/class"(%map__charp_lambdap* %self, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %block_2 = alloca void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*
  store void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %6 = bitcast i8* %5 to %map__charp_lambdap**
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %6, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  %11 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)**
  %block_7 = load void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %19 = bitcast i8* %18 to %map__charp_lambdap**
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %19, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 2
  %27 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %27, i32 %i_13
  %element15 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, i1 (%CLVALUE**, %sVMInfo*)* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define void @"map_insert_charp_lambdap30_src/class"(%map__charp_lambdap* %self, i8* %key, i1 (%CLVALUE**, %sVMInfo*)* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %item3 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %item, i1 (%CLVALUE**, %sVMInfo*)** %item3, align 8
  %4 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %5 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self6 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  call void @"map_rehash_charp_lambdap31_src/class"(%map__charp_lambdap* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %12 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %17 = bitcast i8* %16 to %map__charp_lambdap**
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %17, align 8
  %18 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %34 = bitcast i8* %33 to %map__charp_lambdap**
  %self33 = load %map__charp_lambdap*, %map__charp_lambdap** %34, align 8
  %35 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %40 = bitcast i8* %39 to %map__charp_lambdap**
  %self36 = load %map__charp_lambdap*, %map__charp_lambdap** %40, align 8
  %41 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %48 = bitcast i8* %47 to %map__charp_lambdap**
  %self40 = load %map__charp_lambdap*, %map__charp_lambdap** %48, align 8
  %49 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self40, i32 0, i32 2
  %50 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %54 = bitcast i8* %53 to i1 (%CLVALUE**, %sVMInfo*)**
  %item42 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %54, align 8
  %element_address43 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %50, i32 %it41
  store i1 (%CLVALUE**, %sVMInfo*)* %item42, i1 (%CLVALUE**, %sVMInfo*)** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %56 = bitcast i8* %55 to %map__charp_lambdap**
  %self44 = load %map__charp_lambdap*, %map__charp_lambdap** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %58 = bitcast i8* %57 to %map__charp_lambdap**
  %self45 = load %map__charp_lambdap*, %map__charp_lambdap** %58, align 8
  %59 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %63 = bitcast i8* %62 to %map__charp_lambdap**
  %self21 = load %map__charp_lambdap*, %map__charp_lambdap** %63, align 8
  %64 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self21, i32 0, i32 2
  %65 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %69 = bitcast i8* %68 to i1 (%CLVALUE**, %sVMInfo*)**
  %item23 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %69, align 8
  %element_address24 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %65, i32 %it22
  store i1 (%CLVALUE**, %sVMInfo*)* %item23, i1 (%CLVALUE**, %sVMInfo*)** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %77 = bitcast i8* %76 to %map__charp_lambdap**
  %self27 = load %map__charp_lambdap*, %map__charp_lambdap** %77, align 8
  %78 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.242, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_lambdap31_src/class"(%map__charp_lambdap* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %self2 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %3 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.228, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.229, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.230, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.231, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.232, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.233, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.234, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.235, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1 (%CLVALUE**, %sVMInfo*)**
  %items = alloca i1 (%CLVALUE**, %sVMInfo*)**
  %11 = bitcast i1 (%CLVALUE**, %sVMInfo*)*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i1 (%CLVALUE**, %sVMInfo*)** %10, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.236, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.237, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.238, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.239, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  call void @"map_each_charp_lambdap32_src/class"(%map__charp_lambdap* %self8, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* @class_lambda9)
  %self9 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %16 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self9, i32 0, i32 2
  %17 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %18 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %19 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %items15 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %31 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 2
  store i1 (%CLVALUE**, %sVMInfo*)** %items15, i1 (%CLVALUE**, %sVMInfo*)*** %31, align 8
  %self16 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda9(i8* %it, i1 (%CLVALUE**, %sVMInfo*)* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %it22 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %it2, i1 (%CLVALUE**, %sVMInfo*)** %it22, align 8
  %3 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %35 = bitcast i8* %34 to i1 (%CLVALUE**, %sVMInfo*)***
  %items = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %39 = bitcast i8* %38 to i1 (%CLVALUE**, %sVMInfo*)**
  %it221 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %39, align 8
  %element_address22 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %items, i32 %n20
  store i1 (%CLVALUE**, %sVMInfo*)* %it221, i1 (%CLVALUE**, %sVMInfo*)** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.241, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_lambdap32_src/class"(%map__charp_lambdap* %self, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %block_2 = alloca void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*
  store void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %6 = bitcast i8* %5 to %map__charp_lambdap**
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %6, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  %11 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)**
  %block_7 = load void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %19 = bitcast i8* %18 to %map__charp_lambdap**
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %19, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 2
  %27 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %27, i32 %i_13
  %element15 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, i1 (%CLVALUE**, %sVMInfo*)* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define void @"map_insert_charp_lambdap33_src/class"(%map__charp_lambdap* %self, i8* %key, i1 (%CLVALUE**, %sVMInfo*)* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %item3 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %item, i1 (%CLVALUE**, %sVMInfo*)** %item3, align 8
  %4 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %5 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self6 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  call void @"map_rehash_charp_lambdap34_src/class"(%map__charp_lambdap* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %12 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %17 = bitcast i8* %16 to %map__charp_lambdap**
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %17, align 8
  %18 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %34 = bitcast i8* %33 to %map__charp_lambdap**
  %self33 = load %map__charp_lambdap*, %map__charp_lambdap** %34, align 8
  %35 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %40 = bitcast i8* %39 to %map__charp_lambdap**
  %self36 = load %map__charp_lambdap*, %map__charp_lambdap** %40, align 8
  %41 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %48 = bitcast i8* %47 to %map__charp_lambdap**
  %self40 = load %map__charp_lambdap*, %map__charp_lambdap** %48, align 8
  %49 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self40, i32 0, i32 2
  %50 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %54 = bitcast i8* %53 to i1 (%CLVALUE**, %sVMInfo*)**
  %item42 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %54, align 8
  %element_address43 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %50, i32 %it41
  store i1 (%CLVALUE**, %sVMInfo*)* %item42, i1 (%CLVALUE**, %sVMInfo*)** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %56 = bitcast i8* %55 to %map__charp_lambdap**
  %self44 = load %map__charp_lambdap*, %map__charp_lambdap** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %58 = bitcast i8* %57 to %map__charp_lambdap**
  %self45 = load %map__charp_lambdap*, %map__charp_lambdap** %58, align 8
  %59 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %63 = bitcast i8* %62 to %map__charp_lambdap**
  %self21 = load %map__charp_lambdap*, %map__charp_lambdap** %63, align 8
  %64 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self21, i32 0, i32 2
  %65 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %69 = bitcast i8* %68 to i1 (%CLVALUE**, %sVMInfo*)**
  %item23 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %69, align 8
  %element_address24 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %65, i32 %it22
  store i1 (%CLVALUE**, %sVMInfo*)* %item23, i1 (%CLVALUE**, %sVMInfo*)** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %77 = bitcast i8* %76 to %map__charp_lambdap**
  %self27 = load %map__charp_lambdap*, %map__charp_lambdap** %77, align 8
  %78 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.258, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_lambdap34_src/class"(%map__charp_lambdap* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %self2 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %3 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.244, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.245, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.246, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.247, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.248, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.249, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.250, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.251, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1 (%CLVALUE**, %sVMInfo*)**
  %items = alloca i1 (%CLVALUE**, %sVMInfo*)**
  %11 = bitcast i1 (%CLVALUE**, %sVMInfo*)*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i1 (%CLVALUE**, %sVMInfo*)** %10, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.252, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.253, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.254, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.255, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  call void @"map_each_charp_lambdap35_src/class"(%map__charp_lambdap* %self8, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* @class_lambda10)
  %self9 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %16 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self9, i32 0, i32 2
  %17 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %18 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %19 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %items15 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %31 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 2
  store i1 (%CLVALUE**, %sVMInfo*)** %items15, i1 (%CLVALUE**, %sVMInfo*)*** %31, align 8
  %self16 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda10(i8* %it, i1 (%CLVALUE**, %sVMInfo*)* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %it22 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %it2, i1 (%CLVALUE**, %sVMInfo*)** %it22, align 8
  %3 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %35 = bitcast i8* %34 to i1 (%CLVALUE**, %sVMInfo*)***
  %items = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %39 = bitcast i8* %38 to i1 (%CLVALUE**, %sVMInfo*)**
  %it221 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %39, align 8
  %element_address22 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %items, i32 %n20
  store i1 (%CLVALUE**, %sVMInfo*)* %it221, i1 (%CLVALUE**, %sVMInfo*)** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.257, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_lambdap35_src/class"(%map__charp_lambdap* %self, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %block_2 = alloca void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*
  store void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %6 = bitcast i8* %5 to %map__charp_lambdap**
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %6, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  %11 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)**
  %block_7 = load void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %19 = bitcast i8* %18 to %map__charp_lambdap**
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %19, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 2
  %27 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %27, i32 %i_13
  %element15 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, i1 (%CLVALUE**, %sVMInfo*)* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define void @"map_insert_charp_lambdap36_src/class"(%map__charp_lambdap* %self, i8* %key, i1 (%CLVALUE**, %sVMInfo*)* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %item3 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %item, i1 (%CLVALUE**, %sVMInfo*)** %item3, align 8
  %4 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %5 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self6 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  call void @"map_rehash_charp_lambdap37_src/class"(%map__charp_lambdap* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %12 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %17 = bitcast i8* %16 to %map__charp_lambdap**
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %17, align 8
  %18 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %34 = bitcast i8* %33 to %map__charp_lambdap**
  %self33 = load %map__charp_lambdap*, %map__charp_lambdap** %34, align 8
  %35 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %40 = bitcast i8* %39 to %map__charp_lambdap**
  %self36 = load %map__charp_lambdap*, %map__charp_lambdap** %40, align 8
  %41 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %48 = bitcast i8* %47 to %map__charp_lambdap**
  %self40 = load %map__charp_lambdap*, %map__charp_lambdap** %48, align 8
  %49 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self40, i32 0, i32 2
  %50 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %54 = bitcast i8* %53 to i1 (%CLVALUE**, %sVMInfo*)**
  %item42 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %54, align 8
  %element_address43 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %50, i32 %it41
  store i1 (%CLVALUE**, %sVMInfo*)* %item42, i1 (%CLVALUE**, %sVMInfo*)** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %56 = bitcast i8* %55 to %map__charp_lambdap**
  %self44 = load %map__charp_lambdap*, %map__charp_lambdap** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %58 = bitcast i8* %57 to %map__charp_lambdap**
  %self45 = load %map__charp_lambdap*, %map__charp_lambdap** %58, align 8
  %59 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %63 = bitcast i8* %62 to %map__charp_lambdap**
  %self21 = load %map__charp_lambdap*, %map__charp_lambdap** %63, align 8
  %64 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self21, i32 0, i32 2
  %65 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %69 = bitcast i8* %68 to i1 (%CLVALUE**, %sVMInfo*)**
  %item23 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %69, align 8
  %element_address24 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %65, i32 %it22
  store i1 (%CLVALUE**, %sVMInfo*)* %item23, i1 (%CLVALUE**, %sVMInfo*)** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %77 = bitcast i8* %76 to %map__charp_lambdap**
  %self27 = load %map__charp_lambdap*, %map__charp_lambdap** %77, align 8
  %78 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.274, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_lambdap37_src/class"(%map__charp_lambdap* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %self2 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %3 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.260, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.261, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.262, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.263, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.264, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.265, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.266, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.267, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1 (%CLVALUE**, %sVMInfo*)**
  %items = alloca i1 (%CLVALUE**, %sVMInfo*)**
  %11 = bitcast i1 (%CLVALUE**, %sVMInfo*)*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i1 (%CLVALUE**, %sVMInfo*)** %10, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.268, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.269, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.270, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.271, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  call void @"map_each_charp_lambdap38_src/class"(%map__charp_lambdap* %self8, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* @class_lambda11)
  %self9 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %16 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self9, i32 0, i32 2
  %17 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %18 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %19 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %items15 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %31 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 2
  store i1 (%CLVALUE**, %sVMInfo*)** %items15, i1 (%CLVALUE**, %sVMInfo*)*** %31, align 8
  %self16 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda11(i8* %it, i1 (%CLVALUE**, %sVMInfo*)* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %it22 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %it2, i1 (%CLVALUE**, %sVMInfo*)** %it22, align 8
  %3 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %35 = bitcast i8* %34 to i1 (%CLVALUE**, %sVMInfo*)***
  %items = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %39 = bitcast i8* %38 to i1 (%CLVALUE**, %sVMInfo*)**
  %it221 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %39, align 8
  %element_address22 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %items, i32 %n20
  store i1 (%CLVALUE**, %sVMInfo*)* %it221, i1 (%CLVALUE**, %sVMInfo*)** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.273, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_lambdap38_src/class"(%map__charp_lambdap* %self, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %block_2 = alloca void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*
  store void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %6 = bitcast i8* %5 to %map__charp_lambdap**
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %6, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  %11 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)**
  %block_7 = load void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %19 = bitcast i8* %18 to %map__charp_lambdap**
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %19, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 2
  %27 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %27, i32 %i_13
  %element15 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, i1 (%CLVALUE**, %sVMInfo*)* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define void @"map_insert_charp_lambdap39_src/class"(%map__charp_lambdap* %self, i8* %key, i1 (%CLVALUE**, %sVMInfo*)* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %item3 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %item, i1 (%CLVALUE**, %sVMInfo*)** %item3, align 8
  %4 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %5 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self6 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  call void @"map_rehash_charp_lambdap40_src/class"(%map__charp_lambdap* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %12 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %17 = bitcast i8* %16 to %map__charp_lambdap**
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %17, align 8
  %18 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %34 = bitcast i8* %33 to %map__charp_lambdap**
  %self33 = load %map__charp_lambdap*, %map__charp_lambdap** %34, align 8
  %35 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %40 = bitcast i8* %39 to %map__charp_lambdap**
  %self36 = load %map__charp_lambdap*, %map__charp_lambdap** %40, align 8
  %41 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %48 = bitcast i8* %47 to %map__charp_lambdap**
  %self40 = load %map__charp_lambdap*, %map__charp_lambdap** %48, align 8
  %49 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self40, i32 0, i32 2
  %50 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %54 = bitcast i8* %53 to i1 (%CLVALUE**, %sVMInfo*)**
  %item42 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %54, align 8
  %element_address43 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %50, i32 %it41
  store i1 (%CLVALUE**, %sVMInfo*)* %item42, i1 (%CLVALUE**, %sVMInfo*)** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %56 = bitcast i8* %55 to %map__charp_lambdap**
  %self44 = load %map__charp_lambdap*, %map__charp_lambdap** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %58 = bitcast i8* %57 to %map__charp_lambdap**
  %self45 = load %map__charp_lambdap*, %map__charp_lambdap** %58, align 8
  %59 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %63 = bitcast i8* %62 to %map__charp_lambdap**
  %self21 = load %map__charp_lambdap*, %map__charp_lambdap** %63, align 8
  %64 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self21, i32 0, i32 2
  %65 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %69 = bitcast i8* %68 to i1 (%CLVALUE**, %sVMInfo*)**
  %item23 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %69, align 8
  %element_address24 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %65, i32 %it22
  store i1 (%CLVALUE**, %sVMInfo*)* %item23, i1 (%CLVALUE**, %sVMInfo*)** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %77 = bitcast i8* %76 to %map__charp_lambdap**
  %self27 = load %map__charp_lambdap*, %map__charp_lambdap** %77, align 8
  %78 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.290, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_lambdap40_src/class"(%map__charp_lambdap* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %self2 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %3 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.276, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.277, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.278, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.279, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.280, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.281, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.282, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.283, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1 (%CLVALUE**, %sVMInfo*)**
  %items = alloca i1 (%CLVALUE**, %sVMInfo*)**
  %11 = bitcast i1 (%CLVALUE**, %sVMInfo*)*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i1 (%CLVALUE**, %sVMInfo*)** %10, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.284, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.285, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_string.286, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_string.287, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  call void @"map_each_charp_lambdap41_src/class"(%map__charp_lambdap* %self8, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* @class_lambda12)
  %self9 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %16 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self9, i32 0, i32 2
  %17 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %18 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %16, align 8
  %19 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %items15 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %items, align 8
  %31 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self14, i32 0, i32 2
  store i1 (%CLVALUE**, %sVMInfo*)** %items15, i1 (%CLVALUE**, %sVMInfo*)*** %31, align 8
  %self16 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda12(i8* %it, i1 (%CLVALUE**, %sVMInfo*)* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %it22 = alloca i1 (%CLVALUE**, %sVMInfo*)*
  store i1 (%CLVALUE**, %sVMInfo*)* %it2, i1 (%CLVALUE**, %sVMInfo*)** %it22, align 8
  %3 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %35 = bitcast i8* %34 to i1 (%CLVALUE**, %sVMInfo*)***
  %items = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %39 = bitcast i8* %38 to i1 (%CLVALUE**, %sVMInfo*)**
  %it221 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %39, align 8
  %element_address22 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %items, i32 %n20
  store i1 (%CLVALUE**, %sVMInfo*)* %it221, i1 (%CLVALUE**, %sVMInfo*)** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.289, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_lambdap41_src/class"(%map__charp_lambdap* %self, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %block_2 = alloca void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*
  store void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)* %block_, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %6 = bitcast i8* %5 to %map__charp_lambdap**
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %6, align 8
  %7 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %10 = bitcast i8* %9 to %map__charp_lambdap**
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %10, align 8
  %11 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)**
  %block_7 = load void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)*, void (i8*, i1 (%CLVALUE**, %sVMInfo*)*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %19 = bitcast i8* %18 to %map__charp_lambdap**
  %self8 = load %map__charp_lambdap*, %map__charp_lambdap** %19, align 8
  %20 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %25 = bitcast i8* %24 to %map__charp_lambdap**
  %self12 = load %map__charp_lambdap*, %map__charp_lambdap** %25, align 8
  %26 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self12, i32 0, i32 2
  %27 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %27, i32 %i_13
  %element15 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, i1 (%CLVALUE**, %sVMInfo*)* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define %vector__int* @"vector_initialize_int42_src/class"(%vector__int* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__int*
  store %vector__int* %self, %vector__int** %self1, align 8
  %2 = bitcast %vector__int** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %self2 = load %vector__int*, %vector__int** %self1, align 8
  %3 = getelementptr inbounds %vector__int, %vector__int* %self2, i32 0, i32 2
  store i32 16, i32* %3, align 4
  %self3 = load %vector__int*, %vector__int** %self1, align 8
  %4 = getelementptr inbounds %vector__int, %vector__int* %self3, i32 0, i32 1
  store i32 0, i32* %4, align 4
  %self4 = load %vector__int*, %vector__int** %self1, align 8
  %self5 = load %vector__int*, %vector__int** %self1, align 8
  %5 = getelementptr inbounds %vector__int, %vector__int* %self5, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %sext14 = zext i32 %6 to i64
  %7 = call i8* @debug_xcalloc(i64 %sext14, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_string.295, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.296, i32 0, i32 0), i32 452, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_string.297, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.298, i32 0, i32 0))
  %8 = bitcast i8* %7 to i32*
  %9 = getelementptr inbounds %vector__int, %vector__int* %self4, i32 0, i32 0
  store i32* %8, i32** %9, align 8
  %self6 = load %vector__int*, %vector__int** %self1, align 8
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret %vector__int* %self6
}

define void @"vector_finalize_int43_src/class"(%vector__int* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__int*
  store %vector__int* %self, %vector__int** %self1, align 8
  %2 = bitcast %vector__int** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %self2 = load %vector__int*, %vector__int** %self1, align 8
  %eqtmpX = icmp eq %vector__int* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 false, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self10 = load %vector__int*, %vector__int** %self1, align 8
  %6 = getelementptr inbounds %vector__int, %vector__int* %self10, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = load i32*, i32** %6, align 8
  %9 = ptrtoint i32* %8 to i64
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %cond_then_block11, label %cond_end12

loop_top_block:                                   ; preds = %cond_then_block, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %11 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %12 = bitcast i8* %11 to %vector__int**
  %self6 = load %vector__int*, %vector__int** %12, align 8
  %13 = getelementptr inbounds %vector__int, %vector__int* %self6, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %letmp = icmp slt i32 %i5, %14
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %15 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %16 = bitcast i8* %15 to %vector__int**
  %self7 = load %vector__int*, %vector__int** %16, align 8
  %17 = getelementptr inbounds %vector__int, %vector__int* %self7, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr i32, i32* %18, i32 %i8
  %element = load i32, i32* %element_address, align 4
  %19 = load i32, i32* %element_address, align 8
  %i9 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i9, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block11:                                ; preds = %cond_end4
  br label %cond_end12

cond_end12:                                       ; preds = %cond_then_block11, %cond_end4
  %20 = bitcast i32* %8 to i8*
  call void @xfree(i8* %20)
  %21 = bitcast [8192 x i8*]* %lvtable to i8*
  %22 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %21, i64 65536)
  ret void
}

define void @"map_finalize_charp_sCLClassp44_src/class"(%map__charp_sCLClassp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLClassp*
  store %map__charp_sCLClassp* %self, %map__charp_sCLClassp** %self1, align 8
  %2 = bitcast %map__charp_sCLClassp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %self2 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sCLClassp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %7 = bitcast i8* %6 to %map__charp_sCLClassp**
  %self4 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %11 = bitcast i8* %10 to %map__charp_sCLClassp**
  %self5 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self26 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self26, i32 0, i32 2
  %15 = load %sCLClass**, %sCLClass*** %14, align 8
  %16 = load %sCLClass**, %sCLClass*** %14, align 8
  %17 = bitcast %sCLClass** %16 to i8*
  call void @xfree(i8* %17)
  %i27 = alloca i32
  %18 = bitcast i32* %i27 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  store i32 0, i32* %i27, align 4
  br label %loop_top_block28

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 true, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i25 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i25, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %20 = bitcast i8* %19 to %map__charp_sCLClassp**
  %self11 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self11, i32 0, i32 2
  %22 = load %sCLClass**, %sCLClass*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sCLClass*, %sCLClass** %22, i32 %i12
  %element14 = load %sCLClass*, %sCLClass** %element_address13, align 8
  %25 = load %sCLClass*, %sCLClass** %element_address13, align 8
  %26 = ptrtoint %sCLClass* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sCLClass, %sCLClass* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end24, %cond_jump_then9
  %32 = bitcast %sCLClass* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  %33 = getelementptr inbounds %sCLClass, %sCLClass* %25, i32 0, i32 1
  %34 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %33, align 8
  call void @"map_finalize_charp_sCLMethodp45_src/class"(%map__charp_sCLMethodp* %34)
  %35 = ptrtoint %map__charp_sCLMethodp* %34 to i64
  %36 = icmp ne i64 %35, 0
  br i1 %36, label %cond_then_block19, label %cond_end20

cond_then_block19:                                ; preds = %cond_end18
  br label %cond_end20

cond_end20:                                       ; preds = %cond_then_block19, %cond_end18
  %37 = bitcast %map__charp_sCLMethodp* %34 to i8*
  call void @xfree(i8* %37)
  %38 = getelementptr inbounds %sCLClass, %sCLClass* %25, i32 0, i32 2
  %39 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %38, align 8
  call void @"map_finalize_charp_sCLFieldp46_src/class"(%map__charp_sCLFieldp* %39)
  %40 = ptrtoint %map__charp_sCLFieldp* %39 to i64
  %41 = icmp ne i64 %40, 0
  br i1 %41, label %cond_then_block21, label %cond_end22

cond_then_block21:                                ; preds = %cond_end20
  br label %cond_end22

cond_end22:                                       ; preds = %cond_then_block21, %cond_end20
  %42 = bitcast %map__charp_sCLFieldp* %39 to i8*
  call void @xfree(i8* %42)
  %43 = getelementptr inbounds %sCLClass, %sCLClass* %25, i32 0, i32 3
  %44 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %43, align 8
  call void @"map_finalize_charp_sCLFieldp47_src/class"(%map__charp_sCLFieldp* %44)
  %45 = ptrtoint %map__charp_sCLFieldp* %44 to i64
  %46 = icmp ne i64 %45, 0
  br i1 %46, label %cond_then_block23, label %cond_end24

cond_then_block23:                                ; preds = %cond_end22
  br label %cond_end24

cond_end24:                                       ; preds = %cond_then_block23, %cond_end22
  %47 = bitcast %map__charp_sCLFieldp* %44 to i8*
  call void @xfree(i8* %47)
  br label %cond_end16

loop_top_block28:                                 ; preds = %cond_end39, %cond_end_block
  %i29 = load i32, i32* %i27, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %49 = bitcast i8* %48 to %map__charp_sCLClassp**
  %self30 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %49, align 8
  %50 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self30, i32 0, i32 3
  %51 = load i32, i32* %50, align 4
  %letmp31 = icmp slt i32 %i29, %51
  br i1 %letmp31, label %cond_then_block32, label %cond_end_block33

cond_then_block32:                                ; preds = %loop_top_block28
  %52 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %53 = bitcast i8* %52 to %map__charp_sCLClassp**
  %self34 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %53, align 8
  %54 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self34, i32 0, i32 1
  %55 = load i1*, i1** %54, align 8
  %i35 = load i32, i32* %i27, align 4
  %element_address36 = getelementptr i1, i1* %55, i32 %i35
  %element37 = load i1, i1* %element_address36, align 1
  br i1 %element37, label %cond_jump_then38, label %cond_end39

cond_end_block33:                                 ; preds = %loop_top_block28
  %self51 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %56 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self51, i32 0, i32 0
  %57 = load i8**, i8*** %56, align 8
  %58 = load i8**, i8*** %56, align 8
  %59 = bitcast i8** %58 to i8*
  call void @xfree(i8* %59)
  %self52 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %60 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self52, i32 0, i32 1
  %61 = load i1*, i1** %60, align 8
  %62 = load i1*, i1** %60, align 8
  %63 = ptrtoint i1* %62 to i64
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %cond_then_block53, label %cond_end54

cond_jump_then38:                                 ; preds = %cond_then_block32
  br i1 true, label %cond_jump_then40, label %cond_end41

cond_end39:                                       ; preds = %cond_end41, %cond_then_block32
  %i48 = load i32, i32* %i27, align 4
  %addtmp49 = add nsw i32 %i48, 1
  store i32 %addtmp49, i32* %i27, align 4
  %subttmp50 = sub nsw i32 %addtmp49, 1
  br label %loop_top_block28

cond_jump_then40:                                 ; preds = %cond_jump_then38
  %65 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %66 = bitcast i8* %65 to %map__charp_sCLClassp**
  %self42 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %66, align 8
  %67 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self42, i32 0, i32 0
  %68 = load i8**, i8*** %67, align 8
  %69 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %70 = bitcast i8* %69 to i32*
  %i43 = load i32, i32* %70, align 4
  %element_address44 = getelementptr i8*, i8** %68, i32 %i43
  %element45 = load i8*, i8** %element_address44, align 8
  %71 = load i8*, i8** %element_address44, align 8
  %72 = ptrtoint i8* %71 to i64
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %cond_then_block46, label %cond_end47

cond_end41:                                       ; preds = %cond_end47, %cond_jump_then38
  br label %cond_end39

cond_then_block46:                                ; preds = %cond_jump_then40
  br label %cond_end47

cond_end47:                                       ; preds = %cond_then_block46, %cond_jump_then40
  call void @xfree(i8* %71)
  br label %cond_end41

cond_then_block53:                                ; preds = %cond_end_block33
  br label %cond_end54

cond_end54:                                       ; preds = %cond_then_block53, %cond_end_block33
  %74 = bitcast i1* %62 to i8*
  call void @xfree(i8* %74)
  %75 = bitcast [8192 x i8*]* %lvtable to i8*
  %76 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %75, i64 65536)
  ret void
}

define void @"map_finalize_charp_sCLMethodp45_src/class"(%map__charp_sCLMethodp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLMethodp*
  store %map__charp_sCLMethodp* %self, %map__charp_sCLMethodp** %self1, align 8
  %2 = bitcast %map__charp_sCLMethodp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self2 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sCLMethodp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %7 = bitcast i8* %6 to %map__charp_sCLMethodp**
  %self4 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %11 = bitcast i8* %10 to %map__charp_sCLMethodp**
  %self5 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self22 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self22, i32 0, i32 2
  %15 = load %sCLMethod**, %sCLMethod*** %14, align 8
  %16 = load %sCLMethod**, %sCLMethod*** %14, align 8
  %17 = bitcast %sCLMethod** %16 to i8*
  call void @xfree(i8* %17)
  %i23 = alloca i32
  %18 = bitcast i32* %i23 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 0, i32* %i23, align 4
  br label %loop_top_block24

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 true, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i21 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i21, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %20 = bitcast i8* %19 to %map__charp_sCLMethodp**
  %self11 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self11, i32 0, i32 2
  %22 = load %sCLMethod**, %sCLMethod*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sCLMethod*, %sCLMethod** %22, i32 %i12
  %element14 = load %sCLMethod*, %sCLMethod** %element_address13, align 8
  %25 = load %sCLMethod*, %sCLMethod** %element_address13, align 8
  %26 = ptrtoint %sCLMethod* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sCLMethod, %sCLMethod* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end20, %cond_jump_then9
  %32 = bitcast %sCLMethod* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  %33 = getelementptr inbounds %sCLMethod, %sCLMethod* %25, i32 0, i32 4
  %34 = load %buffer*, %buffer** %33, align 8
  call void @buffer_finalize(%buffer* %34)
  %35 = ptrtoint %buffer* %34 to i64
  %36 = icmp ne i64 %35, 0
  br i1 %36, label %cond_then_block19, label %cond_end20

cond_then_block19:                                ; preds = %cond_end18
  br label %cond_end20

cond_end20:                                       ; preds = %cond_then_block19, %cond_end18
  %37 = bitcast %buffer* %34 to i8*
  call void @xfree(i8* %37)
  br label %cond_end16

loop_top_block24:                                 ; preds = %cond_end35, %cond_end_block
  %i25 = load i32, i32* %i23, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %39 = bitcast i8* %38 to %map__charp_sCLMethodp**
  %self26 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %39, align 8
  %40 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self26, i32 0, i32 3
  %41 = load i32, i32* %40, align 4
  %letmp27 = icmp slt i32 %i25, %41
  br i1 %letmp27, label %cond_then_block28, label %cond_end_block29

cond_then_block28:                                ; preds = %loop_top_block24
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %43 = bitcast i8* %42 to %map__charp_sCLMethodp**
  %self30 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %43, align 8
  %44 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self30, i32 0, i32 1
  %45 = load i1*, i1** %44, align 8
  %i31 = load i32, i32* %i23, align 4
  %element_address32 = getelementptr i1, i1* %45, i32 %i31
  %element33 = load i1, i1* %element_address32, align 1
  br i1 %element33, label %cond_jump_then34, label %cond_end35

cond_end_block29:                                 ; preds = %loop_top_block24
  %self47 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %46 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self47, i32 0, i32 0
  %47 = load i8**, i8*** %46, align 8
  %48 = load i8**, i8*** %46, align 8
  %49 = bitcast i8** %48 to i8*
  call void @xfree(i8* %49)
  %self48 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %50 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self48, i32 0, i32 1
  %51 = load i1*, i1** %50, align 8
  %52 = load i1*, i1** %50, align 8
  %53 = ptrtoint i1* %52 to i64
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %cond_then_block49, label %cond_end50

cond_jump_then34:                                 ; preds = %cond_then_block28
  br i1 true, label %cond_jump_then36, label %cond_end37

cond_end35:                                       ; preds = %cond_end37, %cond_then_block28
  %i44 = load i32, i32* %i23, align 4
  %addtmp45 = add nsw i32 %i44, 1
  store i32 %addtmp45, i32* %i23, align 4
  %subttmp46 = sub nsw i32 %addtmp45, 1
  br label %loop_top_block24

cond_jump_then36:                                 ; preds = %cond_jump_then34
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %56 = bitcast i8* %55 to %map__charp_sCLMethodp**
  %self38 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %56, align 8
  %57 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self38, i32 0, i32 0
  %58 = load i8**, i8*** %57, align 8
  %59 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %60 = bitcast i8* %59 to i32*
  %i39 = load i32, i32* %60, align 4
  %element_address40 = getelementptr i8*, i8** %58, i32 %i39
  %element41 = load i8*, i8** %element_address40, align 8
  %61 = load i8*, i8** %element_address40, align 8
  %62 = ptrtoint i8* %61 to i64
  %63 = icmp ne i64 %62, 0
  br i1 %63, label %cond_then_block42, label %cond_end43

cond_end37:                                       ; preds = %cond_end43, %cond_jump_then34
  br label %cond_end35

cond_then_block42:                                ; preds = %cond_jump_then36
  br label %cond_end43

cond_end43:                                       ; preds = %cond_then_block42, %cond_jump_then36
  call void @xfree(i8* %61)
  br label %cond_end37

cond_then_block49:                                ; preds = %cond_end_block29
  br label %cond_end50

cond_end50:                                       ; preds = %cond_then_block49, %cond_end_block29
  %64 = bitcast i1* %52 to i8*
  call void @xfree(i8* %64)
  %65 = bitcast [8192 x i8*]* %lvtable to i8*
  %66 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %65, i64 65536)
  ret void
}

define void @"map_finalize_charp_sCLFieldp46_src/class"(%map__charp_sCLFieldp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLFieldp*
  store %map__charp_sCLFieldp* %self, %map__charp_sCLFieldp** %self1, align 8
  %2 = bitcast %map__charp_sCLFieldp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self2 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sCLFieldp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %7 = bitcast i8* %6 to %map__charp_sCLFieldp**
  %self4 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %11 = bitcast i8* %10 to %map__charp_sCLFieldp**
  %self5 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self20 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self20, i32 0, i32 2
  %15 = load %sCLField**, %sCLField*** %14, align 8
  %16 = load %sCLField**, %sCLField*** %14, align 8
  %17 = bitcast %sCLField** %16 to i8*
  call void @xfree(i8* %17)
  %i21 = alloca i32
  %18 = bitcast i32* %i21 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 0, i32* %i21, align 4
  br label %loop_top_block22

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 true, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i19 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i19, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %20 = bitcast i8* %19 to %map__charp_sCLFieldp**
  %self11 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self11, i32 0, i32 2
  %22 = load %sCLField**, %sCLField*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sCLField*, %sCLField** %22, i32 %i12
  %element14 = load %sCLField*, %sCLField** %element_address13, align 8
  %25 = load %sCLField*, %sCLField** %element_address13, align 8
  %26 = ptrtoint %sCLField* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sCLField, %sCLField* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end18, %cond_jump_then9
  %32 = bitcast %sCLField* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  br label %cond_end16

loop_top_block22:                                 ; preds = %cond_end33, %cond_end_block
  %i23 = load i32, i32* %i21, align 4
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %34 = bitcast i8* %33 to %map__charp_sCLFieldp**
  %self24 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self24, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %letmp25 = icmp slt i32 %i23, %36
  br i1 %letmp25, label %cond_then_block26, label %cond_end_block27

cond_then_block26:                                ; preds = %loop_top_block22
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %38 = bitcast i8* %37 to %map__charp_sCLFieldp**
  %self28 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %38, align 8
  %39 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self28, i32 0, i32 1
  %40 = load i1*, i1** %39, align 8
  %i29 = load i32, i32* %i21, align 4
  %element_address30 = getelementptr i1, i1* %40, i32 %i29
  %element31 = load i1, i1* %element_address30, align 1
  br i1 %element31, label %cond_jump_then32, label %cond_end33

cond_end_block27:                                 ; preds = %loop_top_block22
  %self45 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %41 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self45, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8**, i8*** %41, align 8
  %44 = bitcast i8** %43 to i8*
  call void @xfree(i8* %44)
  %self46 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %45 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self46, i32 0, i32 1
  %46 = load i1*, i1** %45, align 8
  %47 = load i1*, i1** %45, align 8
  %48 = ptrtoint i1* %47 to i64
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %cond_then_block47, label %cond_end48

cond_jump_then32:                                 ; preds = %cond_then_block26
  br i1 true, label %cond_jump_then34, label %cond_end35

cond_end33:                                       ; preds = %cond_end35, %cond_then_block26
  %i42 = load i32, i32* %i21, align 4
  %addtmp43 = add nsw i32 %i42, 1
  store i32 %addtmp43, i32* %i21, align 4
  %subttmp44 = sub nsw i32 %addtmp43, 1
  br label %loop_top_block22

cond_jump_then34:                                 ; preds = %cond_jump_then32
  %50 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %51 = bitcast i8* %50 to %map__charp_sCLFieldp**
  %self36 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %51, align 8
  %52 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self36, i32 0, i32 0
  %53 = load i8**, i8*** %52, align 8
  %54 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %55 = bitcast i8* %54 to i32*
  %i37 = load i32, i32* %55, align 4
  %element_address38 = getelementptr i8*, i8** %53, i32 %i37
  %element39 = load i8*, i8** %element_address38, align 8
  %56 = load i8*, i8** %element_address38, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %cond_then_block40, label %cond_end41

cond_end35:                                       ; preds = %cond_end41, %cond_jump_then32
  br label %cond_end33

cond_then_block40:                                ; preds = %cond_jump_then34
  br label %cond_end41

cond_end41:                                       ; preds = %cond_then_block40, %cond_jump_then34
  call void @xfree(i8* %56)
  br label %cond_end35

cond_then_block47:                                ; preds = %cond_end_block27
  br label %cond_end48

cond_end48:                                       ; preds = %cond_then_block47, %cond_end_block27
  %59 = bitcast i1* %47 to i8*
  call void @xfree(i8* %59)
  %60 = bitcast [8192 x i8*]* %lvtable to i8*
  %61 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %60, i64 65536)
  ret void
}

define void @"map_finalize_charp_sCLFieldp47_src/class"(%map__charp_sCLFieldp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLFieldp*
  store %map__charp_sCLFieldp* %self, %map__charp_sCLFieldp** %self1, align 8
  %2 = bitcast %map__charp_sCLFieldp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self2 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sCLFieldp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %7 = bitcast i8* %6 to %map__charp_sCLFieldp**
  %self4 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %11 = bitcast i8* %10 to %map__charp_sCLFieldp**
  %self5 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self20 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self20, i32 0, i32 2
  %15 = load %sCLField**, %sCLField*** %14, align 8
  %16 = load %sCLField**, %sCLField*** %14, align 8
  %17 = bitcast %sCLField** %16 to i8*
  call void @xfree(i8* %17)
  %i21 = alloca i32
  %18 = bitcast i32* %i21 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 0, i32* %i21, align 4
  br label %loop_top_block22

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 true, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i19 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i19, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %20 = bitcast i8* %19 to %map__charp_sCLFieldp**
  %self11 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self11, i32 0, i32 2
  %22 = load %sCLField**, %sCLField*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sCLField*, %sCLField** %22, i32 %i12
  %element14 = load %sCLField*, %sCLField** %element_address13, align 8
  %25 = load %sCLField*, %sCLField** %element_address13, align 8
  %26 = ptrtoint %sCLField* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sCLField, %sCLField* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end18, %cond_jump_then9
  %32 = bitcast %sCLField* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  br label %cond_end16

loop_top_block22:                                 ; preds = %cond_end33, %cond_end_block
  %i23 = load i32, i32* %i21, align 4
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %34 = bitcast i8* %33 to %map__charp_sCLFieldp**
  %self24 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self24, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %letmp25 = icmp slt i32 %i23, %36
  br i1 %letmp25, label %cond_then_block26, label %cond_end_block27

cond_then_block26:                                ; preds = %loop_top_block22
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %38 = bitcast i8* %37 to %map__charp_sCLFieldp**
  %self28 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %38, align 8
  %39 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self28, i32 0, i32 1
  %40 = load i1*, i1** %39, align 8
  %i29 = load i32, i32* %i21, align 4
  %element_address30 = getelementptr i1, i1* %40, i32 %i29
  %element31 = load i1, i1* %element_address30, align 1
  br i1 %element31, label %cond_jump_then32, label %cond_end33

cond_end_block27:                                 ; preds = %loop_top_block22
  %self45 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %41 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self45, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8**, i8*** %41, align 8
  %44 = bitcast i8** %43 to i8*
  call void @xfree(i8* %44)
  %self46 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %45 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self46, i32 0, i32 1
  %46 = load i1*, i1** %45, align 8
  %47 = load i1*, i1** %45, align 8
  %48 = ptrtoint i1* %47 to i64
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %cond_then_block47, label %cond_end48

cond_jump_then32:                                 ; preds = %cond_then_block26
  br i1 true, label %cond_jump_then34, label %cond_end35

cond_end33:                                       ; preds = %cond_end35, %cond_then_block26
  %i42 = load i32, i32* %i21, align 4
  %addtmp43 = add nsw i32 %i42, 1
  store i32 %addtmp43, i32* %i21, align 4
  %subttmp44 = sub nsw i32 %addtmp43, 1
  br label %loop_top_block22

cond_jump_then34:                                 ; preds = %cond_jump_then32
  %50 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %51 = bitcast i8* %50 to %map__charp_sCLFieldp**
  %self36 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %51, align 8
  %52 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self36, i32 0, i32 0
  %53 = load i8**, i8*** %52, align 8
  %54 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %55 = bitcast i8* %54 to i32*
  %i37 = load i32, i32* %55, align 4
  %element_address38 = getelementptr i8*, i8** %53, i32 %i37
  %element39 = load i8*, i8** %element_address38, align 8
  %56 = load i8*, i8** %element_address38, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %cond_then_block40, label %cond_end41

cond_end35:                                       ; preds = %cond_end41, %cond_jump_then32
  br label %cond_end33

cond_then_block40:                                ; preds = %cond_jump_then34
  br label %cond_end41

cond_end41:                                       ; preds = %cond_then_block40, %cond_jump_then34
  call void @xfree(i8* %56)
  br label %cond_end35

cond_then_block47:                                ; preds = %cond_end_block27
  br label %cond_end48

cond_end48:                                       ; preds = %cond_then_block47, %cond_end_block27
  %59 = bitcast i1* %47 to i8*
  call void @xfree(i8* %59)
  %60 = bitcast [8192 x i8*]* %lvtable to i8*
  %61 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %60, i64 65536)
  ret void
}

define void @"map_finalize_charp_lambdap48_src/class"(%map__charp_lambdap* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_lambdap*
  store %map__charp_lambdap* %self, %map__charp_lambdap** %self1, align 8
  %2 = bitcast %map__charp_lambdap** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %self2 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %eqtmpX = icmp eq %map__charp_lambdap* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %7 = bitcast i8* %6 to %map__charp_lambdap**
  %self4 = load %map__charp_lambdap*, %map__charp_lambdap** %7, align 8
  %8 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %11 = bitcast i8* %10 to %map__charp_lambdap**
  %self5 = load %map__charp_lambdap*, %map__charp_lambdap** %11, align 8
  %12 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self18 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %14 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self18, i32 0, i32 2
  %15 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %14, align 8
  %16 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %14, align 8
  %17 = bitcast i1 (%CLVALUE**, %sVMInfo*)** %16 to i8*
  call void @xfree(i8* %17)
  %i19 = alloca i32
  %18 = bitcast i32* %i19 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  store i32 0, i32* %i19, align 4
  br label %loop_top_block20

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 false, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i17 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i17, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %20 = bitcast i8* %19 to %map__charp_lambdap**
  %self11 = load %map__charp_lambdap*, %map__charp_lambdap** %20, align 8
  %21 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self11, i32 0, i32 2
  %22 = load i1 (%CLVALUE**, %sVMInfo*)**, i1 (%CLVALUE**, %sVMInfo*)*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %22, i32 %i12
  %element14 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address13, align 8
  %25 = load i1 (%CLVALUE**, %sVMInfo*)*, i1 (%CLVALUE**, %sVMInfo*)** %element_address13, align 8
  %26 = ptrtoint i1 (%CLVALUE**, %sVMInfo*)* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  br label %cond_end16

cond_end16:                                       ; preds = %cond_then_block15, %cond_jump_then9
  %28 = bitcast i1 (%CLVALUE**, %sVMInfo*)* %25 to i8*
  call void @xfree(i8* %28)
  br label %cond_end10

loop_top_block20:                                 ; preds = %cond_end31, %cond_end_block
  %i21 = load i32, i32* %i19, align 4
  %29 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %30 = bitcast i8* %29 to %map__charp_lambdap**
  %self22 = load %map__charp_lambdap*, %map__charp_lambdap** %30, align 8
  %31 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self22, i32 0, i32 3
  %32 = load i32, i32* %31, align 4
  %letmp23 = icmp slt i32 %i21, %32
  br i1 %letmp23, label %cond_then_block24, label %cond_end_block25

cond_then_block24:                                ; preds = %loop_top_block20
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %34 = bitcast i8* %33 to %map__charp_lambdap**
  %self26 = load %map__charp_lambdap*, %map__charp_lambdap** %34, align 8
  %35 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self26, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %i27 = load i32, i32* %i19, align 4
  %element_address28 = getelementptr i1, i1* %36, i32 %i27
  %element29 = load i1, i1* %element_address28, align 1
  br i1 %element29, label %cond_jump_then30, label %cond_end31

cond_end_block25:                                 ; preds = %loop_top_block20
  %self43 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %37 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self43, i32 0, i32 0
  %38 = load i8**, i8*** %37, align 8
  %39 = load i8**, i8*** %37, align 8
  %40 = bitcast i8** %39 to i8*
  call void @xfree(i8* %40)
  %self44 = load %map__charp_lambdap*, %map__charp_lambdap** %self1, align 8
  %41 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self44, i32 0, i32 1
  %42 = load i1*, i1** %41, align 8
  %43 = load i1*, i1** %41, align 8
  %44 = ptrtoint i1* %43 to i64
  %45 = icmp ne i64 %44, 0
  br i1 %45, label %cond_then_block45, label %cond_end46

cond_jump_then30:                                 ; preds = %cond_then_block24
  br i1 true, label %cond_jump_then32, label %cond_end33

cond_end31:                                       ; preds = %cond_end33, %cond_then_block24
  %i40 = load i32, i32* %i19, align 4
  %addtmp41 = add nsw i32 %i40, 1
  store i32 %addtmp41, i32* %i19, align 4
  %subttmp42 = sub nsw i32 %addtmp41, 1
  br label %loop_top_block20

cond_jump_then32:                                 ; preds = %cond_jump_then30
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %47 = bitcast i8* %46 to %map__charp_lambdap**
  %self34 = load %map__charp_lambdap*, %map__charp_lambdap** %47, align 8
  %48 = getelementptr inbounds %map__charp_lambdap, %map__charp_lambdap* %self34, i32 0, i32 0
  %49 = load i8**, i8*** %48, align 8
  %50 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %51 = bitcast i8* %50 to i32*
  %i35 = load i32, i32* %51, align 4
  %element_address36 = getelementptr i8*, i8** %49, i32 %i35
  %element37 = load i8*, i8** %element_address36, align 8
  %52 = load i8*, i8** %element_address36, align 8
  %53 = ptrtoint i8* %52 to i64
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %cond_then_block38, label %cond_end39

cond_end33:                                       ; preds = %cond_end39, %cond_jump_then30
  br label %cond_end31

cond_then_block38:                                ; preds = %cond_jump_then32
  br label %cond_end39

cond_end39:                                       ; preds = %cond_then_block38, %cond_jump_then32
  call void @xfree(i8* %52)
  br label %cond_end33

cond_then_block45:                                ; preds = %cond_end_block25
  br label %cond_end46

cond_end46:                                       ; preds = %cond_then_block45, %cond_end_block25
  %55 = bitcast i1* %43 to i8*
  call void @xfree(i8* %55)
  %56 = bitcast [8192 x i8*]* %lvtable to i8*
  %57 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %56, i64 65536)
  ret void
}

define %map__charp_sCLMethodp* @"map_initialize_charp_sCLMethodp49_src/class"(%map__charp_sCLMethodp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLMethodp*
  store %map__charp_sCLMethodp* %self, %map__charp_sCLMethodp** %self1, align 8
  %2 = bitcast %map__charp_sCLMethodp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self2 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %3 = call i8* @debug_xcalloc(i64 128, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.307, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.308, i32 0, i32 0), i32 2007, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_string.309, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @global_string.310, i32 0, i32 0))
  %4 = bitcast i8* %3 to i8**
  %5 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self2, i32 0, i32 0
  store i8** %4, i8*** %5, align 8
  %self3 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %6 = call i8* @debug_xcalloc(i64 128, i64 8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_string.311, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.312, i32 0, i32 0), i32 2008, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_string.313, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @global_string.314, i32 0, i32 0))
  %7 = bitcast i8* %6 to %sCLMethod**
  %8 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self3, i32 0, i32 2
  store %sCLMethod** %7, %sCLMethod*** %8, align 8
  %self4 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %9 = call i8* @debug_xcalloc(i64 128, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.315, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.316, i32 0, i32 0), i32 2009, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_string.317, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @global_string.318, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1*
  %11 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self4, i32 0, i32 1
  store i1* %10, i1** %11, align 8
  %i = alloca i32
  %12 = bitcast i32* %i to i8*
  store i8* %12, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_then_block, %entry
  %i5 = load i32, i32* %i, align 4
  %letmp = icmp slt i32 %i5, 128
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %13 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %14 = bitcast i8* %13 to %map__charp_sCLMethodp**
  %self6 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %14, align 8
  %15 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self6, i32 0, i32 1
  %16 = load i1*, i1** %15, align 8
  %i7 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %16, i32 %i7
  store i1 false, i1* %element_address, align 1
  %i8 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i8, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_end_block:                                   ; preds = %loop_top_block
  %self9 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %17 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self9, i32 0, i32 3
  store i32 128, i32* %17, align 4
  %self10 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %18 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self10, i32 0, i32 4
  store i32 0, i32* %18, align 4
  %self11 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %19 = bitcast [8192 x i8*]* %lvtable to i8*
  %20 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %19, i64 65536)
  ret %map__charp_sCLMethodp* %self11
}

define void @"map_finalize_charp_sCLMethodp50_src/class"(%map__charp_sCLMethodp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLMethodp*
  store %map__charp_sCLMethodp* %self, %map__charp_sCLMethodp** %self1, align 8
  %2 = bitcast %map__charp_sCLMethodp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self2 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sCLMethodp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %7 = bitcast i8* %6 to %map__charp_sCLMethodp**
  %self4 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %11 = bitcast i8* %10 to %map__charp_sCLMethodp**
  %self5 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self22 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self22, i32 0, i32 2
  %15 = load %sCLMethod**, %sCLMethod*** %14, align 8
  %16 = load %sCLMethod**, %sCLMethod*** %14, align 8
  %17 = bitcast %sCLMethod** %16 to i8*
  call void @xfree(i8* %17)
  %i23 = alloca i32
  %18 = bitcast i32* %i23 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 0, i32* %i23, align 4
  br label %loop_top_block24

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 true, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i21 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i21, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %20 = bitcast i8* %19 to %map__charp_sCLMethodp**
  %self11 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self11, i32 0, i32 2
  %22 = load %sCLMethod**, %sCLMethod*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sCLMethod*, %sCLMethod** %22, i32 %i12
  %element14 = load %sCLMethod*, %sCLMethod** %element_address13, align 8
  %25 = load %sCLMethod*, %sCLMethod** %element_address13, align 8
  %26 = ptrtoint %sCLMethod* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sCLMethod, %sCLMethod* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end20, %cond_jump_then9
  %32 = bitcast %sCLMethod* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  %33 = getelementptr inbounds %sCLMethod, %sCLMethod* %25, i32 0, i32 4
  %34 = load %buffer*, %buffer** %33, align 8
  call void @buffer_finalize(%buffer* %34)
  %35 = ptrtoint %buffer* %34 to i64
  %36 = icmp ne i64 %35, 0
  br i1 %36, label %cond_then_block19, label %cond_end20

cond_then_block19:                                ; preds = %cond_end18
  br label %cond_end20

cond_end20:                                       ; preds = %cond_then_block19, %cond_end18
  %37 = bitcast %buffer* %34 to i8*
  call void @xfree(i8* %37)
  br label %cond_end16

loop_top_block24:                                 ; preds = %cond_end35, %cond_end_block
  %i25 = load i32, i32* %i23, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %39 = bitcast i8* %38 to %map__charp_sCLMethodp**
  %self26 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %39, align 8
  %40 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self26, i32 0, i32 3
  %41 = load i32, i32* %40, align 4
  %letmp27 = icmp slt i32 %i25, %41
  br i1 %letmp27, label %cond_then_block28, label %cond_end_block29

cond_then_block28:                                ; preds = %loop_top_block24
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %43 = bitcast i8* %42 to %map__charp_sCLMethodp**
  %self30 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %43, align 8
  %44 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self30, i32 0, i32 1
  %45 = load i1*, i1** %44, align 8
  %i31 = load i32, i32* %i23, align 4
  %element_address32 = getelementptr i1, i1* %45, i32 %i31
  %element33 = load i1, i1* %element_address32, align 1
  br i1 %element33, label %cond_jump_then34, label %cond_end35

cond_end_block29:                                 ; preds = %loop_top_block24
  %self47 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %46 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self47, i32 0, i32 0
  %47 = load i8**, i8*** %46, align 8
  %48 = load i8**, i8*** %46, align 8
  %49 = bitcast i8** %48 to i8*
  call void @xfree(i8* %49)
  %self48 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %50 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self48, i32 0, i32 1
  %51 = load i1*, i1** %50, align 8
  %52 = load i1*, i1** %50, align 8
  %53 = ptrtoint i1* %52 to i64
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %cond_then_block49, label %cond_end50

cond_jump_then34:                                 ; preds = %cond_then_block28
  br i1 true, label %cond_jump_then36, label %cond_end37

cond_end35:                                       ; preds = %cond_end37, %cond_then_block28
  %i44 = load i32, i32* %i23, align 4
  %addtmp45 = add nsw i32 %i44, 1
  store i32 %addtmp45, i32* %i23, align 4
  %subttmp46 = sub nsw i32 %addtmp45, 1
  br label %loop_top_block24

cond_jump_then36:                                 ; preds = %cond_jump_then34
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %56 = bitcast i8* %55 to %map__charp_sCLMethodp**
  %self38 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %56, align 8
  %57 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self38, i32 0, i32 0
  %58 = load i8**, i8*** %57, align 8
  %59 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %60 = bitcast i8* %59 to i32*
  %i39 = load i32, i32* %60, align 4
  %element_address40 = getelementptr i8*, i8** %58, i32 %i39
  %element41 = load i8*, i8** %element_address40, align 8
  %61 = load i8*, i8** %element_address40, align 8
  %62 = ptrtoint i8* %61 to i64
  %63 = icmp ne i64 %62, 0
  br i1 %63, label %cond_then_block42, label %cond_end43

cond_end37:                                       ; preds = %cond_end43, %cond_jump_then34
  br label %cond_end35

cond_then_block42:                                ; preds = %cond_jump_then36
  br label %cond_end43

cond_end43:                                       ; preds = %cond_then_block42, %cond_jump_then36
  call void @xfree(i8* %61)
  br label %cond_end37

cond_then_block49:                                ; preds = %cond_end_block29
  br label %cond_end50

cond_end50:                                       ; preds = %cond_then_block49, %cond_end_block29
  %64 = bitcast i1* %52 to i8*
  call void @xfree(i8* %64)
  %65 = bitcast [8192 x i8*]* %lvtable to i8*
  %66 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %65, i64 65536)
  ret void
}

define %map__charp_sCLFieldp* @"map_initialize_charp_sCLFieldp51_src/class"(%map__charp_sCLFieldp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLFieldp*
  store %map__charp_sCLFieldp* %self, %map__charp_sCLFieldp** %self1, align 8
  %2 = bitcast %map__charp_sCLFieldp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self2 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %3 = call i8* @debug_xcalloc(i64 128, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.323, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.324, i32 0, i32 0), i32 2007, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_string.325, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_string.326, i32 0, i32 0))
  %4 = bitcast i8* %3 to i8**
  %5 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self2, i32 0, i32 0
  store i8** %4, i8*** %5, align 8
  %self3 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %6 = call i8* @debug_xcalloc(i64 128, i64 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.327, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.328, i32 0, i32 0), i32 2008, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_string.329, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_string.330, i32 0, i32 0))
  %7 = bitcast i8* %6 to %sCLField**
  %8 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self3, i32 0, i32 2
  store %sCLField** %7, %sCLField*** %8, align 8
  %self4 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %9 = call i8* @debug_xcalloc(i64 128, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.331, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.332, i32 0, i32 0), i32 2009, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_string.333, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_string.334, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1*
  %11 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self4, i32 0, i32 1
  store i1* %10, i1** %11, align 8
  %i = alloca i32
  %12 = bitcast i32* %i to i8*
  store i8* %12, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_then_block, %entry
  %i5 = load i32, i32* %i, align 4
  %letmp = icmp slt i32 %i5, 128
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %13 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %14 = bitcast i8* %13 to %map__charp_sCLFieldp**
  %self6 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %14, align 8
  %15 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self6, i32 0, i32 1
  %16 = load i1*, i1** %15, align 8
  %i7 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %16, i32 %i7
  store i1 false, i1* %element_address, align 1
  %i8 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i8, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_end_block:                                   ; preds = %loop_top_block
  %self9 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %17 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self9, i32 0, i32 3
  store i32 128, i32* %17, align 4
  %self10 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %18 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self10, i32 0, i32 4
  store i32 0, i32* %18, align 4
  %self11 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %19 = bitcast [8192 x i8*]* %lvtable to i8*
  %20 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %19, i64 65536)
  ret %map__charp_sCLFieldp* %self11
}

define void @"map_finalize_charp_sCLFieldp52_src/class"(%map__charp_sCLFieldp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLFieldp*
  store %map__charp_sCLFieldp* %self, %map__charp_sCLFieldp** %self1, align 8
  %2 = bitcast %map__charp_sCLFieldp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self2 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sCLFieldp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %7 = bitcast i8* %6 to %map__charp_sCLFieldp**
  %self4 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %11 = bitcast i8* %10 to %map__charp_sCLFieldp**
  %self5 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self20 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self20, i32 0, i32 2
  %15 = load %sCLField**, %sCLField*** %14, align 8
  %16 = load %sCLField**, %sCLField*** %14, align 8
  %17 = bitcast %sCLField** %16 to i8*
  call void @xfree(i8* %17)
  %i21 = alloca i32
  %18 = bitcast i32* %i21 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 0, i32* %i21, align 4
  br label %loop_top_block22

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 true, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i19 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i19, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %20 = bitcast i8* %19 to %map__charp_sCLFieldp**
  %self11 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self11, i32 0, i32 2
  %22 = load %sCLField**, %sCLField*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sCLField*, %sCLField** %22, i32 %i12
  %element14 = load %sCLField*, %sCLField** %element_address13, align 8
  %25 = load %sCLField*, %sCLField** %element_address13, align 8
  %26 = ptrtoint %sCLField* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sCLField, %sCLField* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end18, %cond_jump_then9
  %32 = bitcast %sCLField* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  br label %cond_end16

loop_top_block22:                                 ; preds = %cond_end33, %cond_end_block
  %i23 = load i32, i32* %i21, align 4
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %34 = bitcast i8* %33 to %map__charp_sCLFieldp**
  %self24 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self24, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %letmp25 = icmp slt i32 %i23, %36
  br i1 %letmp25, label %cond_then_block26, label %cond_end_block27

cond_then_block26:                                ; preds = %loop_top_block22
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %38 = bitcast i8* %37 to %map__charp_sCLFieldp**
  %self28 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %38, align 8
  %39 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self28, i32 0, i32 1
  %40 = load i1*, i1** %39, align 8
  %i29 = load i32, i32* %i21, align 4
  %element_address30 = getelementptr i1, i1* %40, i32 %i29
  %element31 = load i1, i1* %element_address30, align 1
  br i1 %element31, label %cond_jump_then32, label %cond_end33

cond_end_block27:                                 ; preds = %loop_top_block22
  %self45 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %41 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self45, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8**, i8*** %41, align 8
  %44 = bitcast i8** %43 to i8*
  call void @xfree(i8* %44)
  %self46 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %45 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self46, i32 0, i32 1
  %46 = load i1*, i1** %45, align 8
  %47 = load i1*, i1** %45, align 8
  %48 = ptrtoint i1* %47 to i64
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %cond_then_block47, label %cond_end48

cond_jump_then32:                                 ; preds = %cond_then_block26
  br i1 true, label %cond_jump_then34, label %cond_end35

cond_end33:                                       ; preds = %cond_end35, %cond_then_block26
  %i42 = load i32, i32* %i21, align 4
  %addtmp43 = add nsw i32 %i42, 1
  store i32 %addtmp43, i32* %i21, align 4
  %subttmp44 = sub nsw i32 %addtmp43, 1
  br label %loop_top_block22

cond_jump_then34:                                 ; preds = %cond_jump_then32
  %50 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %51 = bitcast i8* %50 to %map__charp_sCLFieldp**
  %self36 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %51, align 8
  %52 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self36, i32 0, i32 0
  %53 = load i8**, i8*** %52, align 8
  %54 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %55 = bitcast i8* %54 to i32*
  %i37 = load i32, i32* %55, align 4
  %element_address38 = getelementptr i8*, i8** %53, i32 %i37
  %element39 = load i8*, i8** %element_address38, align 8
  %56 = load i8*, i8** %element_address38, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %cond_then_block40, label %cond_end41

cond_end35:                                       ; preds = %cond_end41, %cond_jump_then32
  br label %cond_end33

cond_then_block40:                                ; preds = %cond_jump_then34
  br label %cond_end41

cond_end41:                                       ; preds = %cond_then_block40, %cond_jump_then34
  call void @xfree(i8* %56)
  br label %cond_end35

cond_then_block47:                                ; preds = %cond_end_block27
  br label %cond_end48

cond_end48:                                       ; preds = %cond_then_block47, %cond_end_block27
  %59 = bitcast i1* %47 to i8*
  call void @xfree(i8* %59)
  %60 = bitcast [8192 x i8*]* %lvtable to i8*
  %61 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %60, i64 65536)
  ret void
}

define %map__charp_sCLFieldp* @"map_initialize_charp_sCLFieldp53_src/class"(%map__charp_sCLFieldp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLFieldp*
  store %map__charp_sCLFieldp* %self, %map__charp_sCLFieldp** %self1, align 8
  %2 = bitcast %map__charp_sCLFieldp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self2 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %3 = call i8* @debug_xcalloc(i64 128, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.339, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.340, i32 0, i32 0), i32 2007, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_string.341, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_string.342, i32 0, i32 0))
  %4 = bitcast i8* %3 to i8**
  %5 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self2, i32 0, i32 0
  store i8** %4, i8*** %5, align 8
  %self3 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %6 = call i8* @debug_xcalloc(i64 128, i64 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.343, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.344, i32 0, i32 0), i32 2008, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_string.345, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_string.346, i32 0, i32 0))
  %7 = bitcast i8* %6 to %sCLField**
  %8 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self3, i32 0, i32 2
  store %sCLField** %7, %sCLField*** %8, align 8
  %self4 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %9 = call i8* @debug_xcalloc(i64 128, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.347, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.348, i32 0, i32 0), i32 2009, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_string.349, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_string.350, i32 0, i32 0))
  %10 = bitcast i8* %9 to i1*
  %11 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self4, i32 0, i32 1
  store i1* %10, i1** %11, align 8
  %i = alloca i32
  %12 = bitcast i32* %i to i8*
  store i8* %12, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_then_block, %entry
  %i5 = load i32, i32* %i, align 4
  %letmp = icmp slt i32 %i5, 128
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %13 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %14 = bitcast i8* %13 to %map__charp_sCLFieldp**
  %self6 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %14, align 8
  %15 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self6, i32 0, i32 1
  %16 = load i1*, i1** %15, align 8
  %i7 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %16, i32 %i7
  store i1 false, i1* %element_address, align 1
  %i8 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i8, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_end_block:                                   ; preds = %loop_top_block
  %self9 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %17 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self9, i32 0, i32 3
  store i32 128, i32* %17, align 4
  %self10 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %18 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self10, i32 0, i32 4
  store i32 0, i32* %18, align 4
  %self11 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %19 = bitcast [8192 x i8*]* %lvtable to i8*
  %20 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %19, i64 65536)
  ret %map__charp_sCLFieldp* %self11
}

define void @"map_finalize_charp_sCLFieldp54_src/class"(%map__charp_sCLFieldp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLFieldp*
  store %map__charp_sCLFieldp* %self, %map__charp_sCLFieldp** %self1, align 8
  %2 = bitcast %map__charp_sCLFieldp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %self2 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sCLFieldp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %7 = bitcast i8* %6 to %map__charp_sCLFieldp**
  %self4 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %11 = bitcast i8* %10 to %map__charp_sCLFieldp**
  %self5 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self20 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self20, i32 0, i32 2
  %15 = load %sCLField**, %sCLField*** %14, align 8
  %16 = load %sCLField**, %sCLField*** %14, align 8
  %17 = bitcast %sCLField** %16 to i8*
  call void @xfree(i8* %17)
  %i21 = alloca i32
  %18 = bitcast i32* %i21 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store i32 0, i32* %i21, align 4
  br label %loop_top_block22

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 true, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i19 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i19, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %20 = bitcast i8* %19 to %map__charp_sCLFieldp**
  %self11 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self11, i32 0, i32 2
  %22 = load %sCLField**, %sCLField*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sCLField*, %sCLField** %22, i32 %i12
  %element14 = load %sCLField*, %sCLField** %element_address13, align 8
  %25 = load %sCLField*, %sCLField** %element_address13, align 8
  %26 = ptrtoint %sCLField* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sCLField, %sCLField* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end18, %cond_jump_then9
  %32 = bitcast %sCLField* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  br label %cond_end16

loop_top_block22:                                 ; preds = %cond_end33, %cond_end_block
  %i23 = load i32, i32* %i21, align 4
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %34 = bitcast i8* %33 to %map__charp_sCLFieldp**
  %self24 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self24, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %letmp25 = icmp slt i32 %i23, %36
  br i1 %letmp25, label %cond_then_block26, label %cond_end_block27

cond_then_block26:                                ; preds = %loop_top_block22
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %38 = bitcast i8* %37 to %map__charp_sCLFieldp**
  %self28 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %38, align 8
  %39 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self28, i32 0, i32 1
  %40 = load i1*, i1** %39, align 8
  %i29 = load i32, i32* %i21, align 4
  %element_address30 = getelementptr i1, i1* %40, i32 %i29
  %element31 = load i1, i1* %element_address30, align 1
  br i1 %element31, label %cond_jump_then32, label %cond_end33

cond_end_block27:                                 ; preds = %loop_top_block22
  %self45 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %41 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self45, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8**, i8*** %41, align 8
  %44 = bitcast i8** %43 to i8*
  call void @xfree(i8* %44)
  %self46 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %45 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self46, i32 0, i32 1
  %46 = load i1*, i1** %45, align 8
  %47 = load i1*, i1** %45, align 8
  %48 = ptrtoint i1* %47 to i64
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %cond_then_block47, label %cond_end48

cond_jump_then32:                                 ; preds = %cond_then_block26
  br i1 true, label %cond_jump_then34, label %cond_end35

cond_end33:                                       ; preds = %cond_end35, %cond_then_block26
  %i42 = load i32, i32* %i21, align 4
  %addtmp43 = add nsw i32 %i42, 1
  store i32 %addtmp43, i32* %i21, align 4
  %subttmp44 = sub nsw i32 %addtmp43, 1
  br label %loop_top_block22

cond_jump_then34:                                 ; preds = %cond_jump_then32
  %50 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %51 = bitcast i8* %50 to %map__charp_sCLFieldp**
  %self36 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %51, align 8
  %52 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self36, i32 0, i32 0
  %53 = load i8**, i8*** %52, align 8
  %54 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %55 = bitcast i8* %54 to i32*
  %i37 = load i32, i32* %55, align 4
  %element_address38 = getelementptr i8*, i8** %53, i32 %i37
  %element39 = load i8*, i8** %element_address38, align 8
  %56 = load i8*, i8** %element_address38, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %cond_then_block40, label %cond_end41

cond_end35:                                       ; preds = %cond_end41, %cond_jump_then32
  br label %cond_end33

cond_then_block40:                                ; preds = %cond_jump_then34
  br label %cond_end41

cond_end41:                                       ; preds = %cond_then_block40, %cond_jump_then34
  call void @xfree(i8* %56)
  br label %cond_end35

cond_then_block47:                                ; preds = %cond_end_block27
  br label %cond_end48

cond_end48:                                       ; preds = %cond_then_block47, %cond_end_block27
  %59 = bitcast i1* %47 to i8*
  call void @xfree(i8* %59)
  %60 = bitcast [8192 x i8*]* %lvtable to i8*
  %61 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %60, i64 65536)
  ret void
}

define void @"map_insert_charp_sCLClassp55_src/class"(%map__charp_sCLClassp* %self, i8* %key, %sCLClass* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLClassp*
  store %map__charp_sCLClassp* %self, %map__charp_sCLClassp** %self1, align 8
  %2 = bitcast %map__charp_sCLClassp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %item3 = alloca %sCLClass*
  store %sCLClass* %item, %sCLClass** %item3, align 8
  %4 = bitcast %sCLClass** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %self4 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %5 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %7 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %10 = bitcast i8* %9 to %map__charp_sCLClassp**
  %self6 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %10, align 8
  call void @"map_rehash_charp_sCLClassp56_src/class"(%map__charp_sCLClassp* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %12 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %17 = bitcast i8* %16 to %map__charp_sCLClassp**
  %self10 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %17, align 8
  %18 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %25 = bitcast i8* %24 to %map__charp_sCLClassp**
  %self14 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %25, align 8
  %26 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %34 = bitcast i8* %33 to %map__charp_sCLClassp**
  %self33 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %40 = bitcast i8* %39 to %map__charp_sCLClassp**
  %self36 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %40, align 8
  %41 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %48 = bitcast i8* %47 to %map__charp_sCLClassp**
  %self40 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %48, align 8
  %49 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self40, i32 0, i32 2
  %50 = load %sCLClass**, %sCLClass*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %54 = bitcast i8* %53 to %sCLClass**
  %item42 = load %sCLClass*, %sCLClass** %54, align 8
  %element_address43 = getelementptr %sCLClass*, %sCLClass** %50, i32 %it41
  store %sCLClass* %item42, %sCLClass** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %56 = bitcast i8* %55 to %map__charp_sCLClassp**
  %self44 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %58 = bitcast i8* %57 to %map__charp_sCLClassp**
  %self45 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %58, align 8
  %59 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %63 = bitcast i8* %62 to %map__charp_sCLClassp**
  %self21 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %63, align 8
  %64 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self21, i32 0, i32 2
  %65 = load %sCLClass**, %sCLClass*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %69 = bitcast i8* %68 to %sCLClass**
  %item23 = load %sCLClass*, %sCLClass** %69, align 8
  %element_address24 = getelementptr %sCLClass*, %sCLClass** %65, i32 %it22
  store %sCLClass* %item23, %sCLClass** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %77 = bitcast i8* %76 to %map__charp_sCLClassp**
  %self27 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %77, align 8
  %78 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.365, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_sCLClassp56_src/class"(%map__charp_sCLClassp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLClassp*
  store %map__charp_sCLClassp* %self, %map__charp_sCLClassp** %self1, align 8
  %2 = bitcast %map__charp_sCLClassp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %self2 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %3 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.351, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.352, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_string.353, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_string.354, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.355, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.356, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_string.357, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_string.358, i32 0, i32 0))
  %10 = bitcast i8* %9 to %sCLClass**
  %items = alloca %sCLClass**
  %11 = bitcast %sCLClass*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store %sCLClass** %10, %sCLClass*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.359, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.360, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_string.361, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_string.362, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  call void @"map_each_charp_sCLClassp57_src/class"(%map__charp_sCLClassp* %self8, void (i8*, %sCLClass*, i1*)* @class_lambda13)
  %self9 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %16 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self9, i32 0, i32 2
  %17 = load %sCLClass**, %sCLClass*** %16, align 8
  %18 = load %sCLClass**, %sCLClass*** %16, align 8
  %19 = bitcast %sCLClass** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %20 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %26 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %items15 = load %sCLClass**, %sCLClass*** %items, align 8
  %31 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self14, i32 0, i32 2
  store %sCLClass** %items15, %sCLClass*** %31, align 8
  %self16 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda13(i8* %it, %sCLClass* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %it22 = alloca %sCLClass*
  store %sCLClass* %it2, %sCLClass** %it22, align 8
  %3 = bitcast %sCLClass** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %35 = bitcast i8* %34 to %sCLClass***
  %items = load %sCLClass**, %sCLClass*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %39 = bitcast i8* %38 to %sCLClass**
  %it221 = load %sCLClass*, %sCLClass** %39, align 8
  %element_address22 = getelementptr %sCLClass*, %sCLClass** %items, i32 %n20
  store %sCLClass* %it221, %sCLClass** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.364, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_sCLClassp57_src/class"(%map__charp_sCLClassp* %self, void (i8*, %sCLClass*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLClassp*
  store %map__charp_sCLClassp* %self, %map__charp_sCLClassp** %self1, align 8
  %2 = bitcast %map__charp_sCLClassp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %block_2 = alloca void (i8*, %sCLClass*, i1*)*
  store void (i8*, %sCLClass*, i1*)* %block_, void (i8*, %sCLClass*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, %sCLClass*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %6 = bitcast i8* %5 to %map__charp_sCLClassp**
  %self4 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %6, align 8
  %7 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %10 = bitcast i8* %9 to %map__charp_sCLClassp**
  %self5 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %10, align 8
  %11 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %17 = bitcast i8* %16 to void (i8*, %sCLClass*, i1*)**
  %block_7 = load void (i8*, %sCLClass*, i1*)*, void (i8*, %sCLClass*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %19 = bitcast i8* %18 to %map__charp_sCLClassp**
  %self8 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %19, align 8
  %20 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %25 = bitcast i8* %24 to %map__charp_sCLClassp**
  %self12 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %25, align 8
  %26 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self12, i32 0, i32 2
  %27 = load %sCLClass**, %sCLClass*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr %sCLClass*, %sCLClass** %27, i32 %i_13
  %element15 = load %sCLClass*, %sCLClass** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, %sCLClass* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define %sCLClass* @"map_at_charp_sCLClassp58_src/class"(%map__charp_sCLClassp* %self, i8* %key, %sCLClass* %default_value) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLClassp*
  store %map__charp_sCLClassp* %self, %map__charp_sCLClassp** %self1, align 8
  %2 = bitcast %map__charp_sCLClassp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %default_value3 = alloca %sCLClass*
  store %sCLClass* %default_value, %sCLClass** %default_value3, align 8
  %4 = bitcast %sCLClass** %default_value3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %key4 = load i8*, i8** %key2, align 8
  %5 = call i32 @string_get_hash_key(i8* %key4)
  %self5 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %6 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self5, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  %remtmp = srem i32 %5, %7
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash6 = load i32, i32* %hash, align 4
  %it = alloca i32
  %9 = bitcast i32* %it to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  store i32 %hash6, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %11 = bitcast i8* %10 to %map__charp_sCLClassp**
  %self7 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self7, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %14 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %15 = bitcast i8* %14 to i32*
  %it8 = load i32, i32* %15, align 4
  %element_address = getelementptr i1, i1* %13, i32 %it8
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %default_value29 = load %sCLClass*, %sCLClass** %default_value3, align 8
  %16 = bitcast [8192 x i8*]* %lvtable to i8*
  %17 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %16, i64 65536)
  ret %sCLClass* %default_value29

cond_jump_then:                                   ; preds = %cond_then_block
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %19 = bitcast i8* %18 to %map__charp_sCLClassp**
  %self9 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %19, align 8
  %20 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self9, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %23 = bitcast i8* %22 to i32*
  %it10 = load i32, i32* %23, align 4
  %element_address11 = getelementptr i8*, i8** %21, i32 %it10
  %element12 = load i8*, i8** %element_address11, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %25 = bitcast i8* %24 to i8**
  %key13 = load i8*, i8** %25, align 8
  %26 = call i1 @string_equals(i8* %element12, i8* %key13)
  br i1 %26, label %cond_jump_then14, label %cond_end15

cond_else_block:                                  ; preds = %cond_then_block
  %27 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %28 = bitcast i8* %27 to %sCLClass**
  %default_value28 = load %sCLClass*, %sCLClass** %28, align 8
  %29 = bitcast [8192 x i8*]* %lvtable to i8*
  %30 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %29, i64 65536)
  ret %sCLClass* %default_value28

cond_end:                                         ; preds = %cond_end24
  br label %loop_top_block

cond_jump_then14:                                 ; preds = %cond_jump_then
  %31 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %32 = bitcast i8* %31 to %map__charp_sCLClassp**
  %self16 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %32, align 8
  %33 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self16, i32 0, i32 2
  %34 = load %sCLClass**, %sCLClass*** %33, align 8
  %35 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %36 = bitcast i8* %35 to i32*
  %it17 = load i32, i32* %36, align 4
  %element_address18 = getelementptr %sCLClass*, %sCLClass** %34, i32 %it17
  %element19 = load %sCLClass*, %sCLClass** %element_address18, align 8
  %37 = bitcast [8192 x i8*]* %lvtable to i8*
  %38 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %37, i64 65536)
  ret %sCLClass* %element19

cond_end15:                                       ; preds = %cond_jump_then
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %40 = bitcast i8* %39 to i32*
  %it20 = load i32, i32* %40, align 4
  %addtmp = add nsw i32 %it20, 1
  %41 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %42 = bitcast i8* %41 to i32*
  store i32 %addtmp, i32* %42, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %44 = bitcast i8* %43 to i32*
  %it21 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %46 = bitcast i8* %45 to %map__charp_sCLClassp**
  %self22 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %46, align 8
  %47 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self22, i32 0, i32 3
  %48 = load i32, i32* %47, align 4
  %getmp = icmp sge i32 %it21, %48
  br i1 %getmp, label %cond_jump_then23, label %"cond_jump_elif0\0A"

cond_jump_then23:                                 ; preds = %cond_end15
  %49 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 4
  br label %cond_end24

"cond_jump_elif0\0A":                             ; preds = %cond_end15
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %52 = bitcast i8* %51 to i32*
  %it25 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %54 = bitcast i8* %53 to i32*
  %hash26 = load i32, i32* %54, align 4
  %eqtmpX = icmp eq i32 %it25, %hash26
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end24

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %56 = bitcast i8* %55 to %sCLClass**
  %default_value27 = load %sCLClass*, %sCLClass** %56, align 8
  %57 = bitcast [8192 x i8*]* %lvtable to i8*
  %58 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %57, i64 65536)
  ret %sCLClass* %default_value27

cond_end24:                                       ; preds = %"cond_jump_elif0\0A", %cond_jump_then23
  br label %cond_end
}

define void @append_field(%sCLClass* %klass, i8* %field_name, %sCLType* %field_type) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %klass1 = alloca %sCLClass*
  store %sCLClass* %klass, %sCLClass** %klass1, align 8
  %2 = bitcast %sCLClass** %klass1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %field_name2 = alloca i8*
  store i8* %field_name, i8** %field_name2, align 8
  %3 = bitcast i8** %field_name2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %field_type3 = alloca %sCLType*
  store %sCLType* %field_type, %sCLType** %field_type3, align 8
  %4 = bitcast %sCLType** %field_type3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %5 = call i8* @debug_xcalloc(i64 1, i64 24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_string.368, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.369, i32 0, i32 0), i32 344, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.370, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.371, i32 0, i32 0))
  %6 = bitcast i8* %5 to %sCLField*
  %field = alloca %sCLField*
  %7 = bitcast %sCLField** %field to i8*
  store i8* %7, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  store %sCLField* %6, %sCLField** %field, align 8
  %field4 = load %sCLField*, %sCLField** %field, align 8
  %field_name5 = load i8*, i8** %field_name2, align 8
  %8 = call i8* @string(i8* %field_name5)
  %9 = getelementptr inbounds %sCLField, %sCLField* %field4, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = ptrtoint i8* %10 to i64
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  call void @xfree(i8* %10)
  store i8* %8, i8** %9, align 8
  %field6 = load %sCLField*, %sCLField** %field, align 8
  %field_type7 = load %sCLType*, %sCLType** %field_type3, align 8
  %13 = getelementptr inbounds %sCLField, %sCLField* %field6, i32 0, i32 1
  store %sCLType* %field_type7, %sCLType** %13, align 8
  %field8 = load %sCLField*, %sCLField** %field, align 8
  %klass9 = load %sCLClass*, %sCLClass** %klass1, align 8
  %14 = getelementptr inbounds %sCLClass, %sCLClass* %klass9, i32 0, i32 2
  %15 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %14, align 8
  %16 = call i32 @"map_length_charp_sCLFieldp59_src/class"(%map__charp_sCLFieldp* %15)
  %17 = getelementptr inbounds %sCLField, %sCLField* %field8, i32 0, i32 3
  store i32 %16, i32* %17, align 4
  %klass10 = load %sCLClass*, %sCLClass** %klass1, align 8
  %18 = getelementptr inbounds %sCLClass, %sCLClass* %klass10, i32 0, i32 2
  %19 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %18, align 8
  %field_name11 = load i8*, i8** %field_name2, align 8
  %20 = call i8* @string(i8* %field_name11)
  %field12 = load %sCLField*, %sCLField** %field, align 8
  call void @"map_insert_charp_sCLFieldp60_src/class"(%map__charp_sCLFieldp* %19, i8* %20, %sCLField* %field12)
  %21 = bitcast [8192 x i8*]* %lvtable to i8*
  %22 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %21, i64 65536)
  ret void
}

define i32 @"map_length_charp_sCLFieldp59_src/class"(%map__charp_sCLFieldp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLFieldp*
  store %map__charp_sCLFieldp* %self, %map__charp_sCLFieldp** %self1, align 8
  %2 = bitcast %map__charp_sCLFieldp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %self2 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %3 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self2, i32 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = bitcast [8192 x i8*]* %lvtable to i8*
  %6 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %5, i64 65536)
  ret i32 %4
}

define void @"map_insert_charp_sCLFieldp60_src/class"(%map__charp_sCLFieldp* %self, i8* %key, %sCLField* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLFieldp*
  store %map__charp_sCLFieldp* %self, %map__charp_sCLFieldp** %self1, align 8
  %2 = bitcast %map__charp_sCLFieldp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %item3 = alloca %sCLField*
  store %sCLField* %item, %sCLField** %item3, align 8
  %4 = bitcast %sCLField** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %self4 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %5 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %7 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %10 = bitcast i8* %9 to %map__charp_sCLFieldp**
  %self6 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %10, align 8
  call void @"map_rehash_charp_sCLFieldp61_src/class"(%map__charp_sCLFieldp* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %12 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %17 = bitcast i8* %16 to %map__charp_sCLFieldp**
  %self10 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %17, align 8
  %18 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %25 = bitcast i8* %24 to %map__charp_sCLFieldp**
  %self14 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %25, align 8
  %26 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %34 = bitcast i8* %33 to %map__charp_sCLFieldp**
  %self33 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %40 = bitcast i8* %39 to %map__charp_sCLFieldp**
  %self36 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %40, align 8
  %41 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %48 = bitcast i8* %47 to %map__charp_sCLFieldp**
  %self40 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %48, align 8
  %49 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self40, i32 0, i32 2
  %50 = load %sCLField**, %sCLField*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %54 = bitcast i8* %53 to %sCLField**
  %item42 = load %sCLField*, %sCLField** %54, align 8
  %element_address43 = getelementptr %sCLField*, %sCLField** %50, i32 %it41
  store %sCLField* %item42, %sCLField** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %56 = bitcast i8* %55 to %map__charp_sCLFieldp**
  %self44 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %58 = bitcast i8* %57 to %map__charp_sCLFieldp**
  %self45 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %58, align 8
  %59 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %63 = bitcast i8* %62 to %map__charp_sCLFieldp**
  %self21 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %63, align 8
  %64 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self21, i32 0, i32 2
  %65 = load %sCLField**, %sCLField*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %69 = bitcast i8* %68 to %sCLField**
  %item23 = load %sCLField*, %sCLField** %69, align 8
  %element_address24 = getelementptr %sCLField*, %sCLField** %65, i32 %it22
  store %sCLField* %item23, %sCLField** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %77 = bitcast i8* %76 to %map__charp_sCLFieldp**
  %self27 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %77, align 8
  %78 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.386, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_sCLFieldp61_src/class"(%map__charp_sCLFieldp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLFieldp*
  store %map__charp_sCLFieldp* %self, %map__charp_sCLFieldp** %self1, align 8
  %2 = bitcast %map__charp_sCLFieldp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %self2 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %3 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.372, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.373, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_string.374, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_string.375, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.376, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.377, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_string.378, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_string.379, i32 0, i32 0))
  %10 = bitcast i8* %9 to %sCLField**
  %items = alloca %sCLField**
  %11 = bitcast %sCLField*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  store %sCLField** %10, %sCLField*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.380, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.381, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_string.382, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_string.383, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  call void @"map_each_charp_sCLFieldp62_src/class"(%map__charp_sCLFieldp* %self8, void (i8*, %sCLField*, i1*)* @class_lambda14)
  %self9 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %16 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self9, i32 0, i32 2
  %17 = load %sCLField**, %sCLField*** %16, align 8
  %18 = load %sCLField**, %sCLField*** %16, align 8
  %19 = bitcast %sCLField** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %20 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %26 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %items15 = load %sCLField**, %sCLField*** %items, align 8
  %31 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self14, i32 0, i32 2
  store %sCLField** %items15, %sCLField*** %31, align 8
  %self16 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda14(i8* %it, %sCLField* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %it22 = alloca %sCLField*
  store %sCLField* %it2, %sCLField** %it22, align 8
  %3 = bitcast %sCLField** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %35 = bitcast i8* %34 to %sCLField***
  %items = load %sCLField**, %sCLField*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %39 = bitcast i8* %38 to %sCLField**
  %it221 = load %sCLField*, %sCLField** %39, align 8
  %element_address22 = getelementptr %sCLField*, %sCLField** %items, i32 %n20
  store %sCLField* %it221, %sCLField** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.385, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_sCLFieldp62_src/class"(%map__charp_sCLFieldp* %self, void (i8*, %sCLField*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLFieldp*
  store %map__charp_sCLFieldp* %self, %map__charp_sCLFieldp** %self1, align 8
  %2 = bitcast %map__charp_sCLFieldp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %block_2 = alloca void (i8*, %sCLField*, i1*)*
  store void (i8*, %sCLField*, i1*)* %block_, void (i8*, %sCLField*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, %sCLField*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %6 = bitcast i8* %5 to %map__charp_sCLFieldp**
  %self4 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %6, align 8
  %7 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %10 = bitcast i8* %9 to %map__charp_sCLFieldp**
  %self5 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %10, align 8
  %11 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %17 = bitcast i8* %16 to void (i8*, %sCLField*, i1*)**
  %block_7 = load void (i8*, %sCLField*, i1*)*, void (i8*, %sCLField*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %19 = bitcast i8* %18 to %map__charp_sCLFieldp**
  %self8 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %19, align 8
  %20 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %25 = bitcast i8* %24 to %map__charp_sCLFieldp**
  %self12 = load %map__charp_sCLFieldp*, %map__charp_sCLFieldp** %25, align 8
  %26 = getelementptr inbounds %map__charp_sCLFieldp, %map__charp_sCLFieldp* %self12, i32 0, i32 2
  %27 = load %sCLField**, %sCLField*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr %sCLField*, %sCLField** %27, i32 %i_13
  %element15 = load %sCLField*, %sCLField** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, %sCLField* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define void @append_method(%sCLClass* %klass, i8* %method_name, %sCLType* %method_type, i32 %num_params, %sCLParam* %params, i1 %native, %sCLNodeBlock* %node_block, i32 %method_max_var_num, %buffer* %codes) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %klass1 = alloca %sCLClass*
  store %sCLClass* %klass, %sCLClass** %klass1, align 8
  %2 = bitcast %sCLClass** %klass1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 431), align 8
  %method_name2 = alloca i8*
  store i8* %method_name, i8** %method_name2, align 8
  %3 = bitcast i8** %method_name2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 432), align 8
  %method_type3 = alloca %sCLType*
  store %sCLType* %method_type, %sCLType** %method_type3, align 8
  %4 = bitcast %sCLType** %method_type3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 433), align 8
  %num_params4 = alloca i32
  store i32 %num_params, i32* %num_params4, align 4
  %5 = bitcast i32* %num_params4 to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %params5 = alloca %sCLParam*
  store %sCLParam* %params, %sCLParam** %params5, align 8
  %6 = bitcast %sCLParam** %params5 to i8*
  store i8* %6, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %native6 = alloca i1
  store i1 %native, i1* %native6, align 1
  %7 = bitcast i1* %native6 to i8*
  store i8* %7, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 436), align 8
  %node_block7 = alloca %sCLNodeBlock*
  store %sCLNodeBlock* %node_block, %sCLNodeBlock** %node_block7, align 8
  %8 = bitcast %sCLNodeBlock** %node_block7 to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %method_max_var_num8 = alloca i32
  store i32 %method_max_var_num, i32* %method_max_var_num8, align 4
  %9 = bitcast i32* %method_max_var_num8 to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %codes9 = alloca %buffer*
  store %buffer* %codes, %buffer** %codes9, align 8
  %10 = bitcast %buffer** %codes9 to i8*
  store i8* %10, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %11 = call i8* @debug_xcalloc(i64 1, i64 4408, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_string.387, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_string.388, i32 0, i32 0), i32 355, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_string.389, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_string.390, i32 0, i32 0))
  %12 = bitcast i8* %11 to %sCLMethod*
  %method = alloca %sCLMethod*
  %13 = bitcast %sCLMethod** %method to i8*
  store i8* %13, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store %sCLMethod* %12, %sCLMethod** %method, align 8
  %method10 = load %sCLMethod*, %sCLMethod** %method, align 8
  %num_params11 = load i32, i32* %num_params4, align 4
  %14 = getelementptr inbounds %sCLMethod, %sCLMethod* %method10, i32 0, i32 2
  store i32 %num_params11, i32* %14, align 4
  %i = alloca i32
  %15 = bitcast i32* %i to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_then_block, %entry
  %i12 = load i32, i32* %i, align 4
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 434), align 8
  %17 = bitcast i8* %16 to i32*
  %num_params13 = load i32, i32* %17, align 4
  %letmp = icmp slt i32 %i12, %num_params13
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %19 = bitcast i8* %18 to %sCLMethod**
  %method14 = load %sCLMethod*, %sCLMethod** %19, align 8
  %20 = getelementptr inbounds %sCLMethod, %sCLMethod* %method14, i32 0, i32 1
  %21 = bitcast [32 x %sCLParam]* %20 to %sCLParam*
  %i15 = load i32, i32* %i, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 435), align 8
  %23 = bitcast i8* %22 to %sCLParam**
  %params16 = load %sCLParam*, %sCLParam** %23, align 8
  %i17 = load i32, i32* %i, align 4
  %element_address = getelementptr %sCLParam, %sCLParam* %params16, i32 %i17
  %element = load %sCLParam, %sCLParam* %element_address, align 8
  %element_address18 = getelementptr %sCLParam, %sCLParam* %21, i32 %i15
  store %sCLParam %element, %sCLParam* %element_address18, align 8
  %i19 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i19, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_end_block:                                   ; preds = %loop_top_block
  %method20 = load %sCLMethod*, %sCLMethod** %method, align 8
  %method_name21 = load i8*, i8** %method_name2, align 8
  %24 = call i8* @string(i8* %method_name21)
  %25 = getelementptr inbounds %sCLMethod, %sCLMethod* %method20, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = ptrtoint i8* %26 to i64
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %cond_then_block22, label %cond_end

cond_then_block22:                                ; preds = %cond_end_block
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block22, %cond_end_block
  call void @xfree(i8* %26)
  store i8* %24, i8** %25, align 8
  %method23 = load %sCLMethod*, %sCLMethod** %method, align 8
  %method_type24 = load %sCLType*, %sCLType** %method_type3, align 8
  %29 = getelementptr inbounds %sCLMethod, %sCLMethod* %method23, i32 0, i32 3
  store %sCLType* %method_type24, %sCLType** %29, align 8
  %native25 = load i1, i1* %native6, align 1
  br i1 %native25, label %cond_jump_then, label %cond_else_block

cond_jump_then:                                   ; preds = %cond_end
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %31 = bitcast i8* %30 to %sCLMethod**
  %method27 = load %sCLMethod*, %sCLMethod** %31, align 8
  %32 = getelementptr inbounds %sCLMethod, %sCLMethod* %method27, i32 0, i32 4
  %33 = load %buffer*, %buffer** %32, align 8
  call void @buffer_finalize(%buffer* %33)
  %34 = ptrtoint %buffer* %33 to i64
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %cond_then_block28, label %cond_end29

cond_else_block:                                  ; preds = %cond_end
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %37 = bitcast i8* %36 to %sCLMethod**
  %method31 = load %sCLMethod*, %sCLMethod** %37, align 8
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %39 = bitcast i8* %38 to %buffer**
  %codes32 = load %buffer*, %buffer** %39, align 8
  %40 = getelementptr inbounds %sCLMethod, %sCLMethod* %method31, i32 0, i32 4
  store %buffer* %codes32, %buffer** %40, align 8
  %41 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %42 = bitcast i8* %41 to %sCLMethod**
  %method33 = load %sCLMethod*, %sCLMethod** %42, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 437), align 8
  %44 = bitcast i8* %43 to %sCLNodeBlock**
  %node_block34 = load %sCLNodeBlock*, %sCLNodeBlock** %44, align 8
  %45 = getelementptr inbounds %sCLMethod, %sCLMethod* %method33, i32 0, i32 6
  store %sCLNodeBlock* %node_block34, %sCLNodeBlock** %45, align 8
  br label %cond_end26

cond_end26:                                       ; preds = %cond_else_block, %cond_end29
  %method35 = load %sCLMethod*, %sCLMethod** %method, align 8
  %method_max_var_num36 = load i32, i32* %method_max_var_num8, align 4
  %46 = getelementptr inbounds %sCLMethod, %sCLMethod* %method35, i32 0, i32 7
  store i32 %method_max_var_num36, i32* %46, align 4
  %klass37 = load %sCLClass*, %sCLClass** %klass1, align 8
  %47 = getelementptr inbounds %sCLClass, %sCLClass* %klass37, i32 0, i32 1
  %48 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %47, align 8
  %method_name38 = load i8*, i8** %method_name2, align 8
  %49 = call i8* @string(i8* %method_name38)
  %method39 = load %sCLMethod*, %sCLMethod** %method, align 8
  call void @"map_insert_charp_sCLMethodp63_src/class"(%map__charp_sCLMethodp* %48, i8* %49, %sCLMethod* %method39)
  %50 = bitcast [8192 x i8*]* %lvtable to i8*
  %51 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %50, i64 65536)
  ret void

cond_then_block28:                                ; preds = %cond_jump_then
  br label %cond_end29

cond_end29:                                       ; preds = %cond_then_block28, %cond_jump_then
  %52 = bitcast %buffer* %33 to i8*
  call void @xfree(i8* %52)
  store %buffer* null, %buffer** %32, align 8
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %54 = bitcast i8* %53 to %sCLMethod**
  %method30 = load %sCLMethod*, %sCLMethod** %54, align 8
  %55 = getelementptr inbounds %sCLMethod, %sCLMethod* %method30, i32 0, i32 6
  store %sCLNodeBlock* null, %sCLNodeBlock** %55, align 8
  br label %cond_end26
}

define void @"map_insert_charp_sCLMethodp63_src/class"(%map__charp_sCLMethodp* %self, i8* %key, %sCLMethod* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLMethodp*
  store %map__charp_sCLMethodp* %self, %map__charp_sCLMethodp** %self1, align 8
  %2 = bitcast %map__charp_sCLMethodp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %item3 = alloca %sCLMethod*
  store %sCLMethod* %item, %sCLMethod** %item3, align 8
  %4 = bitcast %sCLMethod** %item3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %self4 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %5 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %multtmp = mul nsw i32 %6, 2
  %self5 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %7 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self5, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %getmp = icmp sge i32 %multtmp, %8
  br i1 %getmp, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %10 = bitcast i8* %9 to %map__charp_sCLMethodp**
  %self6 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %10, align 8
  call void @"map_rehash_charp_sCLMethodp64_src/class"(%map__charp_sCLMethodp* %self6)
  br label %cond_end

cond_end:                                         ; preds = %cond_jump_then, %entry
  %key7 = load i8*, i8** %key2, align 8
  %11 = call i32 @string_get_hash_key(i8* %key7)
  %self8 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %12 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self8, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %remtmp = srem i32 %11, %13
  %hash = alloca i32
  %14 = bitcast i32* %hash to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash9 = load i32, i32* %hash, align 4
  %it = alloca i32
  %15 = bitcast i32* %it to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %hash9, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end13, %cond_end
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %17 = bitcast i8* %16 to %map__charp_sCLMethodp**
  %self10 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %17, align 8
  %18 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self10, i32 0, i32 1
  %19 = load i1*, i1** %18, align 8
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %21 = bitcast i8* %20 to i32*
  %it11 = load i32, i32* %21, align 4
  %element_address = getelementptr i1, i1* %19, i32 %it11
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then12, label %cond_else_block

cond_end_block:                                   ; preds = %cond_else_block, %cond_jump_then19, %loop_top_block
  %22 = bitcast [8192 x i8*]* %lvtable to i8*
  %23 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %22, i64 65536)
  ret void

cond_jump_then12:                                 ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %25 = bitcast i8* %24 to %map__charp_sCLMethodp**
  %self14 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %25, align 8
  %26 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self14, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %29 = bitcast i8* %28 to i32*
  %it15 = load i32, i32* %29, align 4
  %element_address16 = getelementptr i8*, i8** %27, i32 %it15
  %element17 = load i8*, i8** %element_address16, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %31 = bitcast i8* %30 to i8**
  %key18 = load i8*, i8** %31, align 8
  %32 = call i1 @string_equals(i8* %element17, i8* %key18)
  br i1 %32, label %cond_jump_then19, label %cond_end20

cond_else_block:                                  ; preds = %cond_then_block
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %34 = bitcast i8* %33 to %map__charp_sCLMethodp**
  %self33 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self33, i32 0, i32 1
  %36 = load i1*, i1** %35, align 8
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %38 = bitcast i8* %37 to i32*
  %it34 = load i32, i32* %38, align 4
  %element_address35 = getelementptr i1, i1* %36, i32 %it34
  store i1 true, i1* %element_address35, align 1
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %40 = bitcast i8* %39 to %map__charp_sCLMethodp**
  %self36 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %40, align 8
  %41 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self36, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %44 = bitcast i8* %43 to i32*
  %it37 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %46 = bitcast i8* %45 to i8**
  %key38 = load i8*, i8** %46, align 8
  %element_address39 = getelementptr i8*, i8** %42, i32 %it37
  store i8* %key38, i8** %element_address39, align 8
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %48 = bitcast i8* %47 to %map__charp_sCLMethodp**
  %self40 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %48, align 8
  %49 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self40, i32 0, i32 2
  %50 = load %sCLMethod**, %sCLMethod*** %49, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %52 = bitcast i8* %51 to i32*
  %it41 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %54 = bitcast i8* %53 to %sCLMethod**
  %item42 = load %sCLMethod*, %sCLMethod** %54, align 8
  %element_address43 = getelementptr %sCLMethod*, %sCLMethod** %50, i32 %it41
  store %sCLMethod* %item42, %sCLMethod** %element_address43, align 8
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %56 = bitcast i8* %55 to %map__charp_sCLMethodp**
  %self44 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %56, align 8
  %57 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %58 = bitcast i8* %57 to %map__charp_sCLMethodp**
  %self45 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %58, align 8
  %59 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self45, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %addtmp46 = add nsw i32 %60, 1
  %61 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self44, i32 0, i32 4
  store i32 %addtmp46, i32* %61, align 4
  %subttmp47 = sub nsw i32 %addtmp46, 1
  br label %cond_end_block

cond_end13:                                       ; preds = %after_break48, %cond_end30
  br label %loop_top_block

cond_jump_then19:                                 ; preds = %cond_jump_then12
  %62 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %63 = bitcast i8* %62 to %map__charp_sCLMethodp**
  %self21 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %63, align 8
  %64 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self21, i32 0, i32 2
  %65 = load %sCLMethod**, %sCLMethod*** %64, align 8
  %66 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %67 = bitcast i8* %66 to i32*
  %it22 = load i32, i32* %67, align 4
  %68 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %69 = bitcast i8* %68 to %sCLMethod**
  %item23 = load %sCLMethod*, %sCLMethod** %69, align 8
  %element_address24 = getelementptr %sCLMethod*, %sCLMethod** %65, i32 %it22
  store %sCLMethod* %item23, %sCLMethod** %element_address24, align 8
  br label %cond_end_block

cond_end20:                                       ; preds = %after_break, %cond_jump_then12
  %70 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %71 = bitcast i8* %70 to i32*
  %it25 = load i32, i32* %71, align 4
  %addtmp = add nsw i32 %it25, 1
  %72 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %addtmp, i32* %73, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %74 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %75 = bitcast i8* %74 to i32*
  %it26 = load i32, i32* %75, align 4
  %76 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %77 = bitcast i8* %76 to %map__charp_sCLMethodp**
  %self27 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %77, align 8
  %78 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self27, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %getmp28 = icmp sge i32 %it26, %79
  br i1 %getmp28, label %cond_jump_then29, label %"cond_jump_elif0\0A"

after_break:                                      ; No predecessors!
  br label %cond_end20

cond_jump_then29:                                 ; preds = %cond_end20
  %80 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  br label %cond_end30

"cond_jump_elif0\0A":                             ; preds = %cond_end20
  %82 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %83 = bitcast i8* %82 to i32*
  %it31 = load i32, i32* %83, align 4
  %84 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %85 = bitcast i8* %84 to i32*
  %hash32 = load i32, i32* %85, align 4
  %eqtmpX = icmp eq i32 %it31, %hash32
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end30

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %86 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.405, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end30

cond_end30:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then29
  br label %cond_end13

after_break48:                                    ; No predecessors!
  br label %cond_end13
}

define void @"map_rehash_charp_sCLMethodp64_src/class"(%map__charp_sCLMethodp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLMethodp*
  store %map__charp_sCLMethodp* %self, %map__charp_sCLMethodp** %self1, align 8
  %2 = bitcast %map__charp_sCLMethodp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %self2 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %3 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %multtmp = mul nsw i32 %4, 3
  %size = alloca i32
  %5 = bitcast i32* %size to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  store i32 %multtmp, i32* %size, align 4
  %size3 = load i32, i32* %size, align 4
  %sext14 = zext i32 %size3 to i64
  %6 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.391, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.392, i32 0, i32 0), i32 2083, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_string.393, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_string.394, i32 0, i32 0))
  %7 = bitcast i8* %6 to i8**
  %keys = alloca i8**
  %8 = bitcast i8*** %keys to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  store i8** %7, i8*** %keys, align 8
  %size4 = load i32, i32* %size, align 4
  %sext145 = zext i32 %size4 to i64
  %9 = call i8* @debug_xcalloc(i64 %sext145, i64 8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_string.395, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.396, i32 0, i32 0), i32 2084, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_string.397, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_string.398, i32 0, i32 0))
  %10 = bitcast i8* %9 to %sCLMethod**
  %items = alloca %sCLMethod**
  %11 = bitcast %sCLMethod*** %items to i8*
  store i8* %11, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  store %sCLMethod** %10, %sCLMethod*** %items, align 8
  %size6 = load i32, i32* %size, align 4
  %sext147 = zext i32 %size6 to i64
  %12 = call i8* @debug_xcalloc(i64 %sext147, i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_string.399, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.400, i32 0, i32 0), i32 2085, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_string.401, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_string.402, i32 0, i32 0))
  %13 = bitcast i8* %12 to i1*
  %item_existance = alloca i1*
  %14 = bitcast i1** %item_existance to i8*
  store i8* %14, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  store i1* %13, i1** %item_existance, align 8
  %len = alloca i32
  %15 = bitcast i32* %len to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 451), align 8
  store i32 0, i32* %len, align 4
  %self8 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  call void @"map_each_charp_sCLMethodp65_src/class"(%map__charp_sCLMethodp* %self8, void (i8*, %sCLMethod*, i1*)* @class_lambda15)
  %self9 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %16 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self9, i32 0, i32 2
  %17 = load %sCLMethod**, %sCLMethod*** %16, align 8
  %18 = load %sCLMethod**, %sCLMethod*** %16, align 8
  %19 = bitcast %sCLMethod** %18 to i8*
  call void @xfree(i8* %19)
  %self10 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %20 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self10, i32 0, i32 1
  %21 = load i1*, i1** %20, align 8
  %22 = load i1*, i1** %20, align 8
  %23 = ptrtoint i1* %22 to i64
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %cond_then_block, label %cond_end

cond_then_block:                                  ; preds = %entry
  br label %cond_end

cond_end:                                         ; preds = %cond_then_block, %entry
  %25 = bitcast i1* %22 to i8*
  call void @xfree(i8* %25)
  %self11 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %26 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self11, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8**, i8*** %26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @xfree(i8* %29)
  %self12 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %keys13 = load i8**, i8*** %keys, align 8
  %30 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self12, i32 0, i32 0
  store i8** %keys13, i8*** %30, align 8
  %self14 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %items15 = load %sCLMethod**, %sCLMethod*** %items, align 8
  %31 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self14, i32 0, i32 2
  store %sCLMethod** %items15, %sCLMethod*** %31, align 8
  %self16 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %item_existance17 = load i1*, i1** %item_existance, align 8
  %32 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self16, i32 0, i32 1
  store i1* %item_existance17, i1** %32, align 8
  %self18 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %size19 = load i32, i32* %size, align 4
  %33 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self18, i32 0, i32 3
  store i32 %size19, i32* %33, align 4
  %self20 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %self1, align 8
  %len21 = load i32, i32* %len, align 4
  %34 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self20, i32 0, i32 4
  store i32 %len21, i32* %34, align 4
  %35 = bitcast [8192 x i8*]* %lvtable to i8*
  %36 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %35, i64 65536)
  ret void
}

define void @class_lambda15(i8* %it, %sCLMethod* %it2, i1* %it3) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %it1 = alloca i8*
  store i8* %it, i8** %it1, align 8
  %2 = bitcast i8** %it1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 452), align 8
  %it22 = alloca %sCLMethod*
  store %sCLMethod* %it2, %sCLMethod** %it22, align 8
  %3 = bitcast %sCLMethod** %it22 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 453), align 8
  %it33 = alloca i1*
  store i1* %it3, i1** %it33, align 8
  %4 = bitcast i1** %it33 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 454), align 8
  %it4 = load i8*, i8** %it1, align 8
  %5 = call i32 @string_get_hash_key(i8* %it4)
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %7 = bitcast i8* %6 to i32*
  %size = load i32, i32* %7, align 4
  %remtmp = srem i32 %5, %size
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 455), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash5 = load i32, i32* %hash, align 4
  %n = alloca i32
  %9 = bitcast i32* %n to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 456), align 8
  store i32 %hash5, i32* %n, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %11 = bitcast i8* %10 to i1**
  %item_existance = load i1*, i1** %11, align 8
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 456), align 8
  %13 = bitcast i8* %12 to i32*
  %n6 = load i32, i32* %13, align 4
  %element_address = getelementptr i1, i1* %item_existance, i32 %n6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %14 = bitcast [8192 x i8*]* %lvtable to i8*
  %15 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %14, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 456), align 8
  %17 = bitcast i8* %16 to i32*
  %n7 = load i32, i32* %17, align 4
  %addtmp = add nsw i32 %n7, 1
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 456), align 8
  %19 = bitcast i8* %18 to i32*
  store i32 %addtmp, i32* %19, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %20 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 456), align 8
  %21 = bitcast i8* %20 to i32*
  %n8 = load i32, i32* %21, align 4
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %23 = bitcast i8* %22 to i32*
  %size9 = load i32, i32* %23, align 4
  %getmp = icmp sge i32 %n8, %size9
  br i1 %getmp, label %cond_jump_then10, label %"cond_jump_elif0\0A"

cond_else_block:                                  ; preds = %cond_then_block
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %25 = bitcast i8* %24 to i1**
  %item_existance14 = load i1*, i1** %25, align 8
  %26 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 456), align 8
  %27 = bitcast i8* %26 to i32*
  %n15 = load i32, i32* %27, align 4
  %element_address16 = getelementptr i1, i1* %item_existance14, i32 %n15
  store i1 true, i1* %element_address16, align 1
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  %29 = bitcast i8* %28 to i8***
  %keys = load i8**, i8*** %29, align 8
  %30 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 456), align 8
  %31 = bitcast i8* %30 to i32*
  %n17 = load i32, i32* %31, align 4
  %32 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 452), align 8
  %33 = bitcast i8* %32 to i8**
  %it18 = load i8*, i8** %33, align 8
  %element_address19 = getelementptr i8*, i8** %keys, i32 %n17
  store i8* %it18, i8** %element_address19, align 8
  %34 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %35 = bitcast i8* %34 to %sCLMethod***
  %items = load %sCLMethod**, %sCLMethod*** %35, align 8
  %36 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 456), align 8
  %37 = bitcast i8* %36 to i32*
  %n20 = load i32, i32* %37, align 4
  %38 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 453), align 8
  %39 = bitcast i8* %38 to %sCLMethod**
  %it221 = load %sCLMethod*, %sCLMethod** %39, align 8
  %element_address22 = getelementptr %sCLMethod*, %sCLMethod** %items, i32 %n20
  store %sCLMethod* %it221, %sCLMethod** %element_address22, align 8
  %40 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 451), align 8
  %41 = bitcast i8* %40 to i32*
  %len = load i32, i32* %41, align 4
  %addtmp23 = add nsw i32 %len, 1
  %42 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 451), align 8
  %43 = bitcast i8* %42 to i32*
  store i32 %addtmp23, i32* %43, align 4
  %subttmp24 = sub nsw i32 %addtmp23, 1
  br label %cond_end

cond_end:                                         ; preds = %cond_else_block, %cond_end11
  br label %loop_top_block

cond_jump_then10:                                 ; preds = %cond_jump_then
  %44 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 456), align 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  br label %cond_end11

"cond_jump_elif0\0A":                             ; preds = %cond_jump_then
  %46 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 456), align 8
  %47 = bitcast i8* %46 to i32*
  %n12 = load i32, i32* %47, align 4
  %48 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 455), align 8
  %49 = bitcast i8* %48 to i32*
  %hash13 = load i32, i32* %49, align 4
  %eqtmpX = icmp eq i32 %n12, %hash13
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end11

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %stderr = load %_IO_FILE*, %_IO_FILE** @stderr, align 8
  %50 = call i32 (%_IO_FILE*, i8*, ...) @fprintf(%_IO_FILE* %stderr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_string.404, i32 0, i32 0))
  call void @exit(i32 2)
  br label %cond_end11

cond_end11:                                       ; preds = %"cond_jump_elif_then0\0A", %"cond_jump_elif0\0A", %cond_jump_then10
  br label %cond_end
}

define void @"map_each_charp_sCLMethodp65_src/class"(%map__charp_sCLMethodp* %self, void (i8*, %sCLMethod*, i1*)* %block_) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLMethodp*
  store %map__charp_sCLMethodp* %self, %map__charp_sCLMethodp** %self1, align 8
  %2 = bitcast %map__charp_sCLMethodp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 452), align 8
  %block_2 = alloca void (i8*, %sCLMethod*, i1*)*
  store void (i8*, %sCLMethod*, i1*)* %block_, void (i8*, %sCLMethod*, i1*)** %block_2, align 8
  %3 = bitcast void (i8*, %sCLMethod*, i1*)** %block_2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 453), align 8
  %i_ = alloca i32
  %4 = bitcast i32* %i_ to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 454), align 8
  store i32 0, i32* %i_, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  %i_3 = load i32, i32* %i_, align 4
  %5 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 452), align 8
  %6 = bitcast i8* %5 to %map__charp_sCLMethodp**
  %self4 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %6, align 8
  %7 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %letmp = icmp slt i32 %i_3, %8
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %9 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 452), align 8
  %10 = bitcast i8* %9 to %map__charp_sCLMethodp**
  %self5 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %10, align 8
  %11 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self5, i32 0, i32 1
  %12 = load i1*, i1** %11, align 8
  %i_6 = load i32, i32* %i_, align 4
  %element_address = getelementptr i1, i1* %12, i32 %i_6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_end

cond_end_block:                                   ; preds = %cond_jump_then18, %loop_top_block
  %13 = bitcast [8192 x i8*]* %lvtable to i8*
  %14 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %13, i64 65536)
  ret void

cond_jump_then:                                   ; preds = %cond_then_block
  %end_flag_ = alloca i1
  %15 = bitcast i1* %end_flag_ to i8*
  store i8* %15, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 455), align 8
  store i1 false, i1* %end_flag_, align 1
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 453), align 8
  %17 = bitcast i8* %16 to void (i8*, %sCLMethod*, i1*)**
  %block_7 = load void (i8*, %sCLMethod*, i1*)*, void (i8*, %sCLMethod*, i1*)** %17, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 452), align 8
  %19 = bitcast i8* %18 to %map__charp_sCLMethodp**
  %self8 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %19, align 8
  %20 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self8, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 454), align 8
  %23 = bitcast i8* %22 to i32*
  %i_9 = load i32, i32* %23, align 4
  %element_address10 = getelementptr i8*, i8** %21, i32 %i_9
  %element11 = load i8*, i8** %element_address10, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 452), align 8
  %25 = bitcast i8* %24 to %map__charp_sCLMethodp**
  %self12 = load %map__charp_sCLMethodp*, %map__charp_sCLMethodp** %25, align 8
  %26 = getelementptr inbounds %map__charp_sCLMethodp, %map__charp_sCLMethodp* %self12, i32 0, i32 2
  %27 = load %sCLMethod**, %sCLMethod*** %26, align 8
  %28 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 454), align 8
  %29 = bitcast i8* %28 to i32*
  %i_13 = load i32, i32* %29, align 4
  %element_address14 = getelementptr %sCLMethod*, %sCLMethod** %27, i32 %i_13
  %element15 = load %sCLMethod*, %sCLMethod** %element_address14, align 8
  %end_flag_16 = load i1, i1* %end_flag_, align 1
  call void %block_7(i8* %element11, %sCLMethod* %element15, i1* %end_flag_)
  %end_flag_17 = load i1, i1* %end_flag_, align 1
  %eqtmpX = icmp eq i1 %end_flag_17, true
  br i1 %eqtmpX, label %cond_jump_then18, label %cond_end19

cond_end:                                         ; preds = %cond_end19, %cond_then_block
  %i_20 = load i32, i32* %i_, align 4
  %addtmp = add nsw i32 %i_20, 1
  store i32 %addtmp, i32* %i_, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then18:                                 ; preds = %cond_jump_then
  br label %cond_end_block

cond_end19:                                       ; preds = %after_break, %cond_jump_then
  br label %cond_end

after_break:                                      ; No predecessors!
  br label %cond_end19
}

define %vector__charp* @"vector_initialize_charp66_src/class"(%vector__charp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__charp*
  store %vector__charp* %self, %vector__charp** %self1, align 8
  %2 = bitcast %vector__charp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %self2 = load %vector__charp*, %vector__charp** %self1, align 8
  %3 = getelementptr inbounds %vector__charp, %vector__charp* %self2, i32 0, i32 2
  store i32 16, i32* %3, align 4
  %self3 = load %vector__charp*, %vector__charp** %self1, align 8
  %4 = getelementptr inbounds %vector__charp, %vector__charp* %self3, i32 0, i32 1
  store i32 0, i32* %4, align 4
  %self4 = load %vector__charp*, %vector__charp** %self1, align 8
  %self5 = load %vector__charp*, %vector__charp** %self1, align 8
  %5 = getelementptr inbounds %vector__charp, %vector__charp* %self5, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %sext14 = zext i32 %6 to i64
  %7 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.410, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.411, i32 0, i32 0), i32 452, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_string.412, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_string.413, i32 0, i32 0))
  %8 = bitcast i8* %7 to i8**
  %9 = getelementptr inbounds %vector__charp, %vector__charp* %self4, i32 0, i32 0
  store i8** %8, i8*** %9, align 8
  %self6 = load %vector__charp*, %vector__charp** %self1, align 8
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret %vector__charp* %self6
}

define %sCLClass* @"map_at_charp_sCLClassp67_src/class"(%map__charp_sCLClassp* %self, i8* %key, %sCLClass* %default_value) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLClassp*
  store %map__charp_sCLClassp* %self, %map__charp_sCLClassp** %self1, align 8
  %2 = bitcast %map__charp_sCLClassp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %default_value3 = alloca %sCLClass*
  store %sCLClass* %default_value, %sCLClass** %default_value3, align 8
  %4 = bitcast %sCLClass** %default_value3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %key4 = load i8*, i8** %key2, align 8
  %5 = call i32 @string_get_hash_key(i8* %key4)
  %self5 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %6 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self5, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  %remtmp = srem i32 %5, %7
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash6 = load i32, i32* %hash, align 4
  %it = alloca i32
  %9 = bitcast i32* %it to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  store i32 %hash6, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %11 = bitcast i8* %10 to %map__charp_sCLClassp**
  %self7 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self7, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %14 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %15 = bitcast i8* %14 to i32*
  %it8 = load i32, i32* %15, align 4
  %element_address = getelementptr i1, i1* %13, i32 %it8
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %default_value29 = load %sCLClass*, %sCLClass** %default_value3, align 8
  %16 = bitcast [8192 x i8*]* %lvtable to i8*
  %17 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %16, i64 65536)
  ret %sCLClass* %default_value29

cond_jump_then:                                   ; preds = %cond_then_block
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %19 = bitcast i8* %18 to %map__charp_sCLClassp**
  %self9 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %19, align 8
  %20 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self9, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %23 = bitcast i8* %22 to i32*
  %it10 = load i32, i32* %23, align 4
  %element_address11 = getelementptr i8*, i8** %21, i32 %it10
  %element12 = load i8*, i8** %element_address11, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %25 = bitcast i8* %24 to i8**
  %key13 = load i8*, i8** %25, align 8
  %26 = call i1 @string_equals(i8* %element12, i8* %key13)
  br i1 %26, label %cond_jump_then14, label %cond_end15

cond_else_block:                                  ; preds = %cond_then_block
  %27 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %28 = bitcast i8* %27 to %sCLClass**
  %default_value28 = load %sCLClass*, %sCLClass** %28, align 8
  %29 = bitcast [8192 x i8*]* %lvtable to i8*
  %30 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %29, i64 65536)
  ret %sCLClass* %default_value28

cond_end:                                         ; preds = %cond_end24
  br label %loop_top_block

cond_jump_then14:                                 ; preds = %cond_jump_then
  %31 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %32 = bitcast i8* %31 to %map__charp_sCLClassp**
  %self16 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %32, align 8
  %33 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self16, i32 0, i32 2
  %34 = load %sCLClass**, %sCLClass*** %33, align 8
  %35 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %36 = bitcast i8* %35 to i32*
  %it17 = load i32, i32* %36, align 4
  %element_address18 = getelementptr %sCLClass*, %sCLClass** %34, i32 %it17
  %element19 = load %sCLClass*, %sCLClass** %element_address18, align 8
  %37 = bitcast [8192 x i8*]* %lvtable to i8*
  %38 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %37, i64 65536)
  ret %sCLClass* %element19

cond_end15:                                       ; preds = %cond_jump_then
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %40 = bitcast i8* %39 to i32*
  %it20 = load i32, i32* %40, align 4
  %addtmp = add nsw i32 %it20, 1
  %41 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %42 = bitcast i8* %41 to i32*
  store i32 %addtmp, i32* %42, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %44 = bitcast i8* %43 to i32*
  %it21 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %46 = bitcast i8* %45 to %map__charp_sCLClassp**
  %self22 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %46, align 8
  %47 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self22, i32 0, i32 3
  %48 = load i32, i32* %47, align 4
  %getmp = icmp sge i32 %it21, %48
  br i1 %getmp, label %cond_jump_then23, label %"cond_jump_elif0\0A"

cond_jump_then23:                                 ; preds = %cond_end15
  %49 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 4
  br label %cond_end24

"cond_jump_elif0\0A":                             ; preds = %cond_end15
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %52 = bitcast i8* %51 to i32*
  %it25 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %54 = bitcast i8* %53 to i32*
  %hash26 = load i32, i32* %54, align 4
  %eqtmpX = icmp eq i32 %it25, %hash26
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end24

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %56 = bitcast i8* %55 to %sCLClass**
  %default_value27 = load %sCLClass*, %sCLClass** %56, align 8
  %57 = bitcast [8192 x i8*]* %lvtable to i8*
  %58 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %57, i64 65536)
  ret %sCLClass* %default_value27

cond_end24:                                       ; preds = %"cond_jump_elif0\0A", %cond_jump_then23
  br label %cond_end
}

define void @"vector_push_back_charp68_src/class"(%vector__charp* %self, i8* %item) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__charp*
  store %vector__charp* %self, %vector__charp** %self1, align 8
  %2 = bitcast %vector__charp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %item2 = alloca i8*
  store i8* %item, i8** %item2, align 8
  %3 = bitcast i8** %item2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %self3 = load %vector__charp*, %vector__charp** %self1, align 8
  %4 = getelementptr inbounds %vector__charp, %vector__charp* %self3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %self4 = load %vector__charp*, %vector__charp** %self1, align 8
  %6 = getelementptr inbounds %vector__charp, %vector__charp* %self4, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %eqtmpX = icmp eq i32 %5, %7
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %8 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %9 = bitcast i8* %8 to %vector__charp**
  %self5 = load %vector__charp*, %vector__charp** %9, align 8
  %10 = getelementptr inbounds %vector__charp, %vector__charp* %self5, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %multtmp = mul nsw i32 %11, 2
  %new_size = alloca i32
  %12 = bitcast i32* %new_size to i8*
  store i8* %12, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 %multtmp, i32* %new_size, align 4
  %13 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %14 = bitcast i8* %13 to %vector__charp**
  %self6 = load %vector__charp*, %vector__charp** %14, align 8
  %15 = getelementptr inbounds %vector__charp, %vector__charp* %self6, i32 0, i32 0
  %16 = load i8**, i8*** %15, align 8
  %items = alloca i8**
  %17 = bitcast i8*** %items to i8*
  store i8* %17, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  store i8** %16, i8*** %items, align 8
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %19 = bitcast i8* %18 to %vector__charp**
  %self7 = load %vector__charp*, %vector__charp** %19, align 8
  %new_size8 = load i32, i32* %new_size, align 4
  %sext14 = zext i32 %new_size8 to i64
  %20 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_string.415, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.416, i32 0, i32 0), i32 507, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.417, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_string.418, i32 0, i32 0))
  %21 = bitcast i8* %20 to i8**
  %22 = getelementptr inbounds %vector__charp, %vector__charp* %self7, i32 0, i32 0
  store i8** %21, i8*** %22, align 8
  %i = alloca i32
  %23 = bitcast i32* %i to i8*
  store i8* %23, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %25 = bitcast i8* %24 to i32*
  store i32 0, i32* %25, align 4
  br label %loop_top_block

cond_end:                                         ; preds = %cond_end_block, %entry
  %self20 = load %vector__charp*, %vector__charp** %self1, align 8
  %26 = getelementptr inbounds %vector__charp, %vector__charp* %self20, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %self21 = load %vector__charp*, %vector__charp** %self1, align 8
  %28 = getelementptr inbounds %vector__charp, %vector__charp* %self21, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %item22 = load i8*, i8** %item2, align 8
  %element_address23 = getelementptr i8*, i8** %27, i32 %29
  store i8* %item22, i8** %element_address23, align 8
  %self24 = load %vector__charp*, %vector__charp** %self1, align 8
  %self25 = load %vector__charp*, %vector__charp** %self1, align 8
  %30 = getelementptr inbounds %vector__charp, %vector__charp* %self25, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %addtmp26 = add nsw i32 %31, 1
  %32 = getelementptr inbounds %vector__charp, %vector__charp* %self24, i32 0, i32 1
  store i32 %addtmp26, i32* %32, align 4
  %subttmp27 = sub nsw i32 %addtmp26, 1
  %33 = bitcast [8192 x i8*]* %lvtable to i8*
  %34 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %33, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_then_block, %cond_jump_then
  %35 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %36 = bitcast i8* %35 to i32*
  %i9 = load i32, i32* %36, align 4
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %38 = bitcast i8* %37 to %vector__charp**
  %self10 = load %vector__charp*, %vector__charp** %38, align 8
  %39 = getelementptr inbounds %vector__charp, %vector__charp* %self10, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %letmp = icmp slt i32 %i9, %40
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %41 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %42 = bitcast i8* %41 to %vector__charp**
  %self11 = load %vector__charp*, %vector__charp** %42, align 8
  %43 = getelementptr inbounds %vector__charp, %vector__charp* %self11, i32 0, i32 0
  %44 = load i8**, i8*** %43, align 8
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %46 = bitcast i8* %45 to i32*
  %i12 = load i32, i32* %46, align 4
  %47 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %48 = bitcast i8* %47 to i8***
  %items13 = load i8**, i8*** %48, align 8
  %49 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %50 = bitcast i8* %49 to i32*
  %i14 = load i32, i32* %50, align 4
  %element_address = getelementptr i8*, i8** %items13, i32 %i14
  %element = load i8*, i8** %element_address, align 8
  %element_address15 = getelementptr i8*, i8** %44, i32 %i12
  store i8* %element, i8** %element_address15, align 8
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %52 = bitcast i8* %51 to i32*
  %i16 = load i32, i32* %52, align 4
  %addtmp = add nsw i32 %i16, 1
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %54 = bitcast i8* %53 to i32*
  store i32 %addtmp, i32* %54, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_end_block:                                   ; preds = %loop_top_block
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %56 = bitcast i8* %55 to %vector__charp**
  %self17 = load %vector__charp*, %vector__charp** %56, align 8
  %new_size18 = load i32, i32* %new_size, align 4
  %57 = getelementptr inbounds %vector__charp, %vector__charp* %self17, i32 0, i32 2
  store i32 %new_size18, i32* %57, align 4
  %items19 = load i8**, i8*** %items, align 8
  %58 = load i8**, i8*** %items, align 8
  %59 = bitcast i8** %58 to i8*
  call void @xfree(i8* %59)
  br label %cond_end
}

define void @"vector_finalize_sVarTablep69_src/class"(%vector__sVarTablep* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__sVarTablep*
  store %vector__sVarTablep* %self, %vector__sVarTablep** %self1, align 8
  %2 = bitcast %vector__sVarTablep** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %self2 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %eqtmpX = icmp eq %vector__sVarTablep* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self14 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %6 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self14, i32 0, i32 0
  %7 = load %sVarTable**, %sVarTable*** %6, align 8
  %8 = load %sVarTable**, %sVarTable*** %6, align 8
  %9 = bitcast %sVarTable** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %13 = bitcast i8* %12 to %vector__sVarTablep**
  %self6 = load %vector__sVarTablep*, %vector__sVarTablep** %13, align 8
  %14 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %17 = bitcast i8* %16 to %vector__sVarTablep**
  %self7 = load %vector__sVarTablep*, %vector__sVarTablep** %17, align 8
  %18 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self7, i32 0, i32 0
  %19 = load %sVarTable**, %sVarTable*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr %sVarTable*, %sVarTable** %19, i32 %i8
  %element = load %sVarTable*, %sVarTable** %element_address, align 8
  %20 = load %sVarTable*, %sVarTable** %element_address, align 8
  %21 = ptrtoint %sVarTable* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  %23 = getelementptr inbounds %sVarTable, %sVarTable* %20, i32 0, i32 0
  %24 = load %map__charp_sVarp*, %map__charp_sVarp** %23, align 8
  call void @"map_finalize_charp_sVarp70_src/class"(%map__charp_sVarp* %24)
  %25 = ptrtoint %map__charp_sVarp* %24 to i64
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %cond_then_block11, label %cond_end12

cond_end10:                                       ; preds = %cond_end12, %cond_then_block
  %27 = bitcast %sVarTable* %20 to i8*
  call void @xfree(i8* %27)
  %i13 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i13, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_then_block11:                                ; preds = %cond_then_block9
  br label %cond_end12

cond_end12:                                       ; preds = %cond_then_block11, %cond_then_block9
  %28 = bitcast %map__charp_sVarp* %24 to i8*
  call void @xfree(i8* %28)
  br label %cond_end10
}

define void @"map_finalize_charp_sVarp70_src/class"(%map__charp_sVarp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sVarp*
  store %map__charp_sVarp* %self, %map__charp_sVarp** %self1, align 8
  %2 = bitcast %map__charp_sVarp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %self2 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sVarp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %7 = bitcast i8* %6 to %map__charp_sVarp**
  %self4 = load %map__charp_sVarp*, %map__charp_sVarp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %11 = bitcast i8* %10 to %map__charp_sVarp**
  %self5 = load %map__charp_sVarp*, %map__charp_sVarp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self20 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self20, i32 0, i32 2
  %15 = load %sVar**, %sVar*** %14, align 8
  %16 = load %sVar**, %sVar*** %14, align 8
  %17 = bitcast %sVar** %16 to i8*
  call void @xfree(i8* %17)
  %i21 = alloca i32
  %18 = bitcast i32* %i21 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 0, i32* %i21, align 4
  br label %loop_top_block22

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 false, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i19 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i19, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %20 = bitcast i8* %19 to %map__charp_sVarp**
  %self11 = load %map__charp_sVarp*, %map__charp_sVarp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self11, i32 0, i32 2
  %22 = load %sVar**, %sVar*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sVar*, %sVar** %22, i32 %i12
  %element14 = load %sVar*, %sVar** %element_address13, align 8
  %25 = load %sVar*, %sVar** %element_address13, align 8
  %26 = ptrtoint %sVar* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sVar, %sVar* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end18, %cond_jump_then9
  %32 = bitcast %sVar* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  br label %cond_end16

loop_top_block22:                                 ; preds = %cond_end33, %cond_end_block
  %i23 = load i32, i32* %i21, align 4
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %34 = bitcast i8* %33 to %map__charp_sVarp**
  %self24 = load %map__charp_sVarp*, %map__charp_sVarp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self24, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %letmp25 = icmp slt i32 %i23, %36
  br i1 %letmp25, label %cond_then_block26, label %cond_end_block27

cond_then_block26:                                ; preds = %loop_top_block22
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %38 = bitcast i8* %37 to %map__charp_sVarp**
  %self28 = load %map__charp_sVarp*, %map__charp_sVarp** %38, align 8
  %39 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self28, i32 0, i32 1
  %40 = load i1*, i1** %39, align 8
  %i29 = load i32, i32* %i21, align 4
  %element_address30 = getelementptr i1, i1* %40, i32 %i29
  %element31 = load i1, i1* %element_address30, align 1
  br i1 %element31, label %cond_jump_then32, label %cond_end33

cond_end_block27:                                 ; preds = %loop_top_block22
  %self45 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %41 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self45, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8**, i8*** %41, align 8
  %44 = bitcast i8** %43 to i8*
  call void @xfree(i8* %44)
  %self46 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %45 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self46, i32 0, i32 1
  %46 = load i1*, i1** %45, align 8
  %47 = load i1*, i1** %45, align 8
  %48 = ptrtoint i1* %47 to i64
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %cond_then_block47, label %cond_end48

cond_jump_then32:                                 ; preds = %cond_then_block26
  br i1 true, label %cond_jump_then34, label %cond_end35

cond_end33:                                       ; preds = %cond_end35, %cond_then_block26
  %i42 = load i32, i32* %i21, align 4
  %addtmp43 = add nsw i32 %i42, 1
  store i32 %addtmp43, i32* %i21, align 4
  %subttmp44 = sub nsw i32 %addtmp43, 1
  br label %loop_top_block22

cond_jump_then34:                                 ; preds = %cond_jump_then32
  %50 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %51 = bitcast i8* %50 to %map__charp_sVarp**
  %self36 = load %map__charp_sVarp*, %map__charp_sVarp** %51, align 8
  %52 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self36, i32 0, i32 0
  %53 = load i8**, i8*** %52, align 8
  %54 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %55 = bitcast i8* %54 to i32*
  %i37 = load i32, i32* %55, align 4
  %element_address38 = getelementptr i8*, i8** %53, i32 %i37
  %element39 = load i8*, i8** %element_address38, align 8
  %56 = load i8*, i8** %element_address38, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %cond_then_block40, label %cond_end41

cond_end35:                                       ; preds = %cond_end41, %cond_jump_then32
  br label %cond_end33

cond_then_block40:                                ; preds = %cond_jump_then34
  br label %cond_end41

cond_end41:                                       ; preds = %cond_then_block40, %cond_jump_then34
  call void @xfree(i8* %56)
  br label %cond_end35

cond_then_block47:                                ; preds = %cond_end_block27
  br label %cond_end48

cond_end48:                                       ; preds = %cond_then_block47, %cond_end_block27
  %59 = bitcast i1* %47 to i8*
  call void @xfree(i8* %59)
  %60 = bitcast [8192 x i8*]* %lvtable to i8*
  %61 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %60, i64 65536)
  ret void
}

define void @"vector_finalize_charp71_src/class"(%vector__charp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__charp*
  store %vector__charp* %self, %vector__charp** %self1, align 8
  %2 = bitcast %vector__charp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %self2 = load %vector__charp*, %vector__charp** %self1, align 8
  %eqtmpX = icmp eq %vector__charp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self12 = load %vector__charp*, %vector__charp** %self1, align 8
  %6 = getelementptr inbounds %vector__charp, %vector__charp* %self12, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = load i8**, i8*** %6, align 8
  %9 = bitcast i8** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %13 = bitcast i8* %12 to %vector__charp**
  %self6 = load %vector__charp*, %vector__charp** %13, align 8
  %14 = getelementptr inbounds %vector__charp, %vector__charp* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %17 = bitcast i8* %16 to %vector__charp**
  %self7 = load %vector__charp*, %vector__charp** %17, align 8
  %18 = getelementptr inbounds %vector__charp, %vector__charp* %self7, i32 0, i32 0
  %19 = load i8**, i8*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr i8*, i8** %19, i32 %i8
  %element = load i8*, i8** %element_address, align 8
  %20 = load i8*, i8** %element_address, align 8
  %21 = ptrtoint i8* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  br label %cond_end10

cond_end10:                                       ; preds = %cond_then_block9, %cond_then_block
  call void @xfree(i8* %20)
  %i11 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i11, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block
}

define %sCLClass* @"map_at_charp_sCLClassp72_src/class"(%map__charp_sCLClassp* %self, i8* %key, %sCLClass* %default_value) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLClassp*
  store %map__charp_sCLClassp* %self, %map__charp_sCLClassp** %self1, align 8
  %2 = bitcast %map__charp_sCLClassp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %default_value3 = alloca %sCLClass*
  store %sCLClass* %default_value, %sCLClass** %default_value3, align 8
  %4 = bitcast %sCLClass** %default_value3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %key4 = load i8*, i8** %key2, align 8
  %5 = call i32 @string_get_hash_key(i8* %key4)
  %self5 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %6 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self5, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  %remtmp = srem i32 %5, %7
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash6 = load i32, i32* %hash, align 4
  %it = alloca i32
  %9 = bitcast i32* %it to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  store i32 %hash6, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %11 = bitcast i8* %10 to %map__charp_sCLClassp**
  %self7 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self7, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %14 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %15 = bitcast i8* %14 to i32*
  %it8 = load i32, i32* %15, align 4
  %element_address = getelementptr i1, i1* %13, i32 %it8
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %default_value29 = load %sCLClass*, %sCLClass** %default_value3, align 8
  %16 = bitcast [8192 x i8*]* %lvtable to i8*
  %17 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %16, i64 65536)
  ret %sCLClass* %default_value29

cond_jump_then:                                   ; preds = %cond_then_block
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %19 = bitcast i8* %18 to %map__charp_sCLClassp**
  %self9 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %19, align 8
  %20 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self9, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %23 = bitcast i8* %22 to i32*
  %it10 = load i32, i32* %23, align 4
  %element_address11 = getelementptr i8*, i8** %21, i32 %it10
  %element12 = load i8*, i8** %element_address11, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %25 = bitcast i8* %24 to i8**
  %key13 = load i8*, i8** %25, align 8
  %26 = call i1 @string_equals(i8* %element12, i8* %key13)
  br i1 %26, label %cond_jump_then14, label %cond_end15

cond_else_block:                                  ; preds = %cond_then_block
  %27 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %28 = bitcast i8* %27 to %sCLClass**
  %default_value28 = load %sCLClass*, %sCLClass** %28, align 8
  %29 = bitcast [8192 x i8*]* %lvtable to i8*
  %30 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %29, i64 65536)
  ret %sCLClass* %default_value28

cond_end:                                         ; preds = %cond_end24
  br label %loop_top_block

cond_jump_then14:                                 ; preds = %cond_jump_then
  %31 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %32 = bitcast i8* %31 to %map__charp_sCLClassp**
  %self16 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %32, align 8
  %33 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self16, i32 0, i32 2
  %34 = load %sCLClass**, %sCLClass*** %33, align 8
  %35 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %36 = bitcast i8* %35 to i32*
  %it17 = load i32, i32* %36, align 4
  %element_address18 = getelementptr %sCLClass*, %sCLClass** %34, i32 %it17
  %element19 = load %sCLClass*, %sCLClass** %element_address18, align 8
  %37 = bitcast [8192 x i8*]* %lvtable to i8*
  %38 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %37, i64 65536)
  ret %sCLClass* %element19

cond_end15:                                       ; preds = %cond_jump_then
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %40 = bitcast i8* %39 to i32*
  %it20 = load i32, i32* %40, align 4
  %addtmp = add nsw i32 %it20, 1
  %41 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %42 = bitcast i8* %41 to i32*
  store i32 %addtmp, i32* %42, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %44 = bitcast i8* %43 to i32*
  %it21 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %46 = bitcast i8* %45 to %map__charp_sCLClassp**
  %self22 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %46, align 8
  %47 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self22, i32 0, i32 3
  %48 = load i32, i32* %47, align 4
  %getmp = icmp sge i32 %it21, %48
  br i1 %getmp, label %cond_jump_then23, label %"cond_jump_elif0\0A"

cond_jump_then23:                                 ; preds = %cond_end15
  %49 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 4
  br label %cond_end24

"cond_jump_elif0\0A":                             ; preds = %cond_end15
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %52 = bitcast i8* %51 to i32*
  %it25 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %54 = bitcast i8* %53 to i32*
  %hash26 = load i32, i32* %54, align 4
  %eqtmpX = icmp eq i32 %it25, %hash26
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end24

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  %56 = bitcast i8* %55 to %sCLClass**
  %default_value27 = load %sCLClass*, %sCLClass** %56, align 8
  %57 = bitcast [8192 x i8*]* %lvtable to i8*
  %58 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %57, i64 65536)
  ret %sCLClass* %default_value27

cond_end24:                                       ; preds = %"cond_jump_elif0\0A", %cond_jump_then23
  br label %cond_end
}

define %sCLClass* @"map_at_charp_sCLClassp73_src/class"(%map__charp_sCLClassp* %self, i8* %key, %sCLClass* %default_value) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sCLClassp*
  store %map__charp_sCLClassp* %self, %map__charp_sCLClassp** %self1, align 8
  %2 = bitcast %map__charp_sCLClassp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %key2 = alloca i8*
  store i8* %key, i8** %key2, align 8
  %3 = bitcast i8** %key2 to i8*
  store i8* %3, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %default_value3 = alloca %sCLClass*
  store %sCLClass* %default_value, %sCLClass** %default_value3, align 8
  %4 = bitcast %sCLClass** %default_value3 to i8*
  store i8* %4, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %key4 = load i8*, i8** %key2, align 8
  %5 = call i32 @string_get_hash_key(i8* %key4)
  %self5 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %self1, align 8
  %6 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self5, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  %remtmp = srem i32 %5, %7
  %hash = alloca i32
  %8 = bitcast i32* %hash to i8*
  store i8* %8, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  store i32 %remtmp, i32* %hash, align 4
  %hash6 = load i32, i32* %hash, align 4
  %it = alloca i32
  %9 = bitcast i32* %it to i8*
  store i8* %9, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 %hash6, i32* %it, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end, %entry
  br i1 true, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %11 = bitcast i8* %10 to %map__charp_sCLClassp**
  %self7 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self7, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %14 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %15 = bitcast i8* %14 to i32*
  %it8 = load i32, i32* %15, align 4
  %element_address = getelementptr i1, i1* %13, i32 %it8
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then, label %cond_else_block

cond_end_block:                                   ; preds = %loop_top_block
  %default_value29 = load %sCLClass*, %sCLClass** %default_value3, align 8
  %16 = bitcast [8192 x i8*]* %lvtable to i8*
  %17 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %16, i64 65536)
  ret %sCLClass* %default_value29

cond_jump_then:                                   ; preds = %cond_then_block
  %18 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %19 = bitcast i8* %18 to %map__charp_sCLClassp**
  %self9 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %19, align 8
  %20 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self9, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %23 = bitcast i8* %22 to i32*
  %it10 = load i32, i32* %23, align 4
  %element_address11 = getelementptr i8*, i8** %21, i32 %it10
  %element12 = load i8*, i8** %element_address11, align 8
  %24 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %25 = bitcast i8* %24 to i8**
  %key13 = load i8*, i8** %25, align 8
  %26 = call i1 @string_equals(i8* %element12, i8* %key13)
  br i1 %26, label %cond_jump_then14, label %cond_end15

cond_else_block:                                  ; preds = %cond_then_block
  %27 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %28 = bitcast i8* %27 to %sCLClass**
  %default_value28 = load %sCLClass*, %sCLClass** %28, align 8
  %29 = bitcast [8192 x i8*]* %lvtable to i8*
  %30 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %29, i64 65536)
  ret %sCLClass* %default_value28

cond_end:                                         ; preds = %cond_end24
  br label %loop_top_block

cond_jump_then14:                                 ; preds = %cond_jump_then
  %31 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %32 = bitcast i8* %31 to %map__charp_sCLClassp**
  %self16 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %32, align 8
  %33 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self16, i32 0, i32 2
  %34 = load %sCLClass**, %sCLClass*** %33, align 8
  %35 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %36 = bitcast i8* %35 to i32*
  %it17 = load i32, i32* %36, align 4
  %element_address18 = getelementptr %sCLClass*, %sCLClass** %34, i32 %it17
  %element19 = load %sCLClass*, %sCLClass** %element_address18, align 8
  %37 = bitcast [8192 x i8*]* %lvtable to i8*
  %38 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %37, i64 65536)
  ret %sCLClass* %element19

cond_end15:                                       ; preds = %cond_jump_then
  %39 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %40 = bitcast i8* %39 to i32*
  %it20 = load i32, i32* %40, align 4
  %addtmp = add nsw i32 %it20, 1
  %41 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %42 = bitcast i8* %41 to i32*
  store i32 %addtmp, i32* %42, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  %43 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %44 = bitcast i8* %43 to i32*
  %it21 = load i32, i32* %44, align 4
  %45 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %46 = bitcast i8* %45 to %map__charp_sCLClassp**
  %self22 = load %map__charp_sCLClassp*, %map__charp_sCLClassp** %46, align 8
  %47 = getelementptr inbounds %map__charp_sCLClassp, %map__charp_sCLClassp* %self22, i32 0, i32 3
  %48 = load i32, i32* %47, align 4
  %getmp = icmp sge i32 %it21, %48
  br i1 %getmp, label %cond_jump_then23, label %"cond_jump_elif0\0A"

cond_jump_then23:                                 ; preds = %cond_end15
  %49 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 4
  br label %cond_end24

"cond_jump_elif0\0A":                             ; preds = %cond_end15
  %51 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %52 = bitcast i8* %51 to i32*
  %it25 = load i32, i32* %52, align 4
  %53 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %54 = bitcast i8* %53 to i32*
  %hash26 = load i32, i32* %54, align 4
  %eqtmpX = icmp eq i32 %it25, %hash26
  br i1 %eqtmpX, label %"cond_jump_elif_then0\0A", label %cond_end24

"cond_jump_elif_then0\0A":                        ; preds = %"cond_jump_elif0\0A"
  %55 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %56 = bitcast i8* %55 to %sCLClass**
  %default_value27 = load %sCLClass*, %sCLClass** %56, align 8
  %57 = bitcast [8192 x i8*]* %lvtable to i8*
  %58 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %57, i64 65536)
  ret %sCLClass* %default_value27

cond_end24:                                       ; preds = %"cond_jump_elif0\0A", %cond_jump_then23
  br label %cond_end
}

define void @"vector_finalize_sVarTablep74_src/class"(%vector__sVarTablep* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__sVarTablep*
  store %vector__sVarTablep* %self, %vector__sVarTablep** %self1, align 8
  %2 = bitcast %vector__sVarTablep** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %self2 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %eqtmpX = icmp eq %vector__sVarTablep* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self14 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %6 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self14, i32 0, i32 0
  %7 = load %sVarTable**, %sVarTable*** %6, align 8
  %8 = load %sVarTable**, %sVarTable*** %6, align 8
  %9 = bitcast %sVarTable** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %13 = bitcast i8* %12 to %vector__sVarTablep**
  %self6 = load %vector__sVarTablep*, %vector__sVarTablep** %13, align 8
  %14 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %17 = bitcast i8* %16 to %vector__sVarTablep**
  %self7 = load %vector__sVarTablep*, %vector__sVarTablep** %17, align 8
  %18 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self7, i32 0, i32 0
  %19 = load %sVarTable**, %sVarTable*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr %sVarTable*, %sVarTable** %19, i32 %i8
  %element = load %sVarTable*, %sVarTable** %element_address, align 8
  %20 = load %sVarTable*, %sVarTable** %element_address, align 8
  %21 = ptrtoint %sVarTable* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  %23 = getelementptr inbounds %sVarTable, %sVarTable* %20, i32 0, i32 0
  %24 = load %map__charp_sVarp*, %map__charp_sVarp** %23, align 8
  call void @"map_finalize_charp_sVarp75_src/class"(%map__charp_sVarp* %24)
  %25 = ptrtoint %map__charp_sVarp* %24 to i64
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %cond_then_block11, label %cond_end12

cond_end10:                                       ; preds = %cond_end12, %cond_then_block
  %27 = bitcast %sVarTable* %20 to i8*
  call void @xfree(i8* %27)
  %i13 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i13, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_then_block11:                                ; preds = %cond_then_block9
  br label %cond_end12

cond_end12:                                       ; preds = %cond_then_block11, %cond_then_block9
  %28 = bitcast %map__charp_sVarp* %24 to i8*
  call void @xfree(i8* %28)
  br label %cond_end10
}

define void @"map_finalize_charp_sVarp75_src/class"(%map__charp_sVarp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sVarp*
  store %map__charp_sVarp* %self, %map__charp_sVarp** %self1, align 8
  %2 = bitcast %map__charp_sVarp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %self2 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sVarp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %7 = bitcast i8* %6 to %map__charp_sVarp**
  %self4 = load %map__charp_sVarp*, %map__charp_sVarp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %11 = bitcast i8* %10 to %map__charp_sVarp**
  %self5 = load %map__charp_sVarp*, %map__charp_sVarp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self20 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self20, i32 0, i32 2
  %15 = load %sVar**, %sVar*** %14, align 8
  %16 = load %sVar**, %sVar*** %14, align 8
  %17 = bitcast %sVar** %16 to i8*
  call void @xfree(i8* %17)
  %i21 = alloca i32
  %18 = bitcast i32* %i21 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i21, align 4
  br label %loop_top_block22

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 false, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i19 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i19, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %20 = bitcast i8* %19 to %map__charp_sVarp**
  %self11 = load %map__charp_sVarp*, %map__charp_sVarp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self11, i32 0, i32 2
  %22 = load %sVar**, %sVar*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sVar*, %sVar** %22, i32 %i12
  %element14 = load %sVar*, %sVar** %element_address13, align 8
  %25 = load %sVar*, %sVar** %element_address13, align 8
  %26 = ptrtoint %sVar* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sVar, %sVar* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end18, %cond_jump_then9
  %32 = bitcast %sVar* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  br label %cond_end16

loop_top_block22:                                 ; preds = %cond_end33, %cond_end_block
  %i23 = load i32, i32* %i21, align 4
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %34 = bitcast i8* %33 to %map__charp_sVarp**
  %self24 = load %map__charp_sVarp*, %map__charp_sVarp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self24, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %letmp25 = icmp slt i32 %i23, %36
  br i1 %letmp25, label %cond_then_block26, label %cond_end_block27

cond_then_block26:                                ; preds = %loop_top_block22
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %38 = bitcast i8* %37 to %map__charp_sVarp**
  %self28 = load %map__charp_sVarp*, %map__charp_sVarp** %38, align 8
  %39 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self28, i32 0, i32 1
  %40 = load i1*, i1** %39, align 8
  %i29 = load i32, i32* %i21, align 4
  %element_address30 = getelementptr i1, i1* %40, i32 %i29
  %element31 = load i1, i1* %element_address30, align 1
  br i1 %element31, label %cond_jump_then32, label %cond_end33

cond_end_block27:                                 ; preds = %loop_top_block22
  %self45 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %41 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self45, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8**, i8*** %41, align 8
  %44 = bitcast i8** %43 to i8*
  call void @xfree(i8* %44)
  %self46 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %45 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self46, i32 0, i32 1
  %46 = load i1*, i1** %45, align 8
  %47 = load i1*, i1** %45, align 8
  %48 = ptrtoint i1* %47 to i64
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %cond_then_block47, label %cond_end48

cond_jump_then32:                                 ; preds = %cond_then_block26
  br i1 true, label %cond_jump_then34, label %cond_end35

cond_end33:                                       ; preds = %cond_end35, %cond_then_block26
  %i42 = load i32, i32* %i21, align 4
  %addtmp43 = add nsw i32 %i42, 1
  store i32 %addtmp43, i32* %i21, align 4
  %subttmp44 = sub nsw i32 %addtmp43, 1
  br label %loop_top_block22

cond_jump_then34:                                 ; preds = %cond_jump_then32
  %50 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %51 = bitcast i8* %50 to %map__charp_sVarp**
  %self36 = load %map__charp_sVarp*, %map__charp_sVarp** %51, align 8
  %52 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self36, i32 0, i32 0
  %53 = load i8**, i8*** %52, align 8
  %54 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  %55 = bitcast i8* %54 to i32*
  %i37 = load i32, i32* %55, align 4
  %element_address38 = getelementptr i8*, i8** %53, i32 %i37
  %element39 = load i8*, i8** %element_address38, align 8
  %56 = load i8*, i8** %element_address38, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %cond_then_block40, label %cond_end41

cond_end35:                                       ; preds = %cond_end41, %cond_jump_then32
  br label %cond_end33

cond_then_block40:                                ; preds = %cond_jump_then34
  br label %cond_end41

cond_end41:                                       ; preds = %cond_then_block40, %cond_jump_then34
  call void @xfree(i8* %56)
  br label %cond_end35

cond_then_block47:                                ; preds = %cond_end_block27
  br label %cond_end48

cond_end48:                                       ; preds = %cond_then_block47, %cond_end_block27
  %59 = bitcast i1* %47 to i8*
  call void @xfree(i8* %59)
  %60 = bitcast [8192 x i8*]* %lvtable to i8*
  %61 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %60, i64 65536)
  ret void
}

define void @"vector_finalize_charp76_src/class"(%vector__charp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__charp*
  store %vector__charp* %self, %vector__charp** %self1, align 8
  %2 = bitcast %vector__charp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %self2 = load %vector__charp*, %vector__charp** %self1, align 8
  %eqtmpX = icmp eq %vector__charp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self12 = load %vector__charp*, %vector__charp** %self1, align 8
  %6 = getelementptr inbounds %vector__charp, %vector__charp* %self12, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = load i8**, i8*** %6, align 8
  %9 = bitcast i8** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %13 = bitcast i8* %12 to %vector__charp**
  %self6 = load %vector__charp*, %vector__charp** %13, align 8
  %14 = getelementptr inbounds %vector__charp, %vector__charp* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %17 = bitcast i8* %16 to %vector__charp**
  %self7 = load %vector__charp*, %vector__charp** %17, align 8
  %18 = getelementptr inbounds %vector__charp, %vector__charp* %self7, i32 0, i32 0
  %19 = load i8**, i8*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr i8*, i8** %19, i32 %i8
  %element = load i8*, i8** %element_address, align 8
  %20 = load i8*, i8** %element_address, align 8
  %21 = ptrtoint i8* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  br label %cond_end10

cond_end10:                                       ; preds = %cond_then_block9, %cond_then_block
  call void @xfree(i8* %20)
  %i11 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i11, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block
}

define %vector__sVarTablep* @"vector_initialize_sVarTablep77_src/class"(%vector__sVarTablep* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__sVarTablep*
  store %vector__sVarTablep* %self, %vector__sVarTablep** %self1, align 8
  %2 = bitcast %vector__sVarTablep** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %self2 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %3 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self2, i32 0, i32 2
  store i32 16, i32* %3, align 4
  %self3 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %4 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self3, i32 0, i32 1
  store i32 0, i32* %4, align 4
  %self4 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %self5 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %5 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self5, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %sext14 = zext i32 %6 to i64
  %7 = call i8* @debug_xcalloc(i64 %sext14, i64 8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_string.432, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_string.433, i32 0, i32 0), i32 452, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_string.434, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @global_string.435, i32 0, i32 0))
  %8 = bitcast i8* %7 to %sVarTable**
  %9 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self4, i32 0, i32 0
  store %sVarTable** %8, %sVarTable*** %9, align 8
  %self6 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret %vector__sVarTablep* %self6
}

define void @"vector_finalize_sVarTablep78_src/class"(%vector__sVarTablep* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__sVarTablep*
  store %vector__sVarTablep* %self, %vector__sVarTablep** %self1, align 8
  %2 = bitcast %vector__sVarTablep** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %self2 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %eqtmpX = icmp eq %vector__sVarTablep* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self14 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %6 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self14, i32 0, i32 0
  %7 = load %sVarTable**, %sVarTable*** %6, align 8
  %8 = load %sVarTable**, %sVarTable*** %6, align 8
  %9 = bitcast %sVarTable** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %13 = bitcast i8* %12 to %vector__sVarTablep**
  %self6 = load %vector__sVarTablep*, %vector__sVarTablep** %13, align 8
  %14 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to %vector__sVarTablep**
  %self7 = load %vector__sVarTablep*, %vector__sVarTablep** %17, align 8
  %18 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self7, i32 0, i32 0
  %19 = load %sVarTable**, %sVarTable*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr %sVarTable*, %sVarTable** %19, i32 %i8
  %element = load %sVarTable*, %sVarTable** %element_address, align 8
  %20 = load %sVarTable*, %sVarTable** %element_address, align 8
  %21 = ptrtoint %sVarTable* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  %23 = getelementptr inbounds %sVarTable, %sVarTable* %20, i32 0, i32 0
  %24 = load %map__charp_sVarp*, %map__charp_sVarp** %23, align 8
  call void @"map_finalize_charp_sVarp79_src/class"(%map__charp_sVarp* %24)
  %25 = ptrtoint %map__charp_sVarp* %24 to i64
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %cond_then_block11, label %cond_end12

cond_end10:                                       ; preds = %cond_end12, %cond_then_block
  %27 = bitcast %sVarTable* %20 to i8*
  call void @xfree(i8* %27)
  %i13 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i13, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_then_block11:                                ; preds = %cond_then_block9
  br label %cond_end12

cond_end12:                                       ; preds = %cond_then_block11, %cond_then_block9
  %28 = bitcast %map__charp_sVarp* %24 to i8*
  call void @xfree(i8* %28)
  br label %cond_end10
}

define void @"map_finalize_charp_sVarp79_src/class"(%map__charp_sVarp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sVarp*
  store %map__charp_sVarp* %self, %map__charp_sVarp** %self1, align 8
  %2 = bitcast %map__charp_sVarp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %self2 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sVarp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %7 = bitcast i8* %6 to %map__charp_sVarp**
  %self4 = load %map__charp_sVarp*, %map__charp_sVarp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %11 = bitcast i8* %10 to %map__charp_sVarp**
  %self5 = load %map__charp_sVarp*, %map__charp_sVarp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self20 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self20, i32 0, i32 2
  %15 = load %sVar**, %sVar*** %14, align 8
  %16 = load %sVar**, %sVar*** %14, align 8
  %17 = bitcast %sVar** %16 to i8*
  call void @xfree(i8* %17)
  %i21 = alloca i32
  %18 = bitcast i32* %i21 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 0, i32* %i21, align 4
  br label %loop_top_block22

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 false, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i19 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i19, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %20 = bitcast i8* %19 to %map__charp_sVarp**
  %self11 = load %map__charp_sVarp*, %map__charp_sVarp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self11, i32 0, i32 2
  %22 = load %sVar**, %sVar*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sVar*, %sVar** %22, i32 %i12
  %element14 = load %sVar*, %sVar** %element_address13, align 8
  %25 = load %sVar*, %sVar** %element_address13, align 8
  %26 = ptrtoint %sVar* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sVar, %sVar* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end18, %cond_jump_then9
  %32 = bitcast %sVar* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  br label %cond_end16

loop_top_block22:                                 ; preds = %cond_end33, %cond_end_block
  %i23 = load i32, i32* %i21, align 4
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %34 = bitcast i8* %33 to %map__charp_sVarp**
  %self24 = load %map__charp_sVarp*, %map__charp_sVarp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self24, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %letmp25 = icmp slt i32 %i23, %36
  br i1 %letmp25, label %cond_then_block26, label %cond_end_block27

cond_then_block26:                                ; preds = %loop_top_block22
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %38 = bitcast i8* %37 to %map__charp_sVarp**
  %self28 = load %map__charp_sVarp*, %map__charp_sVarp** %38, align 8
  %39 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self28, i32 0, i32 1
  %40 = load i1*, i1** %39, align 8
  %i29 = load i32, i32* %i21, align 4
  %element_address30 = getelementptr i1, i1* %40, i32 %i29
  %element31 = load i1, i1* %element_address30, align 1
  br i1 %element31, label %cond_jump_then32, label %cond_end33

cond_end_block27:                                 ; preds = %loop_top_block22
  %self45 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %41 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self45, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8**, i8*** %41, align 8
  %44 = bitcast i8** %43 to i8*
  call void @xfree(i8* %44)
  %self46 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %45 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self46, i32 0, i32 1
  %46 = load i1*, i1** %45, align 8
  %47 = load i1*, i1** %45, align 8
  %48 = ptrtoint i1* %47 to i64
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %cond_then_block47, label %cond_end48

cond_jump_then32:                                 ; preds = %cond_then_block26
  br i1 true, label %cond_jump_then34, label %cond_end35

cond_end33:                                       ; preds = %cond_end35, %cond_then_block26
  %i42 = load i32, i32* %i21, align 4
  %addtmp43 = add nsw i32 %i42, 1
  store i32 %addtmp43, i32* %i21, align 4
  %subttmp44 = sub nsw i32 %addtmp43, 1
  br label %loop_top_block22

cond_jump_then34:                                 ; preds = %cond_jump_then32
  %50 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %51 = bitcast i8* %50 to %map__charp_sVarp**
  %self36 = load %map__charp_sVarp*, %map__charp_sVarp** %51, align 8
  %52 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self36, i32 0, i32 0
  %53 = load i8**, i8*** %52, align 8
  %54 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %55 = bitcast i8* %54 to i32*
  %i37 = load i32, i32* %55, align 4
  %element_address38 = getelementptr i8*, i8** %53, i32 %i37
  %element39 = load i8*, i8** %element_address38, align 8
  %56 = load i8*, i8** %element_address38, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %cond_then_block40, label %cond_end41

cond_end35:                                       ; preds = %cond_end41, %cond_jump_then32
  br label %cond_end33

cond_then_block40:                                ; preds = %cond_jump_then34
  br label %cond_end41

cond_end41:                                       ; preds = %cond_then_block40, %cond_jump_then34
  call void @xfree(i8* %56)
  br label %cond_end35

cond_then_block47:                                ; preds = %cond_end_block27
  br label %cond_end48

cond_end48:                                       ; preds = %cond_then_block47, %cond_end_block27
  %59 = bitcast i1* %47 to i8*
  call void @xfree(i8* %59)
  %60 = bitcast [8192 x i8*]* %lvtable to i8*
  %61 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %60, i64 65536)
  ret void
}

define void @"vector_finalize_charp80_src/class"(%vector__charp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__charp*
  store %vector__charp* %self, %vector__charp** %self1, align 8
  %2 = bitcast %vector__charp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %self2 = load %vector__charp*, %vector__charp** %self1, align 8
  %eqtmpX = icmp eq %vector__charp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self12 = load %vector__charp*, %vector__charp** %self1, align 8
  %6 = getelementptr inbounds %vector__charp, %vector__charp* %self12, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = load i8**, i8*** %6, align 8
  %9 = bitcast i8** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %13 = bitcast i8* %12 to %vector__charp**
  %self6 = load %vector__charp*, %vector__charp** %13, align 8
  %14 = getelementptr inbounds %vector__charp, %vector__charp* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to %vector__charp**
  %self7 = load %vector__charp*, %vector__charp** %17, align 8
  %18 = getelementptr inbounds %vector__charp, %vector__charp* %self7, i32 0, i32 0
  %19 = load i8**, i8*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr i8*, i8** %19, i32 %i8
  %element = load i8*, i8** %element_address, align 8
  %20 = load i8*, i8** %element_address, align 8
  %21 = ptrtoint i8* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  br label %cond_end10

cond_end10:                                       ; preds = %cond_then_block9, %cond_then_block
  call void @xfree(i8* %20)
  %i11 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i11, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block
}

define void @"vector_finalize_sVarTablep81_src/class"(%vector__sVarTablep* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__sVarTablep*
  store %vector__sVarTablep* %self, %vector__sVarTablep** %self1, align 8
  %2 = bitcast %vector__sVarTablep** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %self2 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %eqtmpX = icmp eq %vector__sVarTablep* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self14 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %6 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self14, i32 0, i32 0
  %7 = load %sVarTable**, %sVarTable*** %6, align 8
  %8 = load %sVarTable**, %sVarTable*** %6, align 8
  %9 = bitcast %sVarTable** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %13 = bitcast i8* %12 to %vector__sVarTablep**
  %self6 = load %vector__sVarTablep*, %vector__sVarTablep** %13, align 8
  %14 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to %vector__sVarTablep**
  %self7 = load %vector__sVarTablep*, %vector__sVarTablep** %17, align 8
  %18 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self7, i32 0, i32 0
  %19 = load %sVarTable**, %sVarTable*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr %sVarTable*, %sVarTable** %19, i32 %i8
  %element = load %sVarTable*, %sVarTable** %element_address, align 8
  %20 = load %sVarTable*, %sVarTable** %element_address, align 8
  %21 = ptrtoint %sVarTable* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  %23 = getelementptr inbounds %sVarTable, %sVarTable* %20, i32 0, i32 0
  %24 = load %map__charp_sVarp*, %map__charp_sVarp** %23, align 8
  call void @"map_finalize_charp_sVarp82_src/class"(%map__charp_sVarp* %24)
  %25 = ptrtoint %map__charp_sVarp* %24 to i64
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %cond_then_block11, label %cond_end12

cond_end10:                                       ; preds = %cond_end12, %cond_then_block
  %27 = bitcast %sVarTable* %20 to i8*
  call void @xfree(i8* %27)
  %i13 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i13, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_then_block11:                                ; preds = %cond_then_block9
  br label %cond_end12

cond_end12:                                       ; preds = %cond_then_block11, %cond_then_block9
  %28 = bitcast %map__charp_sVarp* %24 to i8*
  call void @xfree(i8* %28)
  br label %cond_end10
}

define void @"map_finalize_charp_sVarp82_src/class"(%map__charp_sVarp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sVarp*
  store %map__charp_sVarp* %self, %map__charp_sVarp** %self1, align 8
  %2 = bitcast %map__charp_sVarp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %self2 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sVarp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %7 = bitcast i8* %6 to %map__charp_sVarp**
  %self4 = load %map__charp_sVarp*, %map__charp_sVarp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %11 = bitcast i8* %10 to %map__charp_sVarp**
  %self5 = load %map__charp_sVarp*, %map__charp_sVarp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self20 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self20, i32 0, i32 2
  %15 = load %sVar**, %sVar*** %14, align 8
  %16 = load %sVar**, %sVar*** %14, align 8
  %17 = bitcast %sVar** %16 to i8*
  call void @xfree(i8* %17)
  %i21 = alloca i32
  %18 = bitcast i32* %i21 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 0, i32* %i21, align 4
  br label %loop_top_block22

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 false, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i19 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i19, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %20 = bitcast i8* %19 to %map__charp_sVarp**
  %self11 = load %map__charp_sVarp*, %map__charp_sVarp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self11, i32 0, i32 2
  %22 = load %sVar**, %sVar*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sVar*, %sVar** %22, i32 %i12
  %element14 = load %sVar*, %sVar** %element_address13, align 8
  %25 = load %sVar*, %sVar** %element_address13, align 8
  %26 = ptrtoint %sVar* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sVar, %sVar* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end18, %cond_jump_then9
  %32 = bitcast %sVar* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  br label %cond_end16

loop_top_block22:                                 ; preds = %cond_end33, %cond_end_block
  %i23 = load i32, i32* %i21, align 4
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %34 = bitcast i8* %33 to %map__charp_sVarp**
  %self24 = load %map__charp_sVarp*, %map__charp_sVarp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self24, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %letmp25 = icmp slt i32 %i23, %36
  br i1 %letmp25, label %cond_then_block26, label %cond_end_block27

cond_then_block26:                                ; preds = %loop_top_block22
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %38 = bitcast i8* %37 to %map__charp_sVarp**
  %self28 = load %map__charp_sVarp*, %map__charp_sVarp** %38, align 8
  %39 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self28, i32 0, i32 1
  %40 = load i1*, i1** %39, align 8
  %i29 = load i32, i32* %i21, align 4
  %element_address30 = getelementptr i1, i1* %40, i32 %i29
  %element31 = load i1, i1* %element_address30, align 1
  br i1 %element31, label %cond_jump_then32, label %cond_end33

cond_end_block27:                                 ; preds = %loop_top_block22
  %self45 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %41 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self45, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8**, i8*** %41, align 8
  %44 = bitcast i8** %43 to i8*
  call void @xfree(i8* %44)
  %self46 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %45 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self46, i32 0, i32 1
  %46 = load i1*, i1** %45, align 8
  %47 = load i1*, i1** %45, align 8
  %48 = ptrtoint i1* %47 to i64
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %cond_then_block47, label %cond_end48

cond_jump_then32:                                 ; preds = %cond_then_block26
  br i1 true, label %cond_jump_then34, label %cond_end35

cond_end33:                                       ; preds = %cond_end35, %cond_then_block26
  %i42 = load i32, i32* %i21, align 4
  %addtmp43 = add nsw i32 %i42, 1
  store i32 %addtmp43, i32* %i21, align 4
  %subttmp44 = sub nsw i32 %addtmp43, 1
  br label %loop_top_block22

cond_jump_then34:                                 ; preds = %cond_jump_then32
  %50 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %51 = bitcast i8* %50 to %map__charp_sVarp**
  %self36 = load %map__charp_sVarp*, %map__charp_sVarp** %51, align 8
  %52 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self36, i32 0, i32 0
  %53 = load i8**, i8*** %52, align 8
  %54 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %55 = bitcast i8* %54 to i32*
  %i37 = load i32, i32* %55, align 4
  %element_address38 = getelementptr i8*, i8** %53, i32 %i37
  %element39 = load i8*, i8** %element_address38, align 8
  %56 = load i8*, i8** %element_address38, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %cond_then_block40, label %cond_end41

cond_end35:                                       ; preds = %cond_end41, %cond_jump_then32
  br label %cond_end33

cond_then_block40:                                ; preds = %cond_jump_then34
  br label %cond_end41

cond_end41:                                       ; preds = %cond_then_block40, %cond_jump_then34
  call void @xfree(i8* %56)
  br label %cond_end35

cond_then_block47:                                ; preds = %cond_end_block27
  br label %cond_end48

cond_end48:                                       ; preds = %cond_then_block47, %cond_end_block27
  %59 = bitcast i1* %47 to i8*
  call void @xfree(i8* %59)
  %60 = bitcast [8192 x i8*]* %lvtable to i8*
  %61 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %60, i64 65536)
  ret void
}

define void @"vector_finalize_charp83_src/class"(%vector__charp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__charp*
  store %vector__charp* %self, %vector__charp** %self1, align 8
  %2 = bitcast %vector__charp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %self2 = load %vector__charp*, %vector__charp** %self1, align 8
  %eqtmpX = icmp eq %vector__charp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self12 = load %vector__charp*, %vector__charp** %self1, align 8
  %6 = getelementptr inbounds %vector__charp, %vector__charp* %self12, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = load i8**, i8*** %6, align 8
  %9 = bitcast i8** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %13 = bitcast i8* %12 to %vector__charp**
  %self6 = load %vector__charp*, %vector__charp** %13, align 8
  %14 = getelementptr inbounds %vector__charp, %vector__charp* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to %vector__charp**
  %self7 = load %vector__charp*, %vector__charp** %17, align 8
  %18 = getelementptr inbounds %vector__charp, %vector__charp* %self7, i32 0, i32 0
  %19 = load i8**, i8*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr i8*, i8** %19, i32 %i8
  %element = load i8*, i8** %element_address, align 8
  %20 = load i8*, i8** %element_address, align 8
  %21 = ptrtoint i8* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  br label %cond_end10

cond_end10:                                       ; preds = %cond_then_block9, %cond_then_block
  call void @xfree(i8* %20)
  %i11 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i11, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block
}

define void @"vector_finalize_sVarTablep84_src/class"(%vector__sVarTablep* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__sVarTablep*
  store %vector__sVarTablep* %self, %vector__sVarTablep** %self1, align 8
  %2 = bitcast %vector__sVarTablep** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %self2 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %eqtmpX = icmp eq %vector__sVarTablep* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self14 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %6 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self14, i32 0, i32 0
  %7 = load %sVarTable**, %sVarTable*** %6, align 8
  %8 = load %sVarTable**, %sVarTable*** %6, align 8
  %9 = bitcast %sVarTable** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %13 = bitcast i8* %12 to %vector__sVarTablep**
  %self6 = load %vector__sVarTablep*, %vector__sVarTablep** %13, align 8
  %14 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %17 = bitcast i8* %16 to %vector__sVarTablep**
  %self7 = load %vector__sVarTablep*, %vector__sVarTablep** %17, align 8
  %18 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self7, i32 0, i32 0
  %19 = load %sVarTable**, %sVarTable*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr %sVarTable*, %sVarTable** %19, i32 %i8
  %element = load %sVarTable*, %sVarTable** %element_address, align 8
  %20 = load %sVarTable*, %sVarTable** %element_address, align 8
  %21 = ptrtoint %sVarTable* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  %23 = getelementptr inbounds %sVarTable, %sVarTable* %20, i32 0, i32 0
  %24 = load %map__charp_sVarp*, %map__charp_sVarp** %23, align 8
  call void @"map_finalize_charp_sVarp85_src/class"(%map__charp_sVarp* %24)
  %25 = ptrtoint %map__charp_sVarp* %24 to i64
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %cond_then_block11, label %cond_end12

cond_end10:                                       ; preds = %cond_end12, %cond_then_block
  %27 = bitcast %sVarTable* %20 to i8*
  call void @xfree(i8* %27)
  %i13 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i13, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_then_block11:                                ; preds = %cond_then_block9
  br label %cond_end12

cond_end12:                                       ; preds = %cond_then_block11, %cond_then_block9
  %28 = bitcast %map__charp_sVarp* %24 to i8*
  call void @xfree(i8* %28)
  br label %cond_end10
}

define void @"map_finalize_charp_sVarp85_src/class"(%map__charp_sVarp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sVarp*
  store %map__charp_sVarp* %self, %map__charp_sVarp** %self1, align 8
  %2 = bitcast %map__charp_sVarp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %self2 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sVarp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %7 = bitcast i8* %6 to %map__charp_sVarp**
  %self4 = load %map__charp_sVarp*, %map__charp_sVarp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %11 = bitcast i8* %10 to %map__charp_sVarp**
  %self5 = load %map__charp_sVarp*, %map__charp_sVarp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self20 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self20, i32 0, i32 2
  %15 = load %sVar**, %sVar*** %14, align 8
  %16 = load %sVar**, %sVar*** %14, align 8
  %17 = bitcast %sVar** %16 to i8*
  call void @xfree(i8* %17)
  %i21 = alloca i32
  %18 = bitcast i32* %i21 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  store i32 0, i32* %i21, align 4
  br label %loop_top_block22

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 false, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i19 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i19, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %20 = bitcast i8* %19 to %map__charp_sVarp**
  %self11 = load %map__charp_sVarp*, %map__charp_sVarp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self11, i32 0, i32 2
  %22 = load %sVar**, %sVar*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sVar*, %sVar** %22, i32 %i12
  %element14 = load %sVar*, %sVar** %element_address13, align 8
  %25 = load %sVar*, %sVar** %element_address13, align 8
  %26 = ptrtoint %sVar* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sVar, %sVar* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end18, %cond_jump_then9
  %32 = bitcast %sVar* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  br label %cond_end16

loop_top_block22:                                 ; preds = %cond_end33, %cond_end_block
  %i23 = load i32, i32* %i21, align 4
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %34 = bitcast i8* %33 to %map__charp_sVarp**
  %self24 = load %map__charp_sVarp*, %map__charp_sVarp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self24, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %letmp25 = icmp slt i32 %i23, %36
  br i1 %letmp25, label %cond_then_block26, label %cond_end_block27

cond_then_block26:                                ; preds = %loop_top_block22
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %38 = bitcast i8* %37 to %map__charp_sVarp**
  %self28 = load %map__charp_sVarp*, %map__charp_sVarp** %38, align 8
  %39 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self28, i32 0, i32 1
  %40 = load i1*, i1** %39, align 8
  %i29 = load i32, i32* %i21, align 4
  %element_address30 = getelementptr i1, i1* %40, i32 %i29
  %element31 = load i1, i1* %element_address30, align 1
  br i1 %element31, label %cond_jump_then32, label %cond_end33

cond_end_block27:                                 ; preds = %loop_top_block22
  %self45 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %41 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self45, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8**, i8*** %41, align 8
  %44 = bitcast i8** %43 to i8*
  call void @xfree(i8* %44)
  %self46 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %45 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self46, i32 0, i32 1
  %46 = load i1*, i1** %45, align 8
  %47 = load i1*, i1** %45, align 8
  %48 = ptrtoint i1* %47 to i64
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %cond_then_block47, label %cond_end48

cond_jump_then32:                                 ; preds = %cond_then_block26
  br i1 true, label %cond_jump_then34, label %cond_end35

cond_end33:                                       ; preds = %cond_end35, %cond_then_block26
  %i42 = load i32, i32* %i21, align 4
  %addtmp43 = add nsw i32 %i42, 1
  store i32 %addtmp43, i32* %i21, align 4
  %subttmp44 = sub nsw i32 %addtmp43, 1
  br label %loop_top_block22

cond_jump_then34:                                 ; preds = %cond_jump_then32
  %50 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %51 = bitcast i8* %50 to %map__charp_sVarp**
  %self36 = load %map__charp_sVarp*, %map__charp_sVarp** %51, align 8
  %52 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self36, i32 0, i32 0
  %53 = load i8**, i8*** %52, align 8
  %54 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %55 = bitcast i8* %54 to i32*
  %i37 = load i32, i32* %55, align 4
  %element_address38 = getelementptr i8*, i8** %53, i32 %i37
  %element39 = load i8*, i8** %element_address38, align 8
  %56 = load i8*, i8** %element_address38, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %cond_then_block40, label %cond_end41

cond_end35:                                       ; preds = %cond_end41, %cond_jump_then32
  br label %cond_end33

cond_then_block40:                                ; preds = %cond_jump_then34
  br label %cond_end41

cond_end41:                                       ; preds = %cond_then_block40, %cond_jump_then34
  call void @xfree(i8* %56)
  br label %cond_end35

cond_then_block47:                                ; preds = %cond_end_block27
  br label %cond_end48

cond_end48:                                       ; preds = %cond_then_block47, %cond_end_block27
  %59 = bitcast i1* %47 to i8*
  call void @xfree(i8* %59)
  %60 = bitcast [8192 x i8*]* %lvtable to i8*
  %61 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %60, i64 65536)
  ret void
}

define void @"vector_finalize_charp86_src/class"(%vector__charp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__charp*
  store %vector__charp* %self, %vector__charp** %self1, align 8
  %2 = bitcast %vector__charp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %self2 = load %vector__charp*, %vector__charp** %self1, align 8
  %eqtmpX = icmp eq %vector__charp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self12 = load %vector__charp*, %vector__charp** %self1, align 8
  %6 = getelementptr inbounds %vector__charp, %vector__charp* %self12, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = load i8**, i8*** %6, align 8
  %9 = bitcast i8** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %13 = bitcast i8* %12 to %vector__charp**
  %self6 = load %vector__charp*, %vector__charp** %13, align 8
  %14 = getelementptr inbounds %vector__charp, %vector__charp* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %17 = bitcast i8* %16 to %vector__charp**
  %self7 = load %vector__charp*, %vector__charp** %17, align 8
  %18 = getelementptr inbounds %vector__charp, %vector__charp* %self7, i32 0, i32 0
  %19 = load i8**, i8*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr i8*, i8** %19, i32 %i8
  %element = load i8*, i8** %element_address, align 8
  %20 = load i8*, i8** %element_address, align 8
  %21 = ptrtoint i8* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  br label %cond_end10

cond_end10:                                       ; preds = %cond_then_block9, %cond_then_block
  call void @xfree(i8* %20)
  %i11 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i11, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block
}

define void @"vector_finalize_sVarTablep87_src/class"(%vector__sVarTablep* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__sVarTablep*
  store %vector__sVarTablep* %self, %vector__sVarTablep** %self1, align 8
  %2 = bitcast %vector__sVarTablep** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %self2 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %eqtmpX = icmp eq %vector__sVarTablep* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self14 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %6 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self14, i32 0, i32 0
  %7 = load %sVarTable**, %sVarTable*** %6, align 8
  %8 = load %sVarTable**, %sVarTable*** %6, align 8
  %9 = bitcast %sVarTable** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %13 = bitcast i8* %12 to %vector__sVarTablep**
  %self6 = load %vector__sVarTablep*, %vector__sVarTablep** %13, align 8
  %14 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %17 = bitcast i8* %16 to %vector__sVarTablep**
  %self7 = load %vector__sVarTablep*, %vector__sVarTablep** %17, align 8
  %18 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self7, i32 0, i32 0
  %19 = load %sVarTable**, %sVarTable*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr %sVarTable*, %sVarTable** %19, i32 %i8
  %element = load %sVarTable*, %sVarTable** %element_address, align 8
  %20 = load %sVarTable*, %sVarTable** %element_address, align 8
  %21 = ptrtoint %sVarTable* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  %23 = getelementptr inbounds %sVarTable, %sVarTable* %20, i32 0, i32 0
  %24 = load %map__charp_sVarp*, %map__charp_sVarp** %23, align 8
  call void @"map_finalize_charp_sVarp88_src/class"(%map__charp_sVarp* %24)
  %25 = ptrtoint %map__charp_sVarp* %24 to i64
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %cond_then_block11, label %cond_end12

cond_end10:                                       ; preds = %cond_end12, %cond_then_block
  %27 = bitcast %sVarTable* %20 to i8*
  call void @xfree(i8* %27)
  %i13 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i13, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_then_block11:                                ; preds = %cond_then_block9
  br label %cond_end12

cond_end12:                                       ; preds = %cond_then_block11, %cond_then_block9
  %28 = bitcast %map__charp_sVarp* %24 to i8*
  call void @xfree(i8* %28)
  br label %cond_end10
}

define void @"map_finalize_charp_sVarp88_src/class"(%map__charp_sVarp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sVarp*
  store %map__charp_sVarp* %self, %map__charp_sVarp** %self1, align 8
  %2 = bitcast %map__charp_sVarp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %self2 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sVarp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %7 = bitcast i8* %6 to %map__charp_sVarp**
  %self4 = load %map__charp_sVarp*, %map__charp_sVarp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %11 = bitcast i8* %10 to %map__charp_sVarp**
  %self5 = load %map__charp_sVarp*, %map__charp_sVarp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self20 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self20, i32 0, i32 2
  %15 = load %sVar**, %sVar*** %14, align 8
  %16 = load %sVar**, %sVar*** %14, align 8
  %17 = bitcast %sVar** %16 to i8*
  call void @xfree(i8* %17)
  %i21 = alloca i32
  %18 = bitcast i32* %i21 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  store i32 0, i32* %i21, align 4
  br label %loop_top_block22

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 false, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i19 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i19, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %20 = bitcast i8* %19 to %map__charp_sVarp**
  %self11 = load %map__charp_sVarp*, %map__charp_sVarp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self11, i32 0, i32 2
  %22 = load %sVar**, %sVar*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sVar*, %sVar** %22, i32 %i12
  %element14 = load %sVar*, %sVar** %element_address13, align 8
  %25 = load %sVar*, %sVar** %element_address13, align 8
  %26 = ptrtoint %sVar* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sVar, %sVar* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end18, %cond_jump_then9
  %32 = bitcast %sVar* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  br label %cond_end16

loop_top_block22:                                 ; preds = %cond_end33, %cond_end_block
  %i23 = load i32, i32* %i21, align 4
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %34 = bitcast i8* %33 to %map__charp_sVarp**
  %self24 = load %map__charp_sVarp*, %map__charp_sVarp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self24, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %letmp25 = icmp slt i32 %i23, %36
  br i1 %letmp25, label %cond_then_block26, label %cond_end_block27

cond_then_block26:                                ; preds = %loop_top_block22
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %38 = bitcast i8* %37 to %map__charp_sVarp**
  %self28 = load %map__charp_sVarp*, %map__charp_sVarp** %38, align 8
  %39 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self28, i32 0, i32 1
  %40 = load i1*, i1** %39, align 8
  %i29 = load i32, i32* %i21, align 4
  %element_address30 = getelementptr i1, i1* %40, i32 %i29
  %element31 = load i1, i1* %element_address30, align 1
  br i1 %element31, label %cond_jump_then32, label %cond_end33

cond_end_block27:                                 ; preds = %loop_top_block22
  %self45 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %41 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self45, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8**, i8*** %41, align 8
  %44 = bitcast i8** %43 to i8*
  call void @xfree(i8* %44)
  %self46 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %45 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self46, i32 0, i32 1
  %46 = load i1*, i1** %45, align 8
  %47 = load i1*, i1** %45, align 8
  %48 = ptrtoint i1* %47 to i64
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %cond_then_block47, label %cond_end48

cond_jump_then32:                                 ; preds = %cond_then_block26
  br i1 true, label %cond_jump_then34, label %cond_end35

cond_end33:                                       ; preds = %cond_end35, %cond_then_block26
  %i42 = load i32, i32* %i21, align 4
  %addtmp43 = add nsw i32 %i42, 1
  store i32 %addtmp43, i32* %i21, align 4
  %subttmp44 = sub nsw i32 %addtmp43, 1
  br label %loop_top_block22

cond_jump_then34:                                 ; preds = %cond_jump_then32
  %50 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %51 = bitcast i8* %50 to %map__charp_sVarp**
  %self36 = load %map__charp_sVarp*, %map__charp_sVarp** %51, align 8
  %52 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self36, i32 0, i32 0
  %53 = load i8**, i8*** %52, align 8
  %54 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %55 = bitcast i8* %54 to i32*
  %i37 = load i32, i32* %55, align 4
  %element_address38 = getelementptr i8*, i8** %53, i32 %i37
  %element39 = load i8*, i8** %element_address38, align 8
  %56 = load i8*, i8** %element_address38, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %cond_then_block40, label %cond_end41

cond_end35:                                       ; preds = %cond_end41, %cond_jump_then32
  br label %cond_end33

cond_then_block40:                                ; preds = %cond_jump_then34
  br label %cond_end41

cond_end41:                                       ; preds = %cond_then_block40, %cond_jump_then34
  call void @xfree(i8* %56)
  br label %cond_end35

cond_then_block47:                                ; preds = %cond_end_block27
  br label %cond_end48

cond_end48:                                       ; preds = %cond_then_block47, %cond_end_block27
  %59 = bitcast i1* %47 to i8*
  call void @xfree(i8* %59)
  %60 = bitcast [8192 x i8*]* %lvtable to i8*
  %61 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %60, i64 65536)
  ret void
}

define void @"vector_finalize_charp89_src/class"(%vector__charp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__charp*
  store %vector__charp* %self, %vector__charp** %self1, align 8
  %2 = bitcast %vector__charp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %self2 = load %vector__charp*, %vector__charp** %self1, align 8
  %eqtmpX = icmp eq %vector__charp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self12 = load %vector__charp*, %vector__charp** %self1, align 8
  %6 = getelementptr inbounds %vector__charp, %vector__charp* %self12, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = load i8**, i8*** %6, align 8
  %9 = bitcast i8** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %13 = bitcast i8* %12 to %vector__charp**
  %self6 = load %vector__charp*, %vector__charp** %13, align 8
  %14 = getelementptr inbounds %vector__charp, %vector__charp* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %17 = bitcast i8* %16 to %vector__charp**
  %self7 = load %vector__charp*, %vector__charp** %17, align 8
  %18 = getelementptr inbounds %vector__charp, %vector__charp* %self7, i32 0, i32 0
  %19 = load i8**, i8*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr i8*, i8** %19, i32 %i8
  %element = load i8*, i8** %element_address, align 8
  %20 = load i8*, i8** %element_address, align 8
  %21 = ptrtoint i8* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  br label %cond_end10

cond_end10:                                       ; preds = %cond_then_block9, %cond_then_block
  call void @xfree(i8* %20)
  %i11 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i11, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block
}

define void @"vector_finalize_sVarTablep90_src/class"(%vector__sVarTablep* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__sVarTablep*
  store %vector__sVarTablep* %self, %vector__sVarTablep** %self1, align 8
  %2 = bitcast %vector__sVarTablep** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %self2 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %eqtmpX = icmp eq %vector__sVarTablep* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self14 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %6 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self14, i32 0, i32 0
  %7 = load %sVarTable**, %sVarTable*** %6, align 8
  %8 = load %sVarTable**, %sVarTable*** %6, align 8
  %9 = bitcast %sVarTable** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %13 = bitcast i8* %12 to %vector__sVarTablep**
  %self6 = load %vector__sVarTablep*, %vector__sVarTablep** %13, align 8
  %14 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %17 = bitcast i8* %16 to %vector__sVarTablep**
  %self7 = load %vector__sVarTablep*, %vector__sVarTablep** %17, align 8
  %18 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self7, i32 0, i32 0
  %19 = load %sVarTable**, %sVarTable*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr %sVarTable*, %sVarTable** %19, i32 %i8
  %element = load %sVarTable*, %sVarTable** %element_address, align 8
  %20 = load %sVarTable*, %sVarTable** %element_address, align 8
  %21 = ptrtoint %sVarTable* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  %23 = getelementptr inbounds %sVarTable, %sVarTable* %20, i32 0, i32 0
  %24 = load %map__charp_sVarp*, %map__charp_sVarp** %23, align 8
  call void @"map_finalize_charp_sVarp91_src/class"(%map__charp_sVarp* %24)
  %25 = ptrtoint %map__charp_sVarp* %24 to i64
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %cond_then_block11, label %cond_end12

cond_end10:                                       ; preds = %cond_end12, %cond_then_block
  %27 = bitcast %sVarTable* %20 to i8*
  call void @xfree(i8* %27)
  %i13 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i13, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_then_block11:                                ; preds = %cond_then_block9
  br label %cond_end12

cond_end12:                                       ; preds = %cond_then_block11, %cond_then_block9
  %28 = bitcast %map__charp_sVarp* %24 to i8*
  call void @xfree(i8* %28)
  br label %cond_end10
}

define void @"map_finalize_charp_sVarp91_src/class"(%map__charp_sVarp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sVarp*
  store %map__charp_sVarp* %self, %map__charp_sVarp** %self1, align 8
  %2 = bitcast %map__charp_sVarp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %self2 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sVarp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %7 = bitcast i8* %6 to %map__charp_sVarp**
  %self4 = load %map__charp_sVarp*, %map__charp_sVarp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %11 = bitcast i8* %10 to %map__charp_sVarp**
  %self5 = load %map__charp_sVarp*, %map__charp_sVarp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self20 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self20, i32 0, i32 2
  %15 = load %sVar**, %sVar*** %14, align 8
  %16 = load %sVar**, %sVar*** %14, align 8
  %17 = bitcast %sVar** %16 to i8*
  call void @xfree(i8* %17)
  %i21 = alloca i32
  %18 = bitcast i32* %i21 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  store i32 0, i32* %i21, align 4
  br label %loop_top_block22

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 false, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i19 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i19, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %20 = bitcast i8* %19 to %map__charp_sVarp**
  %self11 = load %map__charp_sVarp*, %map__charp_sVarp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self11, i32 0, i32 2
  %22 = load %sVar**, %sVar*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sVar*, %sVar** %22, i32 %i12
  %element14 = load %sVar*, %sVar** %element_address13, align 8
  %25 = load %sVar*, %sVar** %element_address13, align 8
  %26 = ptrtoint %sVar* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sVar, %sVar* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end18, %cond_jump_then9
  %32 = bitcast %sVar* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  br label %cond_end16

loop_top_block22:                                 ; preds = %cond_end33, %cond_end_block
  %i23 = load i32, i32* %i21, align 4
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %34 = bitcast i8* %33 to %map__charp_sVarp**
  %self24 = load %map__charp_sVarp*, %map__charp_sVarp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self24, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %letmp25 = icmp slt i32 %i23, %36
  br i1 %letmp25, label %cond_then_block26, label %cond_end_block27

cond_then_block26:                                ; preds = %loop_top_block22
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %38 = bitcast i8* %37 to %map__charp_sVarp**
  %self28 = load %map__charp_sVarp*, %map__charp_sVarp** %38, align 8
  %39 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self28, i32 0, i32 1
  %40 = load i1*, i1** %39, align 8
  %i29 = load i32, i32* %i21, align 4
  %element_address30 = getelementptr i1, i1* %40, i32 %i29
  %element31 = load i1, i1* %element_address30, align 1
  br i1 %element31, label %cond_jump_then32, label %cond_end33

cond_end_block27:                                 ; preds = %loop_top_block22
  %self45 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %41 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self45, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8**, i8*** %41, align 8
  %44 = bitcast i8** %43 to i8*
  call void @xfree(i8* %44)
  %self46 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %45 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self46, i32 0, i32 1
  %46 = load i1*, i1** %45, align 8
  %47 = load i1*, i1** %45, align 8
  %48 = ptrtoint i1* %47 to i64
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %cond_then_block47, label %cond_end48

cond_jump_then32:                                 ; preds = %cond_then_block26
  br i1 true, label %cond_jump_then34, label %cond_end35

cond_end33:                                       ; preds = %cond_end35, %cond_then_block26
  %i42 = load i32, i32* %i21, align 4
  %addtmp43 = add nsw i32 %i42, 1
  store i32 %addtmp43, i32* %i21, align 4
  %subttmp44 = sub nsw i32 %addtmp43, 1
  br label %loop_top_block22

cond_jump_then34:                                 ; preds = %cond_jump_then32
  %50 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 449), align 8
  %51 = bitcast i8* %50 to %map__charp_sVarp**
  %self36 = load %map__charp_sVarp*, %map__charp_sVarp** %51, align 8
  %52 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self36, i32 0, i32 0
  %53 = load i8**, i8*** %52, align 8
  %54 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 450), align 8
  %55 = bitcast i8* %54 to i32*
  %i37 = load i32, i32* %55, align 4
  %element_address38 = getelementptr i8*, i8** %53, i32 %i37
  %element39 = load i8*, i8** %element_address38, align 8
  %56 = load i8*, i8** %element_address38, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %cond_then_block40, label %cond_end41

cond_end35:                                       ; preds = %cond_end41, %cond_jump_then32
  br label %cond_end33

cond_then_block40:                                ; preds = %cond_jump_then34
  br label %cond_end41

cond_end41:                                       ; preds = %cond_then_block40, %cond_jump_then34
  call void @xfree(i8* %56)
  br label %cond_end35

cond_then_block47:                                ; preds = %cond_end_block27
  br label %cond_end48

cond_end48:                                       ; preds = %cond_then_block47, %cond_end_block27
  %59 = bitcast i1* %47 to i8*
  call void @xfree(i8* %59)
  %60 = bitcast [8192 x i8*]* %lvtable to i8*
  %61 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %60, i64 65536)
  ret void
}

define void @"vector_finalize_charp92_src/class"(%vector__charp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__charp*
  store %vector__charp* %self, %vector__charp** %self1, align 8
  %2 = bitcast %vector__charp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %self2 = load %vector__charp*, %vector__charp** %self1, align 8
  %eqtmpX = icmp eq %vector__charp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 448), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self12 = load %vector__charp*, %vector__charp** %self1, align 8
  %6 = getelementptr inbounds %vector__charp, %vector__charp* %self12, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = load i8**, i8*** %6, align 8
  %9 = bitcast i8** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %13 = bitcast i8* %12 to %vector__charp**
  %self6 = load %vector__charp*, %vector__charp** %13, align 8
  %14 = getelementptr inbounds %vector__charp, %vector__charp* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 447), align 8
  %17 = bitcast i8* %16 to %vector__charp**
  %self7 = load %vector__charp*, %vector__charp** %17, align 8
  %18 = getelementptr inbounds %vector__charp, %vector__charp* %self7, i32 0, i32 0
  %19 = load i8**, i8*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr i8*, i8** %19, i32 %i8
  %element = load i8*, i8** %element_address, align 8
  %20 = load i8*, i8** %element_address, align 8
  %21 = ptrtoint i8* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  br label %cond_end10

cond_end10:                                       ; preds = %cond_then_block9, %cond_then_block
  call void @xfree(i8* %20)
  %i11 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i11, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block
}

define void @"vector_finalize_sVarTablep93_src/class"(%vector__sVarTablep* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__sVarTablep*
  store %vector__sVarTablep* %self, %vector__sVarTablep** %self1, align 8
  %2 = bitcast %vector__sVarTablep** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %self2 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %eqtmpX = icmp eq %vector__sVarTablep* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 444), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self14 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %6 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self14, i32 0, i32 0
  %7 = load %sVarTable**, %sVarTable*** %6, align 8
  %8 = load %sVarTable**, %sVarTable*** %6, align 8
  %9 = bitcast %sVarTable** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %13 = bitcast i8* %12 to %vector__sVarTablep**
  %self6 = load %vector__sVarTablep*, %vector__sVarTablep** %13, align 8
  %14 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 443), align 8
  %17 = bitcast i8* %16 to %vector__sVarTablep**
  %self7 = load %vector__sVarTablep*, %vector__sVarTablep** %17, align 8
  %18 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self7, i32 0, i32 0
  %19 = load %sVarTable**, %sVarTable*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr %sVarTable*, %sVarTable** %19, i32 %i8
  %element = load %sVarTable*, %sVarTable** %element_address, align 8
  %20 = load %sVarTable*, %sVarTable** %element_address, align 8
  %21 = ptrtoint %sVarTable* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  %23 = getelementptr inbounds %sVarTable, %sVarTable* %20, i32 0, i32 0
  %24 = load %map__charp_sVarp*, %map__charp_sVarp** %23, align 8
  call void @"map_finalize_charp_sVarp94_src/class"(%map__charp_sVarp* %24)
  %25 = ptrtoint %map__charp_sVarp* %24 to i64
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %cond_then_block11, label %cond_end12

cond_end10:                                       ; preds = %cond_end12, %cond_then_block
  %27 = bitcast %sVarTable* %20 to i8*
  call void @xfree(i8* %27)
  %i13 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i13, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_then_block11:                                ; preds = %cond_then_block9
  br label %cond_end12

cond_end12:                                       ; preds = %cond_then_block11, %cond_then_block9
  %28 = bitcast %map__charp_sVarp* %24 to i8*
  call void @xfree(i8* %28)
  br label %cond_end10
}

define void @"map_finalize_charp_sVarp94_src/class"(%map__charp_sVarp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sVarp*
  store %map__charp_sVarp* %self, %map__charp_sVarp** %self1, align 8
  %2 = bitcast %map__charp_sVarp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %self2 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sVarp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %7 = bitcast i8* %6 to %map__charp_sVarp**
  %self4 = load %map__charp_sVarp*, %map__charp_sVarp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %11 = bitcast i8* %10 to %map__charp_sVarp**
  %self5 = load %map__charp_sVarp*, %map__charp_sVarp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self20 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self20, i32 0, i32 2
  %15 = load %sVar**, %sVar*** %14, align 8
  %16 = load %sVar**, %sVar*** %14, align 8
  %17 = bitcast %sVar** %16 to i8*
  call void @xfree(i8* %17)
  %i21 = alloca i32
  %18 = bitcast i32* %i21 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  store i32 0, i32* %i21, align 4
  br label %loop_top_block22

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 false, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i19 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i19, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %20 = bitcast i8* %19 to %map__charp_sVarp**
  %self11 = load %map__charp_sVarp*, %map__charp_sVarp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self11, i32 0, i32 2
  %22 = load %sVar**, %sVar*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sVar*, %sVar** %22, i32 %i12
  %element14 = load %sVar*, %sVar** %element_address13, align 8
  %25 = load %sVar*, %sVar** %element_address13, align 8
  %26 = ptrtoint %sVar* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sVar, %sVar* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end18, %cond_jump_then9
  %32 = bitcast %sVar* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  br label %cond_end16

loop_top_block22:                                 ; preds = %cond_end33, %cond_end_block
  %i23 = load i32, i32* %i21, align 4
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %34 = bitcast i8* %33 to %map__charp_sVarp**
  %self24 = load %map__charp_sVarp*, %map__charp_sVarp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self24, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %letmp25 = icmp slt i32 %i23, %36
  br i1 %letmp25, label %cond_then_block26, label %cond_end_block27

cond_then_block26:                                ; preds = %loop_top_block22
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %38 = bitcast i8* %37 to %map__charp_sVarp**
  %self28 = load %map__charp_sVarp*, %map__charp_sVarp** %38, align 8
  %39 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self28, i32 0, i32 1
  %40 = load i1*, i1** %39, align 8
  %i29 = load i32, i32* %i21, align 4
  %element_address30 = getelementptr i1, i1* %40, i32 %i29
  %element31 = load i1, i1* %element_address30, align 1
  br i1 %element31, label %cond_jump_then32, label %cond_end33

cond_end_block27:                                 ; preds = %loop_top_block22
  %self45 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %41 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self45, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8**, i8*** %41, align 8
  %44 = bitcast i8** %43 to i8*
  call void @xfree(i8* %44)
  %self46 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %45 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self46, i32 0, i32 1
  %46 = load i1*, i1** %45, align 8
  %47 = load i1*, i1** %45, align 8
  %48 = ptrtoint i1* %47 to i64
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %cond_then_block47, label %cond_end48

cond_jump_then32:                                 ; preds = %cond_then_block26
  br i1 true, label %cond_jump_then34, label %cond_end35

cond_end33:                                       ; preds = %cond_end35, %cond_then_block26
  %i42 = load i32, i32* %i21, align 4
  %addtmp43 = add nsw i32 %i42, 1
  store i32 %addtmp43, i32* %i21, align 4
  %subttmp44 = sub nsw i32 %addtmp43, 1
  br label %loop_top_block22

cond_jump_then34:                                 ; preds = %cond_jump_then32
  %50 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 445), align 8
  %51 = bitcast i8* %50 to %map__charp_sVarp**
  %self36 = load %map__charp_sVarp*, %map__charp_sVarp** %51, align 8
  %52 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self36, i32 0, i32 0
  %53 = load i8**, i8*** %52, align 8
  %54 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 446), align 8
  %55 = bitcast i8* %54 to i32*
  %i37 = load i32, i32* %55, align 4
  %element_address38 = getelementptr i8*, i8** %53, i32 %i37
  %element39 = load i8*, i8** %element_address38, align 8
  %56 = load i8*, i8** %element_address38, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %cond_then_block40, label %cond_end41

cond_end35:                                       ; preds = %cond_end41, %cond_jump_then32
  br label %cond_end33

cond_then_block40:                                ; preds = %cond_jump_then34
  br label %cond_end41

cond_end41:                                       ; preds = %cond_then_block40, %cond_jump_then34
  call void @xfree(i8* %56)
  br label %cond_end35

cond_then_block47:                                ; preds = %cond_end_block27
  br label %cond_end48

cond_end48:                                       ; preds = %cond_then_block47, %cond_end_block27
  %59 = bitcast i1* %47 to i8*
  call void @xfree(i8* %59)
  %60 = bitcast [8192 x i8*]* %lvtable to i8*
  %61 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %60, i64 65536)
  ret void
}

define void @"vector_finalize_sVarTablep95_src/class"(%vector__sVarTablep* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__sVarTablep*
  store %vector__sVarTablep* %self, %vector__sVarTablep** %self1, align 8
  %2 = bitcast %vector__sVarTablep** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %self2 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %eqtmpX = icmp eq %vector__sVarTablep* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self14 = load %vector__sVarTablep*, %vector__sVarTablep** %self1, align 8
  %6 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self14, i32 0, i32 0
  %7 = load %sVarTable**, %sVarTable*** %6, align 8
  %8 = load %sVarTable**, %sVarTable*** %6, align 8
  %9 = bitcast %sVarTable** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %13 = bitcast i8* %12 to %vector__sVarTablep**
  %self6 = load %vector__sVarTablep*, %vector__sVarTablep** %13, align 8
  %14 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %17 = bitcast i8* %16 to %vector__sVarTablep**
  %self7 = load %vector__sVarTablep*, %vector__sVarTablep** %17, align 8
  %18 = getelementptr inbounds %vector__sVarTablep, %vector__sVarTablep* %self7, i32 0, i32 0
  %19 = load %sVarTable**, %sVarTable*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr %sVarTable*, %sVarTable** %19, i32 %i8
  %element = load %sVarTable*, %sVarTable** %element_address, align 8
  %20 = load %sVarTable*, %sVarTable** %element_address, align 8
  %21 = ptrtoint %sVarTable* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  %23 = getelementptr inbounds %sVarTable, %sVarTable* %20, i32 0, i32 0
  %24 = load %map__charp_sVarp*, %map__charp_sVarp** %23, align 8
  call void @"map_finalize_charp_sVarp96_src/class"(%map__charp_sVarp* %24)
  %25 = ptrtoint %map__charp_sVarp* %24 to i64
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %cond_then_block11, label %cond_end12

cond_end10:                                       ; preds = %cond_end12, %cond_then_block
  %27 = bitcast %sVarTable* %20 to i8*
  call void @xfree(i8* %27)
  %i13 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i13, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_then_block11:                                ; preds = %cond_then_block9
  br label %cond_end12

cond_end12:                                       ; preds = %cond_then_block11, %cond_then_block9
  %28 = bitcast %map__charp_sVarp* %24 to i8*
  call void @xfree(i8* %28)
  br label %cond_end10
}

define void @"map_finalize_charp_sVarp96_src/class"(%map__charp_sVarp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %map__charp_sVarp*
  store %map__charp_sVarp* %self, %map__charp_sVarp** %self1, align 8
  %2 = bitcast %map__charp_sVarp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %self2 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %eqtmpX = icmp eq %map__charp_sVarp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

loop_top_block:                                   ; preds = %cond_end8, %cond_end
  %i3 = load i32, i32* %i, align 4
  %6 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %7 = bitcast i8* %6 to %map__charp_sVarp**
  %self4 = load %map__charp_sVarp*, %map__charp_sVarp** %7, align 8
  %8 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self4, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %letmp = icmp slt i32 %i3, %9
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %10 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %11 = bitcast i8* %10 to %map__charp_sVarp**
  %self5 = load %map__charp_sVarp*, %map__charp_sVarp** %11, align 8
  %12 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self5, i32 0, i32 1
  %13 = load i1*, i1** %12, align 8
  %i6 = load i32, i32* %i, align 4
  %element_address = getelementptr i1, i1* %13, i32 %i6
  %element = load i1, i1* %element_address, align 1
  br i1 %element, label %cond_jump_then7, label %cond_end8

cond_end_block:                                   ; preds = %loop_top_block
  %self20 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %14 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self20, i32 0, i32 2
  %15 = load %sVar**, %sVar*** %14, align 8
  %16 = load %sVar**, %sVar*** %14, align 8
  %17 = bitcast %sVar** %16 to i8*
  call void @xfree(i8* %17)
  %i21 = alloca i32
  %18 = bitcast i32* %i21 to i8*
  store i8* %18, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  store i32 0, i32* %i21, align 4
  br label %loop_top_block22

cond_jump_then7:                                  ; preds = %cond_then_block
  br i1 false, label %cond_jump_then9, label %cond_end10

cond_end8:                                        ; preds = %cond_end10, %cond_then_block
  %i19 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i19, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block

cond_jump_then9:                                  ; preds = %cond_jump_then7
  %19 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %20 = bitcast i8* %19 to %map__charp_sVarp**
  %self11 = load %map__charp_sVarp*, %map__charp_sVarp** %20, align 8
  %21 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self11, i32 0, i32 2
  %22 = load %sVar**, %sVar*** %21, align 8
  %23 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %24 = bitcast i8* %23 to i32*
  %i12 = load i32, i32* %24, align 4
  %element_address13 = getelementptr %sVar*, %sVar** %22, i32 %i12
  %element14 = load %sVar*, %sVar** %element_address13, align 8
  %25 = load %sVar*, %sVar** %element_address13, align 8
  %26 = ptrtoint %sVar* %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %cond_then_block15, label %cond_end16

cond_end10:                                       ; preds = %cond_end16, %cond_jump_then7
  br label %cond_end8

cond_then_block15:                                ; preds = %cond_jump_then9
  %28 = getelementptr inbounds %sVar, %sVar* %25, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %cond_then_block17, label %cond_end18

cond_end16:                                       ; preds = %cond_end18, %cond_jump_then9
  %32 = bitcast %sVar* %25 to i8*
  call void @xfree(i8* %32)
  br label %cond_end10

cond_then_block17:                                ; preds = %cond_then_block15
  br label %cond_end18

cond_end18:                                       ; preds = %cond_then_block17, %cond_then_block15
  call void @xfree(i8* %29)
  br label %cond_end16

loop_top_block22:                                 ; preds = %cond_end33, %cond_end_block
  %i23 = load i32, i32* %i21, align 4
  %33 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %34 = bitcast i8* %33 to %map__charp_sVarp**
  %self24 = load %map__charp_sVarp*, %map__charp_sVarp** %34, align 8
  %35 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self24, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %letmp25 = icmp slt i32 %i23, %36
  br i1 %letmp25, label %cond_then_block26, label %cond_end_block27

cond_then_block26:                                ; preds = %loop_top_block22
  %37 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %38 = bitcast i8* %37 to %map__charp_sVarp**
  %self28 = load %map__charp_sVarp*, %map__charp_sVarp** %38, align 8
  %39 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self28, i32 0, i32 1
  %40 = load i1*, i1** %39, align 8
  %i29 = load i32, i32* %i21, align 4
  %element_address30 = getelementptr i1, i1* %40, i32 %i29
  %element31 = load i1, i1* %element_address30, align 1
  br i1 %element31, label %cond_jump_then32, label %cond_end33

cond_end_block27:                                 ; preds = %loop_top_block22
  %self45 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %41 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self45, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i8**, i8*** %41, align 8
  %44 = bitcast i8** %43 to i8*
  call void @xfree(i8* %44)
  %self46 = load %map__charp_sVarp*, %map__charp_sVarp** %self1, align 8
  %45 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self46, i32 0, i32 1
  %46 = load i1*, i1** %45, align 8
  %47 = load i1*, i1** %45, align 8
  %48 = ptrtoint i1* %47 to i64
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %cond_then_block47, label %cond_end48

cond_jump_then32:                                 ; preds = %cond_then_block26
  br i1 true, label %cond_jump_then34, label %cond_end35

cond_end33:                                       ; preds = %cond_end35, %cond_then_block26
  %i42 = load i32, i32* %i21, align 4
  %addtmp43 = add nsw i32 %i42, 1
  store i32 %addtmp43, i32* %i21, align 4
  %subttmp44 = sub nsw i32 %addtmp43, 1
  br label %loop_top_block22

cond_jump_then34:                                 ; preds = %cond_jump_then32
  %50 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 441), align 8
  %51 = bitcast i8* %50 to %map__charp_sVarp**
  %self36 = load %map__charp_sVarp*, %map__charp_sVarp** %51, align 8
  %52 = getelementptr inbounds %map__charp_sVarp, %map__charp_sVarp* %self36, i32 0, i32 0
  %53 = load i8**, i8*** %52, align 8
  %54 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 442), align 8
  %55 = bitcast i8* %54 to i32*
  %i37 = load i32, i32* %55, align 4
  %element_address38 = getelementptr i8*, i8** %53, i32 %i37
  %element39 = load i8*, i8** %element_address38, align 8
  %56 = load i8*, i8** %element_address38, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %cond_then_block40, label %cond_end41

cond_end35:                                       ; preds = %cond_end41, %cond_jump_then32
  br label %cond_end33

cond_then_block40:                                ; preds = %cond_jump_then34
  br label %cond_end41

cond_end41:                                       ; preds = %cond_then_block40, %cond_jump_then34
  call void @xfree(i8* %56)
  br label %cond_end35

cond_then_block47:                                ; preds = %cond_end_block27
  br label %cond_end48

cond_end48:                                       ; preds = %cond_then_block47, %cond_end_block27
  %59 = bitcast i1* %47 to i8*
  call void @xfree(i8* %59)
  %60 = bitcast [8192 x i8*]* %lvtable to i8*
  %61 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %60, i64 65536)
  ret void
}

define void @"vector_finalize_charp97_src/class"(%vector__charp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__charp*
  store %vector__charp* %self, %vector__charp** %self1, align 8
  %2 = bitcast %vector__charp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %self2 = load %vector__charp*, %vector__charp** %self1, align 8
  %eqtmpX = icmp eq %vector__charp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 440), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self12 = load %vector__charp*, %vector__charp** %self1, align 8
  %6 = getelementptr inbounds %vector__charp, %vector__charp* %self12, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = load i8**, i8*** %6, align 8
  %9 = bitcast i8** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %13 = bitcast i8* %12 to %vector__charp**
  %self6 = load %vector__charp*, %vector__charp** %13, align 8
  %14 = getelementptr inbounds %vector__charp, %vector__charp* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  %17 = bitcast i8* %16 to %vector__charp**
  %self7 = load %vector__charp*, %vector__charp** %17, align 8
  %18 = getelementptr inbounds %vector__charp, %vector__charp* %self7, i32 0, i32 0
  %19 = load i8**, i8*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr i8*, i8** %19, i32 %i8
  %element = load i8*, i8** %element_address, align 8
  %20 = load i8*, i8** %element_address, align 8
  %21 = ptrtoint i8* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  br label %cond_end10

cond_end10:                                       ; preds = %cond_then_block9, %cond_then_block
  call void @xfree(i8* %20)
  %i11 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i11, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block
}

define void @"vector_finalize_charp98_src/class"(%vector__charp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__charp*
  store %vector__charp* %self, %vector__charp** %self1, align 8
  %2 = bitcast %vector__charp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %self2 = load %vector__charp*, %vector__charp** %self1, align 8
  %eqtmpX = icmp eq %vector__charp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self12 = load %vector__charp*, %vector__charp** %self1, align 8
  %6 = getelementptr inbounds %vector__charp, %vector__charp* %self12, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = load i8**, i8*** %6, align 8
  %9 = bitcast i8** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %13 = bitcast i8* %12 to %vector__charp**
  %self6 = load %vector__charp*, %vector__charp** %13, align 8
  %14 = getelementptr inbounds %vector__charp, %vector__charp* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %17 = bitcast i8* %16 to %vector__charp**
  %self7 = load %vector__charp*, %vector__charp** %17, align 8
  %18 = getelementptr inbounds %vector__charp, %vector__charp* %self7, i32 0, i32 0
  %19 = load i8**, i8*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr i8*, i8** %19, i32 %i8
  %element = load i8*, i8** %element_address, align 8
  %20 = load i8*, i8** %element_address, align 8
  %21 = ptrtoint i8* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  br label %cond_end10

cond_end10:                                       ; preds = %cond_then_block9, %cond_then_block
  call void @xfree(i8* %20)
  %i11 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i11, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block
}

define void @"vector_finalize_charp99_src/class"(%vector__charp* %self) {
entry:
  %lvtable = alloca [8192 x i8*]
  %0 = bitcast [8192 x i8*]* %lvtable to i8*
  %1 = call i8* @xmemcpy(i8* %0, i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i64 65536)
  %self1 = alloca %vector__charp*
  store %vector__charp* %self, %vector__charp** %self1, align 8
  %2 = bitcast %vector__charp** %self1 to i8*
  store i8* %2, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %self2 = load %vector__charp*, %vector__charp** %self1, align 8
  %eqtmpX = icmp eq %vector__charp* %self2, null
  br i1 %eqtmpX, label %cond_jump_then, label %cond_end

cond_jump_then:                                   ; preds = %entry
  %3 = bitcast [8192 x i8*]* %lvtable to i8*
  %4 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %3, i64 65536)
  ret void

cond_end:                                         ; preds = %entry
  br i1 true, label %cond_jump_then3, label %cond_end4

cond_jump_then3:                                  ; preds = %cond_end
  %i = alloca i32
  %5 = bitcast i32* %i to i8*
  store i8* %5, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 439), align 8
  store i32 0, i32* %i, align 4
  br label %loop_top_block

cond_end4:                                        ; preds = %cond_end_block, %cond_end
  %self12 = load %vector__charp*, %vector__charp** %self1, align 8
  %6 = getelementptr inbounds %vector__charp, %vector__charp* %self12, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = load i8**, i8*** %6, align 8
  %9 = bitcast i8** %8 to i8*
  call void @xfree(i8* %9)
  %10 = bitcast [8192 x i8*]* %lvtable to i8*
  %11 = call i8* @xmemcpy(i8* bitcast ([8192 x i8*]* @gLVTable to i8*), i8* %10, i64 65536)
  ret void

loop_top_block:                                   ; preds = %cond_end10, %cond_jump_then3
  %i5 = load i32, i32* %i, align 4
  %12 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %13 = bitcast i8* %12 to %vector__charp**
  %self6 = load %vector__charp*, %vector__charp** %13, align 8
  %14 = getelementptr inbounds %vector__charp, %vector__charp* %self6, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %letmp = icmp slt i32 %i5, %15
  br i1 %letmp, label %cond_then_block, label %cond_end_block

cond_then_block:                                  ; preds = %loop_top_block
  %16 = load i8*, i8** getelementptr inbounds ([8192 x i8*], [8192 x i8*]* @gLVTable, i32 0, i32 438), align 8
  %17 = bitcast i8* %16 to %vector__charp**
  %self7 = load %vector__charp*, %vector__charp** %17, align 8
  %18 = getelementptr inbounds %vector__charp, %vector__charp* %self7, i32 0, i32 0
  %19 = load i8**, i8*** %18, align 8
  %i8 = load i32, i32* %i, align 4
  %element_address = getelementptr i8*, i8** %19, i32 %i8
  %element = load i8*, i8** %element_address, align 8
  %20 = load i8*, i8** %element_address, align 8
  %21 = ptrtoint i8* %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %cond_then_block9, label %cond_end10

cond_end_block:                                   ; preds = %loop_top_block
  br label %cond_end4

cond_then_block9:                                 ; preds = %cond_then_block
  br label %cond_end10

cond_end10:                                       ; preds = %cond_then_block9, %cond_then_block
  call void @xfree(i8* %20)
  %i11 = load i32, i32* %i, align 4
  %addtmp = add nsw i32 %i11, 1
  store i32 %addtmp, i32* %i, align 4
  %subttmp = sub nsw i32 %addtmp, 1
  br label %loop_top_block
}

attributes #0 = { nounwind }

!llvm.dbg.cu = !{!0}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "neo-c", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)
!1 = !DIFile(filename: "src/class.nc", directory: "/home/ab25cq/repo/neo-c/sevenstar")
!2 = !{}
