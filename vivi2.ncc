#include "neo-c.h"

extern "C"
{
#include <stdio.h>
#include <stdlib.h>
#include <ncurses.h>
#include <sys/ioctl.h>
#include <unistd.h>
}

def xgetmaxx(): int
{
    var ws = new winsize;
    ioctl(STDOUT_FILENO, TIOCGWINSZ, ws);

    return ws.ws_col;
}

def xgetmaxy(): int
{
    var ws = new winsize;
    ioctl(STDOUT_FILENO, TIOCGWINSZ, ws);

    return ws.ws_row;
}

struct win {
    win:WINDOW*;
    texts:list<string>*%;
    y:int;
    x:int;
    width:int;
    height:int;
}

impl win {
    initialize(y:int, x:int, width:int, height:int) {
        keypad(self.win, 4);

        self.texts = new list<string>.initialize();

        self.y = y;
        self.x = x;
        self.width = width;
        self.height = height;

        var win = newwin(width, height, y, x);

        self.win = win;
    }

    finalize() {
        delwin(self.win);
    }

    def view(self:win*) {
        werase(self.win);

        self.texts.each {
            mvwprintw(self.win, it2, 0, it);
        }

        wrefresh(self.win);
    }

    def input(self:win*) {
        var key = wgetch(self.win);
    }
}

struct vivi {
    wins:vector<win*%>*%;
    active_win:win*;
}

impl vivi {
    def init_curses() {
        initscr();
        noecho();
        setEscapeDelay(0);
        keypad(stdscr, true);
        raw();
    }

    initialize() {
        init_curses();

        self.wins = new vector<win*%>.initialize();

        var maxx = xgetmaxx();
        var maxy = xgetmaxy();

        var win = new win.initialize(0,0, maxx-1, maxy);

        win.texts.push_back(string("aaa"));
        win.texts.push_back(string("bbb"));
        win.texts.push_back(string("ccc"));

        self.active_win = win;

        self.wins.push_back(win);
    }

    finalize() {
        endwin();
    }

    def main_loop(self:vivi*):int {
        erase();

        self.wins.each {
            it.view();
        }

        self.active_win.input();

        0
    }
}
