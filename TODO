ポインタの演算

post_oprerator address ++ += --

リファレンスの代入

配列のポインタ変換。

Genericsやinlineのエラーメッセージがバグっている。行番号

double, floatの値の表現、8進数、16進数

2次元配列

casts全サポート

メソッドの関数ポインタ

----------------------
macro.cppのC化

collection

fieldの自動free 好きにアドレスを使いたい場合はborrowで%で自動free $の概念はなくす

mips64el, mips64(Bit endian), s390xでのテストの実行
isHeap(変数名) 演算子

独自パーサーでstructの後方参照。mixin-layersを実装する

未定義のstructのポインタのいきなりの宣言。
VPSでもコンパイルエラーとなる

memalloc-std.cのneo-cでのコンパイル。LVtableのコピーをBlockLevel == 0なら行わない

unistd.hのコンパイルを通す

sizeof(変数名)
isHeapとおなじほうほうでじっそうする


delete 変数名
でxfree, finalize

%の配列、要素のfreeを行う
headのアドレスを使い専用の関数でxfreeする。
-->しない。配列やポインタの要素のxfreeは手動

restrict

__extension__

__attribute__

__inline

__restrict

__builtin_var_list


-Iのサポート、プリプロセッサの検索パスの追加。
neo-c.hを自動的にはincludeしないようにする

ヘッダーの自動出力

managed変数へのheapの代入
