!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$(COMMON_OBJS)	Makefile	/^$(COMMON_OBJS): src\/*.h Makefile configure$/;"	t
$(COMMON_OBJS)	Makefile.in	/^$(COMMON_OBJS): src\/*.h Makefile configure$/;"	t
$(OBJS)	Makefile	/^$(OBJS): src\/*.h Makefile configure$/;"	t
$(OBJS)	Makefile.in	/^$(OBJS): src\/*.h Makefile configure$/;"	t
$(RUNTIME_OBJS)	Makefile	/^$(RUNTIME_OBJS): src\/*.h Makefile configure$/;"	t
$(RUNTIME_OBJS)	Makefile.in	/^$(RUNTIME_OBJS): src\/*.h Makefile configure$/;"	t
-g	config.status	/^  alias -g '${1+"$@"}'='"$@"'$/;"	a
-g	configure	/^  alias -g '${1+"$@"}'='"$@"'$/;"	a
-g	configure	/^  alias -g '\\${1+\\"\\$@\\"}'='\\"\\$@\\"'$/;"	a
-g	sevenstars/configure	/^  alias -g '${1+"$@"}'='"$@"'$/;"	a
-g	sevenstars/configure	/^  alias -g '\\${1+\\"\\$@\\"}'='\\"\\$@\\"'$/;"	a
-g	tiny/config.status	/^  alias -g '${1+"$@"}'='"$@"'$/;"	a
-g	tiny/configure	/^  alias -g '${1+"$@"}'='"$@"'$/;"	a
-g	tiny/configure	/^  alias -g '\\${1+\\"\\$@\\"}'='\\"\\$@\\"'$/;"	a
-g	wi/config.status	/^  alias -g '${1+"$@"}'='"$@"'$/;"	a
-g	wi/configure	/^  alias -g '${1+"$@"}'='"$@"'$/;"	a
-g	wi/configure	/^  alias -g '\\${1+\\"\\$@\\"}'='\\"\\$@\\"'$/;"	a
01init.o	tiny/Makefile.in	/^01init.o: configure Makefile config.h 01init.nc common.h$/;"	t
01init.o	wi/Makefile.in	/^01init.o: configure Makefile config.h 01init.nc common.h$/;"	t
02base.o	tiny/Makefile.in	/^02base.o: configure Makefile config.h 01init.nc 02base.nc common.h$/;"	t
02base.o	wi/Makefile.in	/^02base.o: configure Makefile config.h 01init.nc 02base.nc common.h$/;"	t
03insert_mode.o	wi/Makefile.in	/^03insert_mode.o: configure Makefile config.h 01init.nc 02base.nc 03insert_mode.nc common.h$/;"	t
03mult.o	tiny/Makefile.in	/^03mult.o: configure Makefile config.h 01init.nc 02base.nc 03mult.nc common.h$/;"	t
04var.o	tiny/Makefile.in	/^04var.o: configure Makefile config.h 01init.nc 02base.nc 03mult.nc 04var.nc common.h$/;"	t
04word.o	wi/Makefile.in	/^04word.o: configure Makefile config.h 01init.nc 02base.nc 03insert_mode.nc 04word.nc common.h$/;"	t
05undo.o	wi/Makefile.in	/^05undo.o: configure config.h 01init.nc 02base.nc 03insert_mode.nc 04word.nc 05undo.nc common.h$/;"	t
06file.o	wi/Makefile.in	/^06file.o: configure config.h 01init.nc 02base.nc 03insert_mode.nc 04word.nc 05undo.nc 06file.nc$/;"	t
07yank.o	wi/Makefile.in	/^07yank.o: configure config.h 01init.nc 02base.nc 03insert_mode.nc 04word.nc 05undo.nc 06file.nc /;"	t
08visual.o	wi/Makefile.in	/^08visual.o: configure config.h 01init.nc 02base.nc 03insert_mode.nc 04word.nc 05undo.nc 06file.n/;"	t
09search.o	wi/Makefile.in	/^09search.o: configure config.h 01init.nc 02base.nc 03insert_mode.nc 04word.nc 05undo.nc 06file.n/;"	t
10edit.o	wi/Makefile.in	/^10edit.o: configure config.h 01init.nc 02base.nc 03insert_mode.nc 04word.nc 05undo.nc 06file.nc /;"	t
11move.o	wi/Makefile.in	/^11move.o: configure config.h 01init.nc 02base.nc 03insert_mode.nc 04word.nc 05undo.nc 06file.nc /;"	t
12command.o	wi/Makefile.in	/^12command.o: configure config.h 01init.nc 02base.nc 03insert_mode.nc 04word.nc 05undo.nc 06file./;"	t
13completion.o	wi/Makefile.in	/^13completion.o: configure config.h 01init.nc 02base.nc 03insert_mode.nc 04word.nc 05undo.nc 06fi/;"	t
14dot.o	wi/Makefile.in	/^14dot.o: configure config.h 01init.nc 02base.nc 03insert_mode.nc 04word.nc 05undo.nc 06file.nc 0/;"	t
15filer.o	wi/Makefile.in	/^15filer.o: configure config.h 01init.nc 02base.nc 03insert_mode.nc 04word.nc 05undo.nc 06file.nc/;"	t
16mark.o	wi/Makefile.in	/^16mark.o: configure config.h 01init.nc 02base.nc 03insert_mode.nc 04word.nc 05undo.nc 06file.nc /;"	t
17hvisual.o	wi/Makefile.in	/^17hvisual.o: configure config.h 01init.nc 02base.nc 03insert_mode.nc 04word.nc 05undo.nc 06file./;"	t
18vvisual.o	wi/Makefile.in	/^18vvisual.o: configure config.h 01init.nc 02base.nc 03insert_mode.nc 04word.nc 05undo.nc 06file./;"	t
ALIGNMENT_H	src/alignment.h	/^#define ALIGNMENT_H$/;"	d
ALLOC	src/xfunc.h	/^#define ALLOC$/;"	d
BOOL	src/xfunc.h	/^#define BOOL /;"	d
BREAK_MAX	sevenstars/src/common.h	/^#define BREAK_MAX /;"	d
BUFFER_H	src/buffer.h	/^#define BUFFER_H /;"	d
CC	Makefile	/^CC=clang$/;"	m
CC	Makefile.in	/^CC=@CC@$/;"	m
CC	configure.in	/^AC_SUBST(CC)$/;"	s
CC	sevenstars/Makefile.in	/^CC=@CC@$/;"	m
CC	sevenstars/configure.in	/^AC_SUBST(CC)$/;"	s
CC	tiny/Makefile.in	/^CC=@CC@$/;"	m
CC	tiny/configure.in	/^AC_SUBST(CC)$/;"	s
CC	wi/Makefile.in	/^CC=@CC@$/;"	m
CC	wi/configure.in	/^AC_SUBST(CC)$/;"	s
CFFI	configure.in	/^AC_SUBST(CFFI)$/;"	s
CFLAGS	Makefile	/^CFLAGS=-Isrc\/ -I. -L . -I\/data\/data\/com.termux\/files\/home\/include -L\/data\/data\/com.ter/;"	m
CFLAGS	Makefile.in	/^CFLAGS=@CFLAGS@$/;"	m
CFLAGS	configure.in	/^AC_SUBST(CFLAGS)$/;"	s
CFLAGS	sevenstars/Makefile.in	/^CFLAGS=@CFLAGS@$/;"	m
CFLAGS	sevenstars/configure.in	/^AC_SUBST(CFLAGS)$/;"	s
CFLAGS	tiny/Makefile.in	/^CFLAGS=@CFLAGS@$/;"	m
CFLAGS	tiny/configure.in	/^AC_SUBST(CFLAGS)$/;"	s
CFLAGS	wi/Makefile.in	/^CFLAGS=@CFLAGS@$/;"	m
CFLAGS	wi/configure.in	/^AC_SUBST(CFLAGS)$/;"	s
CHANGELOG	README.md	/^# CHANGELOG$/;"	c
CLASS_FLAGS_ANONYMOUS	src/common.h	/^#define CLASS_FLAGS_ANONYMOUS /;"	d
CLASS_FLAGS_ANONYMOUS_VAR_NAME	src/common.h	/^#define CLASS_FLAGS_ANONYMOUS_VAR_NAME /;"	d
CLASS_FLAGS_ENUM	src/common.h	/^#define CLASS_FLAGS_ENUM /;"	d
CLASS_FLAGS_GENERICS	src/common.h	/^#define CLASS_FLAGS_GENERICS /;"	d
CLASS_FLAGS_METHOD_GENERICS	src/common.h	/^#define CLASS_FLAGS_METHOD_GENERICS /;"	d
CLASS_FLAGS_NUMBER	src/common.h	/^#define CLASS_FLAGS_NUMBER /;"	d
CLASS_FLAGS_PRIMITIVE	src/common.h	/^#define CLASS_FLAGS_PRIMITIVE /;"	d
CLASS_FLAGS_STRUCT	src/common.h	/^#define CLASS_FLAGS_STRUCT /;"	d
CLASS_FLAGS_UNION	src/common.h	/^#define CLASS_FLAGS_UNION /;"	d
CLASS_FLAGS_UNSIGNED_NUMBER	src/common.h	/^#define CLASS_FLAGS_UNSIGNED_NUMBER /;"	d
CLASS_NAME	src/common.h	/^#define CLASS_NAME(/;"	d
CLASS_NUM_MAX	src/common.h	/^#define CLASS_NUM_MAX /;"	d
CLObject	sevenstars/src/common.h	/^typedef unsigned int CLObject;$/;"	t	typeref:typename:unsigned int
CLVALUE	sevenstars/src/common.h	/^union CLVALUE {$/;"	u
COMMON_H	sevenstars/src/common.h	/^#define COMMON_H /;"	d
COMMON_H	src/common.h	/^#define COMMON_H /;"	d
COMMON_OBJS	Makefile	/^COMMON_OBJS=src\/buffer.o src\/xfunc.o src\/alignment.o$/;"	m
COMMON_OBJS	Makefile.in	/^COMMON_OBJS=@COMMON_OBJS@$/;"	m
COMMON_OBJS	configure.in	/^AC_SUBST(COMMON_OBJS)$/;"	s
COMPILER_OBJS	sevenstars/Makefile.in	/^COMPILER_OBJS=@COMPILER_OBJS@$/;"	m
COMPILER_OBJS	sevenstars/configure.in	/^AC_SUBST(COMPILER_OBJS)$/;"	s
COMPILE_ERR_MSG_MAX	src/common.h	/^#define COMPILE_ERR_MSG_MAX /;"	d
CONS_str	src/common.h	/^#define CONS_str(/;"	d
CXX	Makefile	/^CXX=g++$/;"	m
CXX	Makefile.in	/^CXX=@CXX@$/;"	m
CXX	configure.in	/^AC_SUBST(CXX)$/;"	s
CXXFLAGS	Makefile	/^CXXFLAGS=`llvm-config --cxxflags --ldflags --system-libs --libs all`  -O3 -I . -I src -DPREFIX="/;"	m
CXXFLAGS	Makefile.in	/^CXXFLAGS=@CXXFLAGS@$/;"	m
CXXFLAGS	configure.in	/^AC_SUBST(CXXFLAGS)$/;"	s
DBuilder	src/llvm.cpp	/^DIBuilder* DBuilder;$/;"	v	typeref:typename:DIBuilder *
DESTDIR	Makefile	/^DESTDIR=\/data\/data\/com.termux\/files\/home$/;"	m
DESTDIR	Makefile.in	/^DESTDIR=@DESTDIR@$/;"	m
DESTDIR	configure.in	/^AC_SUBST(DESTDIR)$/;"	s
DESTDIR	sevenstars/Makefile.in	/^DESTDIR=@DESTDIR@$/;"	m
DESTDIR	sevenstars/configure.in	/^AC_SUBST(DESTDIR)$/;"	s
DESTDIR	tiny/Makefile.in	/^DESTDIR=@DESTDIR@$/;"	m
DESTDIR	tiny/configure.in	/^AC_SUBST(DESTDIR)$/;"	s
DESTDIR	wi/Makefile.in	/^DESTDIR=@DESTDIR@$/;"	m
DESTDIR	wi/configure.in	/^AC_SUBST(DESTDIR)$/;"	s
DblTy	src/llvm.cpp	/^    DIType* DblTy;$/;"	m	struct:DebugInfo	typeref:typename:DIType *	file:
DebugInfo	src/llvm.cpp	/^struct DebugInfo {$/;"	s	file:
ELIF_MAX	sevenstars/src/common.h	/^#define ELIF_MAX /;"	d
ELIF_NUM_MAX	src/common.h	/^#define ELIF_NUM_MAX /;"	d
ENABLE_THREAD	sevenstars/configure.in	/^AC_SUBST(ENABLE_THREAD)$/;"	s
EXTERNAL_OBJECT_MAX	src/common.h	/^#define EXTERNAL_OBJECT_MAX /;"	d
FALSE	src/xfunc.h	/^#define FALSE /;"	d
GENERICS_TYPES_MAX	sevenstars/src/common.h	/^#define GENERICS_TYPES_MAX /;"	d
GENERICS_TYPES_MAX	src/common.h	/^#define GENERICS_TYPES_MAX /;"	d
HAVE_ICONV_H	config.h	/^#define HAVE_ICONV_H /;"	d
HAVE_MATH_H	config.h	/^#define HAVE_MATH_H /;"	d
HAVE_PCRE_H	config.h	/^#define HAVE_PCRE_H /;"	d
HAVE_PTHREAD_H	config.h	/^#define HAVE_PTHREAD_H /;"	d
HEAP_HANDLE_INIT_SIZE	sevenstars/src/common.h	/^#define HEAP_HANDLE_INIT_SIZE /;"	d
HEAP_INIT_SIZE	sevenstars/src/common.h	/^#define HEAP_INIT_SIZE /;"	d
IMPL_DEF_MAX	src/common.h	/^#define IMPL_DEF_MAX /;"	d
INIT_ARRAY_MAX	src/common.h	/^#define INIT_ARRAY_MAX /;"	d
INSTALL	Makefile.in	/^INSTALL=@INSTALL@$/;"	m
INSTALL	README.md	/^# INSTALL$/;"	c
INSTALL	sevenstars/Makefile.in	/^INSTALL=@INSTALL@$/;"	m
INSTALL	tiny/Makefile.in	/^INSTALL=@INSTALL@$/;"	m
INSTALL	wi/Makefile.in	/^INSTALL=@INSTALL@$/;"	m
INTRODUCTION	README.md	/^# INTRODUCTION$/;"	c
JOB_TITLE_MAX	sevenstars/src/common.h	/^#define JOB_TITLE_MAX /;"	d
KSDbgInfo	src/llvm.cpp	/^DebugInfo KSDbgInfo;$/;"	v	typeref:typename:DebugInfo
LIBS	Makefile	/^LIBS= -lutil -ldl -lm -lpcre -lpthread -lrt$/;"	m
LIBS	Makefile.in	/^LIBS=@LIBS@$/;"	m
LIBS	configure.in	/^AC_SUBST(LIBS)$/;"	s
LIBS	sevenstars/Makefile.in	/^LIBS=@LIBS@$/;"	m
LIBS	sevenstars/configure.in	/^AC_SUBST(LIBS)$/;"	s
LIBS	tiny/Makefile.in	/^LIBS=@LIBS@$/;"	m
LIBS	tiny/configure.in	/^AC_SUBST(LIBS)$/;"	s
LIBS	wi/Makefile.in	/^LIBS=@LIBS@$/;"	m
LIBS	wi/configure.in	/^AC_SUBST(LIBS)$/;"	s
LLVM_COMMON_H	src/llvm_common.hpp	/^#define LLVM_COMMON_H /;"	d
LOCAL_VARIABLE_MAX	src/common.h	/^#define LOCAL_VARIABLE_MAX /;"	d
LOOP_NEST_MAX	src/common.h	/^#define LOOP_NEST_MAX /;"	d
LVALUE	src/llvm_common.hpp	/^typedef struct LVALUEStruct LVALUE;$/;"	t	typeref:struct:LVALUEStruct
LVALUEStruct	src/llvm_common.hpp	/^struct LVALUEStruct {$/;"	s
LexicalBlock	src/llvm.cpp	/^    std::vector<DIScope*> LexicalBlock;$/;"	m	struct:DebugInfo	typeref:typename:std::vector<DIScope * >	file:
MACRO_MAX	src/common.h	/^#define MACRO_MAX /;"	d
MANAGED	src/xfunc.h	/^#define MANAGED$/;"	d
MAP_TABLE_DEFAULT_SIZE	code/neo-c.h	/^#define MAP_TABLE_DEFAULT_SIZE /;"	d
MAP_TABLE_DEFAULT_SIZE	neo-c.h	/^#define MAP_TABLE_DEFAULT_SIZE /;"	d
METHOD_DEFAULT_PARAM_MAX	src/common.h	/^#define METHOD_DEFAULT_PARAM_MAX /;"	d
MyModulePass	src/llvm.cpp	/^    MyModulePass(char id) : ModulePass(id) {$/;"	f	struct:MyModulePass	file:
MyModulePass	src/llvm.cpp	/^struct MyModulePass : ModulePass {$/;"	s	file:
NATIVE_METHOD_NAME_MAX	sevenstars/src/common.h	/^#define NATIVE_METHOD_NAME_MAX /;"	d
NCC	tiny/Makefile.in	/^NCC=@NCC@$/;"	m
NCC	tiny/configure.in	/^AC_SUBST(NCC)$/;"	s
NCC	wi/Makefile.in	/^NCC=@NCC@$/;"	m
NCC	wi/configure.in	/^AC_SUBST(NCC)$/;"	s
NCFLAGS	sevenstars/Makefile.in	/^NCFLAGS=@NCFLAGS@$/;"	m
NCFLAGS	sevenstars/configure.in	/^AC_SUBST(NCFLAGS)$/;"	s
NCFLAGS	wi/Makefile.in	/^NCFLAGS=@NCFLAGS@$/;"	m
NCFLAGS	wi/configure.in	/^AC_SUBST(NCFLAGS)$/;"	s
NEO_C_STACK_SIZE	src/common.h	/^#define NEO_C_STACK_SIZE /;"	d
NODETYPE_CALL_EXTERNAL_FUN	tiny/common.h	/^enum { NODETYPE_POP, NODETYPE_INT, NODETYPE_PLUS, NODETYPE_MINUS, NODETYPE_MULT, NODETYPE_DIV, N/;"	e	enum:__anond5b548970203
NODETYPE_CALL_FUN	tiny/common.h	/^enum { NODETYPE_POP, NODETYPE_INT, NODETYPE_PLUS, NODETYPE_MINUS, NODETYPE_MULT, NODETYPE_DIV, N/;"	e	enum:__anond5b548970203
NODETYPE_DIV	tiny/common.h	/^enum { NODETYPE_POP, NODETYPE_INT, NODETYPE_PLUS, NODETYPE_MINUS, NODETYPE_MULT, NODETYPE_DIV, N/;"	e	enum:__anond5b548970203
NODETYPE_FUN	tiny/common.h	/^enum { NODETYPE_POP, NODETYPE_INT, NODETYPE_PLUS, NODETYPE_MINUS, NODETYPE_MULT, NODETYPE_DIV, N/;"	e	enum:__anond5b548970203
NODETYPE_IF	tiny/common.h	/^enum { NODETYPE_POP, NODETYPE_INT, NODETYPE_PLUS, NODETYPE_MINUS, NODETYPE_MULT, NODETYPE_DIV, N/;"	e	enum:__anond5b548970203
NODETYPE_INT	tiny/common.h	/^enum { NODETYPE_POP, NODETYPE_INT, NODETYPE_PLUS, NODETYPE_MINUS, NODETYPE_MULT, NODETYPE_DIV, N/;"	e	enum:__anond5b548970203
NODETYPE_LOAD_VAR	tiny/common.h	/^enum { NODETYPE_POP, NODETYPE_INT, NODETYPE_PLUS, NODETYPE_MINUS, NODETYPE_MULT, NODETYPE_DIV, N/;"	e	enum:__anond5b548970203
NODETYPE_MINUS	tiny/common.h	/^enum { NODETYPE_POP, NODETYPE_INT, NODETYPE_PLUS, NODETYPE_MINUS, NODETYPE_MULT, NODETYPE_DIV, N/;"	e	enum:__anond5b548970203
NODETYPE_MULT	tiny/common.h	/^enum { NODETYPE_POP, NODETYPE_INT, NODETYPE_PLUS, NODETYPE_MINUS, NODETYPE_MULT, NODETYPE_DIV, N/;"	e	enum:__anond5b548970203
NODETYPE_PLUS	tiny/common.h	/^enum { NODETYPE_POP, NODETYPE_INT, NODETYPE_PLUS, NODETYPE_MINUS, NODETYPE_MULT, NODETYPE_DIV, N/;"	e	enum:__anond5b548970203
NODETYPE_POP	tiny/common.h	/^enum { NODETYPE_POP, NODETYPE_INT, NODETYPE_PLUS, NODETYPE_MINUS, NODETYPE_MULT, NODETYPE_DIV, N/;"	e	enum:__anond5b548970203
NODETYPE_STRING	tiny/common.h	/^enum { NODETYPE_POP, NODETYPE_INT, NODETYPE_PLUS, NODETYPE_MINUS, NODETYPE_MULT, NODETYPE_DIV, N/;"	e	enum:__anond5b548970203
NODETYPE_VAR	tiny/common.h	/^enum { NODETYPE_POP, NODETYPE_INT, NODETYPE_PLUS, NODETYPE_MINUS, NODETYPE_MULT, NODETYPE_DIV, N/;"	e	enum:__anond5b548970203
NODE_TYPE_PAGE_SIZE	src/node_type.c	/^#define NODE_TYPE_PAGE_SIZE /;"	d	file:
OBJS	Makefile	/^OBJS=src\/source_compiler.o src\/parser.o src\/node.o src\/klass.o src\/node_type.o src\/typedef/;"	m
OBJS	Makefile.in	/^OBJS=@OBJS@$/;"	m
OBJS	configure.in	/^AC_SUBST(OBJS)$/;"	s
OBJS	sevenstars/Makefile.in	/^OBJS=@OBJS@$/;"	m
OBJS	sevenstars/configure.in	/^AC_SUBST(OBJS)$/;"	s
OS	Makefile	/^OS=LINUX$/;"	m
OS	Makefile.in	/^OS=@OS@$/;"	m
OS	configure.in	/^AC_SUBST(OS)$/;"	s
OS	sevenstars/Makefile.in	/^OS=@OS@$/;"	m
OS	sevenstars/configure.in	/^AC_SUBST(OS)$/;"	s
OS	tiny/Makefile.in	/^OS=@OS@$/;"	m
OS	tiny/configure.in	/^AC_SUBST(OS)$/;"	s
OS	wi/Makefile.in	/^OS=@OS@$/;"	m
OS	wi/configure.in	/^AC_SUBST(OS)$/;"	s
PARAMS_MAX	sevenstars/src/common.h	/^#define PARAMS_MAX /;"	d
PARAMS_MAX	src/common.h	/^#define PARAMS_MAX /;"	d
PARSER_ERR_MSG_MAX	src/common.h	/^#define PARSER_ERR_MSG_MAX /;"	d
REAL_FUN_NAME_MAX	src/common.h	/^#define REAL_FUN_NAME_MAX /;"	d
REAL_STRUCT_NAME_MAX	src/common.h	/^#define REAL_STRUCT_NAME_MAX /;"	d
RUNTIME_OBJS	Makefile	/^RUNTIME_OBJS=$/;"	m
RUNTIME_OBJS	Makefile.in	/^RUNTIME_OBJS=@RUNTIME_OBJS@$/;"	m
RUNTIME_OBJS	configure.in	/^AC_SUBST(RUNTIME_OBJS)$/;"	s
SAVE_INPUT_KEY_MAX	wi/common.h	/^#define SAVE_INPUT_KEY_MAX /;"	d
SOURCE_EXPRESSION_MAX	src/common.h	/^#define SOURCE_EXPRESSION_MAX /;"	d
STRUCT_FIELD_MAX	src/common.h	/^#define STRUCT_FIELD_MAX /;"	d
StructData1	code/HelloWorld5.h	/^struct StructData1$/;"	s
TINYVM_IF_MAX	tiny/common.h	/^#define TINYVM_IF_MAX /;"	d
TINYVM_STACK_SIZE	tiny/common.h	/^#define TINYVM_STACK_SIZE /;"	d
TRUE	src/xfunc.h	/^#define TRUE /;"	d
TYPEDEF_MAX	src/common.h	/^#define TYPEDEF_MAX /;"	d
TheCU	src/llvm.cpp	/^    DICompileUnit* TheCU;$/;"	m	struct:DebugInfo	typeref:typename:DICompileUnit *	file:
TheContext	src/llvm.cpp	/^LLVMContext TheContext;$/;"	v	typeref:typename:LLVMContext
TheFPM	src/llvm.cpp	/^std::unique_ptr<FunctionPassManager> TheFPM;$/;"	v	typeref:typename:std::unique_ptr<FunctionPassManager>
TheLabels	src/llvm.cpp	/^std::map<std::string, BasicBlock*> TheLabels;$/;"	v	typeref:typename:std::map<std::string,BasicBlock * >
TheModule	src/llvm.cpp	/^Module* TheModule;$/;"	v	typeref:typename:Module *
TinyBlock	tiny/common.h	/^struct TinyBlock$/;"	s
TinyNode	tiny/common.h	/^struct TinyNode {$/;"	s
TinyParser	tiny/common.h	/^impl TinyParser $/;"	v	typeref:typename:impl
TinyParser	tiny/common.h	/^struct TinyParser$/;"	s
VAR_NAME_MAX	sevenstars/src/common.h	/^#define VAR_NAME_MAX /;"	d
VAR_NAME_MAX	src/common.h	/^#define VAR_NAME_MAX /;"	d
VM_STACK_MAX	sevenstars/src/common.h	/^#define VM_STACK_MAX /;"	d
Vi	wi/common.h	/^struct Vi $/;"	s
ViWin	wi/common.h	/^struct ViWin $/;"	s
XFUNC_H	src/xfunc.h	/^#define XFUNC_H /;"	d
[^	configure	/^s\/^ \\('"$ac_word_re"'\\)\\(([^()]*)\\)[	 ]*\\(.*\\)\/P["\\1"]="\\2"\\$/;"	f
[^	sevenstars/configure	/^s\/^ \\('"$ac_word_re"'\\)\\(([^()]*)\\)[	 ]*\\(.*\\)\/P["\\1"]="\\2"\\$/;"	f
[^	tiny/configure	/^s\/^ \\('"$ac_word_re"'\\)\\(([^()]*)\\)[	 ]*\\(.*\\)\/P["\\1"]="\\2"\\$/;"	f
[^	wi/configure	/^s\/^ \\('"$ac_word_re"'\\)\\(([^()]*)\\)[	 ]*\\(.*\\)\/P["\\1"]="\\2"\\$/;"	f
_ACAWK	config.status	/^cat >>"$ac_tmp\/subs1.awk" <<_ACAWK &&$/;"	h
_ACAWK	tiny/config.status	/^cat >>"$ac_tmp\/subs1.awk" <<_ACAWK &&$/;"	h
_ACAWK	wi/config.status	/^cat >>"$ac_tmp\/subs1.awk" <<_ACAWK &&$/;"	h
_ACEOF	configure	/^	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	configure	/^      cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	configure	/^    cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	configure	/^   cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	configure	/^  cat <<_ACEOF$/;"	h
_ACEOF	configure	/^  cat >>confdefs.h <<_ACEOF$/;"	h
_ACEOF	configure	/^  cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	configure	/^cat >&5 <<_ACEOF$/;"	h
_ACEOF	configure	/^cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1$/;"	h
_ACEOF	configure	/^cat >>confdefs.h <<_ACEOF$/;"	h
_ACEOF	configure	/^cat >config.log <<_ACEOF$/;"	h
_ACEOF	configure	/^cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	sevenstars/configure	/^	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	sevenstars/configure	/^      cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	sevenstars/configure	/^    cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	sevenstars/configure	/^   cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	sevenstars/configure	/^  cat <<_ACEOF$/;"	h
_ACEOF	sevenstars/configure	/^  cat >>confdefs.h <<_ACEOF$/;"	h
_ACEOF	sevenstars/configure	/^  cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	sevenstars/configure	/^cat >&5 <<_ACEOF$/;"	h
_ACEOF	sevenstars/configure	/^cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1$/;"	h
_ACEOF	sevenstars/configure	/^cat >>confdefs.h <<_ACEOF$/;"	h
_ACEOF	sevenstars/configure	/^cat >config.log <<_ACEOF$/;"	h
_ACEOF	sevenstars/configure	/^cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	tiny/configure	/^	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	tiny/configure	/^      cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	tiny/configure	/^    cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	tiny/configure	/^   cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	tiny/configure	/^  cat <<_ACEOF$/;"	h
_ACEOF	tiny/configure	/^  cat >>confdefs.h <<_ACEOF$/;"	h
_ACEOF	tiny/configure	/^  cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	tiny/configure	/^cat >&5 <<_ACEOF$/;"	h
_ACEOF	tiny/configure	/^cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1$/;"	h
_ACEOF	tiny/configure	/^cat >>confdefs.h <<_ACEOF$/;"	h
_ACEOF	tiny/configure	/^cat >config.log <<_ACEOF$/;"	h
_ACEOF	tiny/configure	/^cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	wi/configure	/^	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	wi/configure	/^      cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	wi/configure	/^    cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	wi/configure	/^   cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	wi/configure	/^  cat <<_ACEOF$/;"	h
_ACEOF	wi/configure	/^  cat >>confdefs.h <<_ACEOF$/;"	h
_ACEOF	wi/configure	/^  cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	wi/configure	/^cat >&5 <<_ACEOF$/;"	h
_ACEOF	wi/configure	/^cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1$/;"	h
_ACEOF	wi/configure	/^cat >>confdefs.h <<_ACEOF$/;"	h
_ACEOF	wi/configure	/^cat >config.log <<_ACEOF$/;"	h
_ACEOF	wi/configure	/^cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ASBOX	config.status	/^  sed 'h;s\/.\/-\/g;s\/^...\/## \/;s\/...$\/ ##\/;p;x;p;x' <<_ASBOX$/;"	h
_ASBOX	configure	/^  sed 'h;s\/.\/-\/g;s\/^...\/## \/;s\/...$\/ ##\/;p;x;p;x' <<_ASBOX$/;"	h
_ASBOX	sevenstars/configure	/^  sed 'h;s\/.\/-\/g;s\/^...\/## \/;s\/...$\/ ##\/;p;x;p;x' <<_ASBOX$/;"	h
_ASBOX	tiny/config.status	/^  sed 'h;s\/.\/-\/g;s\/^...\/## \/;s\/...$\/ ##\/;p;x;p;x' <<_ASBOX$/;"	h
_ASBOX	tiny/configure	/^  sed 'h;s\/.\/-\/g;s\/^...\/## \/;s\/...$\/ ##\/;p;x;p;x' <<_ASBOX$/;"	h
_ASBOX	wi/config.status	/^  sed 'h;s\/.\/-\/g;s\/^...\/## \/;s\/...$\/ ##\/;p;x;p;x' <<_ASBOX$/;"	h
_ASBOX	wi/configure	/^  sed 'h;s\/.\/-\/g;s\/^...\/## \/;s\/...$\/ ##\/;p;x;p;x' <<_ASBOX$/;"	h
_ASEOF	configure	/^cat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1$/;"	h
_ASEOF	sevenstars/configure	/^cat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1$/;"	h
_ASEOF	tiny/configure	/^cat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1$/;"	h
_ASEOF	wi/configure	/^cat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1$/;"	h
_ASUNAME	configure	/^cat <<_ASUNAME$/;"	h
_ASUNAME	sevenstars/configure	/^cat <<_ASUNAME$/;"	h
_ASUNAME	tiny/configure	/^cat <<_ASUNAME$/;"	h
_ASUNAME	wi/configure	/^cat <<_ASUNAME$/;"	h
_GNU_SOURCE	code/neo-c.h	/^#define _GNU_SOURCE$/;"	d
_GNU_SOURCE	neo-c.h	/^#define _GNU_SOURCE$/;"	d
_USE_MISC	code/neo-c.h	/^#define _USE_MISC$/;"	d
_USE_MISC	neo-c.h	/^#define _USE_MISC$/;"	d
_USE_MISC	sevenstars/src/common.h	/^#define _USE_MISC$/;"	d
__32BIT_CPU__	config.h	/^#define __32BIT_CPU__ /;"	d
__32BIT_CPU__	configure.in	/^    AC_DEFINE(__32BIT_CPU__, 1)$/;"	d
__32BIT_CPU__	sevenstars/configure.in	/^    AC_DEFINE(__32BIT_CPU__, 1)$/;"	d
__32BIT_CPU__	tiny/configure.in	/^    AC_DEFINE(__32BIT_CPU__, 1)$/;"	d
__32BIT_CPU__	wi/configure.in	/^    AC_DEFINE(__32BIT_CPU__, 1)$/;"	d
__64BIT_CPU__	configure.in	/^    AC_DEFINE(__64BIT_CPU__, 1)$/;"	d
__64BIT_CPU__	sevenstars/configure.in	/^    AC_DEFINE(__64BIT_CPU__, 1)$/;"	d
__64BIT_CPU__	tiny/configure.in	/^    AC_DEFINE(__64BIT_CPU__, 1)$/;"	d
__64BIT_CPU__	wi/configure.in	/^    AC_DEFINE(__64BIT_CPU__, 1)$/;"	d
__BIG_ENDIAN__	configure.in	/^    AC_DEFINE(__BIG_ENDIAN__, 1)$/;"	d
__BIG_ENDIAN__	sevenstars/configure.in	/^    AC_DEFINE(__BIG_ENDIAN__, 1)$/;"	d
__BIG_ENDIAN__	tiny/configure.in	/^    AC_DEFINE(__BIG_ENDIAN__, 1)$/;"	d
__BIG_ENDIAN__	wi/configure.in	/^    AC_DEFINE(__BIG_ENDIAN__, 1)$/;"	d
__CYGWIN__	sevenstars/configure.in	/^    AC_DEFINE(__CYGWIN__, 1)$/;"	d
__DARWIN__	configure.in	/^    AC_DEFINE(__DARWIN__, 1)$/;"	d
__DARWIN__	sevenstars/configure.in	/^    AC_DEFINE(__DARWIN__, 1)$/;"	d
__DARWIN__	tiny/configure.in	/^    AC_DEFINE(__DARWIN__, 1)$/;"	d
__FREEBSD__	configure.in	/^    AC_DEFINE(__FREEBSD__, 1)$/;"	d
__FREEBSD__	sevenstars/configure.in	/^    AC_DEFINE(__FREEBSD__, 1)$/;"	d
__FREEBSD__	tiny/configure.in	/^    AC_DEFINE(__FREEBSD__, 1)$/;"	d
__LINUX__	config.h	/^#define __LINUX__ /;"	d
__LINUX__	configure.in	/^    AC_DEFINE(__LINUX__, 1)$/;"	d
__LINUX__	sevenstars/configure.in	/^    AC_DEFINE(__LINUX__, 1)$/;"	d
__LINUX__	tiny/configure.in	/^    AC_DEFINE(__LINUX__, 1)$/;"	d
__STDC_CONSTANT_MACROS	code/neo-c.h	/^#define __STDC_CONSTANT_MACROS /;"	d
__STDC_CONSTANT_MACROS	neo-c.h	/^#define __STDC_CONSTANT_MACROS /;"	d
__STDC_LIMIT_MACROS	code/neo-c.h	/^#define __STDC_LIMIT_MACROS /;"	d
__STDC_LIMIT_MACROS	neo-c.h	/^#define __STDC_LIMIT_MACROS /;"	d
__USE_BSD	code/neo-c.h	/^#define __USE_BSD$/;"	d
__USE_BSD	neo-c.h	/^#define __USE_BSD$/;"	d
__USE_BSD	sevenstars/src/common.h	/^#define __USE_BSD$/;"	d
__USE_XOPEN	code/neo-c.h	/^#define __USE_XOPEN$/;"	d
__USE_XOPEN	neo-c.h	/^#define __USE_XOPEN$/;"	d
__USE_XOPEN	sevenstars/src/common.h	/^#define __USE_XOPEN$/;"	d
__X86_64__	wi/configure.in	/^    AC_DEFINE(__X86_64__, 1)$/;"	d
__anon70586b7b010a	src/common.h	/^    union {$/;"	u	struct:sNodeTreeStruct
__anon70586b7b0208	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b0308	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b0408	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b0508	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b0608	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b0708	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b0808	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b0908	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b0a08	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b0b08	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b0c08	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b0d08	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b0e08	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b0f08	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1008	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1108	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1208	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1308	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1408	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1508	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1608	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1708	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1808	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1908	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1a08	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1b08	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1c08	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1d08	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1e08	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b1f08	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anon70586b7b2008	src/common.h	/^        struct {$/;"	s	union:sNodeTreeStruct::__anon70586b7b010a
__anond5b548970203	tiny/common.h	/^enum { NODETYPE_POP, NODETYPE_INT, NODETYPE_PLUS, NODETYPE_MINUS, NODETYPE_MULT, NODETYPE_DIV, N/;"	g
__sbrk	src/sbrk.c	/^void * __sbrk (intptr_t increment)$/;"	f	typeref:typename:void *
a	code/HelloWorld5.h	/^    int a;$/;"	m	struct:StructData1	typeref:typename:int
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_func	sevenstars/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_func	tiny/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_func	wi/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_compile	sevenstars/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_compile	tiny/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_compile	wi/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_header_mongrel	sevenstars/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_header_mongrel	tiny/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_header_mongrel	wi/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_compile	sevenstars/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_compile	tiny/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_compile	wi/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_cpp	sevenstars/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_cpp	tiny/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_cpp	wi/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_link	sevenstars/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_link	tiny/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_link	wi/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_c_try_run	sevenstars/configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_c_try_run	tiny/configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_c_try_run	wi/configure	/^ac_fn_c_try_run ()$/;"	f
activeWin	wi/common.h	/^    ViWin* activeWin;$/;"	v	typeref:typename:ViWin *
add_fields_to_struct	src/klass.c	/^void add_fields_to_struct(sCLClass* klass, int num_fields, char field_name[STRUCT_FIELD_MAX][VAR/;"	f	typeref:typename:void
add_fields_to_union	src/klass.c	/^void add_fields_to_union(sCLClass* klass, int num_fields, char field_name[STRUCT_FIELD_MAX][VAR_/;"	f	typeref:typename:void
add_function	src/node.cpp	/^BOOL add_function(char* name, char* real_fun_name, char param_names[PARAMS_MAX][VAR_NAME_MAX], s/;"	f	typeref:typename:BOOL
add_preprocessor	src/preprocessor.c	/^static BOOL add_preprocessor(char* name, MANAGED sBuf* fun_source)$/;"	f	typeref:typename:BOOL	file:
add_typedef	src/typedef.c	/^void add_typedef(char* name, sNodeType* node_type)$/;"	f	typeref:typename:void
add_variable_to_table	src/vtable.c	/^BOOL add_variable_to_table(sVarTable* table, char* name, sNodeType* type_, BOOL readonly, void* /;"	f	typeref:typename:BOOL
address	src/llvm_common.hpp	/^    Value* address;$/;"	m	struct:LVALUEStruct	typeref:typename:Value *
alignment	src/alignment.c	/^void alignment(unsigned int* size)$/;"	f	typeref:typename:void
alignment_pointer	src/alignment.c	/^void alignment_pointer(char** p, char* head)$/;"	f	typeref:typename:void
all	Makefile	/^all: neo-c neo-c.o$/;"	t
all	Makefile.in	/^all: neo-c neo-c.o$/;"	t
all	sevenstars/Makefile.in	/^all: sevenstars core$/;"	t
all	tiny/Makefile.in	/^all: tiny$/;"	t
all	wi/Makefile.in	/^all: wi$/;"	t
alloc_class	src/klass.c	/^static sCLClass* alloc_class(char* class_name, BOOL primitive_, BOOL struct_, BOOL number_type, /;"	f	typeref:typename:sCLClass *	file:
alloc_enum	src/klass.c	/^sCLClass* alloc_enum(char* class_name)$/;"	f	typeref:typename:sCLClass *
alloc_node	src/node_alloc.c	/^unsigned int alloc_node()$/;"	f	typeref:typename:unsigned int
alloc_node_type	src/node_type.c	/^static sNodeType* alloc_node_type()$/;"	f	typeref:typename:sNodeType *	file:
alloc_struct	src/klass.c	/^sCLClass* alloc_struct(char* class_name, BOOL anonymous)$/;"	f	typeref:typename:sCLClass *
alloc_union	src/klass.c	/^sCLClass* alloc_union(char* class_name, BOOL anonymous, BOOL anonymous_var_name)$/;"	f	typeref:typename:sCLClass *
anchored	code/neo-c.h	/^    bool anchored;$/;"	m	struct:regex_struct	typeref:typename:bool
anchored	neo-c.h	/^    bool anchored;$/;"	m	struct:regex_struct	typeref:typename:bool
append_debug_heap_memory	src/memalloc-stdc.c	/^static void append_debug_heap_memory(void* mem, char* type_name, char* sname, int sline, int cal/;"	f	typeref:typename:void	file:
append_double_value_to_constant_pool	src/constant.c	/^unsigned int append_double_value_to_constant_pool(sConst* constant, double n, BOOL no_output)$/;"	f	typeref:typename:unsigned int
append_float_value_to_constant_pool	src/constant.c	/^unsigned int append_float_value_to_constant_pool(sConst* constant, float n, BOOL no_output)$/;"	f	typeref:typename:unsigned int
append_heap_object_to_right_value	src/llvm.cpp	/^void append_heap_object_to_right_value(LVALUE* llvm_value, sCompileInfo* info)$/;"	f	typeref:typename:void
append_int_value_to_constant_pool	src/constant.c	/^unsigned int append_int_value_to_constant_pool(sConst* constant, int n, BOOL no_output)$/;"	f	typeref:typename:unsigned int
append_macro	src/macro.c	/^void append_macro(char* name, char* body)$/;"	f	typeref:typename:void
append_node_to_node_block	src/node_alloc.c	/^void append_node_to_node_block(sNodeBlock* node_block, unsigned int node)$/;"	f	typeref:typename:void
append_str_to_constant_pool	src/constant.c	/^unsigned int append_str_to_constant_pool(sConst* constant, char* str, BOOL no_output)$/;"	f	typeref:typename:unsigned int
append_wstr_to_constant_pool	src/constant.c	/^unsigned int append_wstr_to_constant_pool(sConst* constant, char* str, BOOL no_output)$/;"	f	typeref:typename:unsigned int
arrange_alignment	src/constant.c	/^static void arrange_alignment(sConst* self)$/;"	f	typeref:typename:void	file:
arrange_stack	src/llvm.cpp	/^void arrange_stack(sCompileInfo* info, int top)$/;"	f	typeref:typename:void
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_append	sevenstars/configure	/^  as_fn_append ()$/;"	f
as_fn_append	tiny/config.status	/^  as_fn_append ()$/;"	f
as_fn_append	tiny/configure	/^  as_fn_append ()$/;"	f
as_fn_append	wi/config.status	/^  as_fn_append ()$/;"	f
as_fn_append	wi/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_arith	sevenstars/configure	/^  as_fn_arith ()$/;"	f
as_fn_arith	tiny/config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	tiny/configure	/^  as_fn_arith ()$/;"	f
as_fn_arith	wi/config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	wi/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_error	sevenstars/configure	/^as_fn_error ()$/;"	f
as_fn_error	tiny/config.status	/^as_fn_error ()$/;"	f
as_fn_error	tiny/configure	/^as_fn_error ()$/;"	f
as_fn_error	wi/config.status	/^as_fn_error ()$/;"	f
as_fn_error	wi/configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	sevenstars/configure	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	tiny/config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	tiny/configure	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	wi/config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	wi/configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_exit	sevenstars/configure	/^as_fn_exit ()$/;"	f
as_fn_exit	tiny/config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	tiny/configure	/^as_fn_exit ()$/;"	f
as_fn_exit	wi/config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	wi/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_failure	sevenstars/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_failure	tiny/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_failure	wi/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	sevenstars/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	tiny/config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	tiny/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	wi/config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	wi/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_failure	sevenstars/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_failure	tiny/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_failure	wi/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_ret_success	sevenstars/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_ret_success	tiny/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_ret_success	wi/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_set_status	sevenstars/configure	/^as_fn_set_status ()$/;"	f
as_fn_set_status	tiny/config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	tiny/configure	/^as_fn_set_status ()$/;"	f
as_fn_set_status	wi/config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	wi/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_success	sevenstars/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_success	tiny/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_success	wi/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
as_fn_unset	sevenstars/configure	/^as_fn_unset ()$/;"	f
as_fn_unset	tiny/config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	tiny/configure	/^as_fn_unset ()$/;"	f
as_fn_unset	wi/config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	wi/configure	/^as_fn_unset ()$/;"	f
at	code/neo-c.h	/^    T2& at(map<T, T2>* self, T& key, T2& default_value) $/;"	f	typeref:typename:T2 &
at	neo-c.h	/^    T2& at(map<T, T2>* self, T& key, T2& default_value) $/;"	f	typeref:typename:T2 &
at_clone	neo-c.h	/^    T2 at_clone(map<T, T2>* self, T& key, T2& default_value) $/;"	f	typeref:typename:T2
auto_cast_posibility	src/node_type.c	/^BOOL auto_cast_posibility(sNodeType* left_type, sNodeType* right_type)$/;"	f	typeref:typename:BOOL
b	code/HelloWorld6.h	/^    int b;$/;"	m	struct:version	typeref:typename:int
binded_value	src/llvm_common.hpp	/^    BOOL binded_value;$/;"	m	struct:LVALUEStruct	typeref:typename:BOOL
bindir	Makefile	/^bindir=${exec_prefix}\/bin$/;"	m
bindir	Makefile.in	/^bindir=@bindir@$/;"	m
bindir	sevenstars/Makefile.in	/^bindir=@bindir@$/;"	m
bindir	tiny/Makefile.in	/^bindir=@bindir@$/;"	m
bindir	wi/Makefile.in	/^bindir=@bindir@$/;"	m
buf	code/neo-c.h	/^    char* buf;$/;"	m	struct:buffer	typeref:typename:char *
buf	neo-c.h	/^    char* buf;$/;"	m	struct:buffer	typeref:typename:char *
buffer	code/neo-c.h	/^struct buffer {$/;"	s
buffer	neo-c.h	/^struct buffer {$/;"	s
call_clone_method	src/llvm.cpp	/^static BOOL call_clone_method(sNodeType* node_type, Value** address, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
call_destructor	src/llvm.cpp	/^static BOOL call_destructor(Value* obj, sNodeType* node_type, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
call_field_destructor	src/llvm.cpp	/^static void call_field_destructor(Value* obj, sNodeType* node_type, sCompileInfo* info)$/;"	f	typeref:typename:void	file:
call_function	src/node.cpp	/^BOOL call_function(char* fun_name, Value** params, int num_params, char* struct_name, BOOL no_er/;"	f	typeref:typename:BOOL
call_macro	src/macro.c	/^BOOL call_macro(unsigned * node, char* name, char* params, sParserInfo* info)$/;"	f	typeref:typename:BOOL
call_preprocessor	src/preprocessor.c	/^static BOOL call_preprocessor(sBuf* command, sBuf* output)$/;"	f	typeref:typename:BOOL	file:
calloc_num	src/memalloc-stdc.c	/^    int calloc_num;$/;"	m	struct:sHeapDebug	typeref:typename:int	file:
calloc_size	src/memalloc-stdc.c	/^    size_t calloc_size;$/;"	m	struct:sHeapDebug	typeref:typename:size_t	file:
case_after_return	src/common.h	/^    BOOL case_after_return;$/;"	m	struct:sParserInfoStruct	typeref:typename:BOOL
case_else_block	src/common.h	/^    void* case_else_block;$/;"	m	struct:sCompileInfoStruct	typeref:typename:void *
case_then_block	src/common.h	/^    void* case_then_block;$/;"	m	struct:sCompileInfoStruct	typeref:typename:void *
cast_posibility	src/node_type.c	/^BOOL cast_posibility(sNodeType* left_type, sNodeType* right_type)$/;"	f	typeref:typename:BOOL
cast_right_type_to_left_type	src/llvm.cpp	/^BOOL cast_right_type_to_left_type(sNodeType* left_type, sNodeType** right_type, LVALUE* rvalue, /;"	f	typeref:typename:BOOL
change_sline	src/common.h	/^    BOOL change_sline;$/;"	m	struct:sParserInfoStruct	typeref:typename:BOOL
check_already_added_variable	src/vtable.c	/^void check_already_added_variable(sVarTable* table, char* name, struct sParserInfoStruct* info)$/;"	f	typeref:typename:void
check_same_params	src/node.cpp	/^static BOOL check_same_params(int num_params, sNodeType** param_types, int num_params2, sNodeTyp/;"	f	typeref:typename:BOOL	file:
check_the_same_fields	src/node_type.c	/^BOOL check_the_same_fields(sNodeType* left_node, sNodeType* right_node)$/;"	f	typeref:typename:BOOL
class_final	src/klass.c	/^void class_final()$/;"	f	typeref:typename:void
class_init	src/klass.c	/^void class_init()$/;"	f	typeref:typename:void
clean	Makefile	/^clean:$/;"	t
clean	Makefile.in	/^clean:$/;"	t
clean	sevenstars/Makefile.in	/^clean:$/;"	t
clean	tiny/Makefile.in	/^clean:$/;"	t
clean	wi/Makefile.in	/^clean:$/;"	t
clint64	src/common.h	/^#define clint64 /;"	d
cllong	sevenstars/src/common.h	/^#define cllong /;"	d
clone_class	src/klass.c	/^sCLClass* clone_class(sCLClass* klass)$/;"	f	typeref:typename:sCLClass *
clone_item	neo-c.h	/^    T clone_item(list<T>* self, int position, T& default_value) $/;"	f	typeref:typename:T
clone_item	neo-c.h	/^    T clone_item(vector<T>* self, int index, T& default_value) $/;"	f	typeref:typename:T
clone_node_type	src/node_type.c	/^sNodeType* clone_node_type(sNodeType* node_type)$/;"	f	typeref:typename:sNodeType *
clone_object	src/llvm.cpp	/^Value* clone_object(sNodeType* node_type, Value* address, sCompileInfo* info)$/;"	f	typeref:typename:Value *
clone_var_table	src/vtable.c	/^sVarTable* clone_var_table(sVarTable* lv_table)$/;"	f	typeref:typename:sVarTable *
clover3 computer language	sevenstars/README.md	/^# clover3 computer language$/;"	c
compare	neo-c.h	/^    inline int compare(char left, char right) {$/;"	f	typeref:typename:int
compare	neo-c.h	/^    inline int compare(char* left, char* right) {$/;"	f	typeref:typename:int
compare	neo-c.h	/^    inline int compare(int left, int right) {$/;"	f	typeref:typename:int
compare	neo-c.h	/^    inline int compare(wchar_t left, wchar_t right) {$/;"	f	typeref:typename:int
compare	neo-c.h	/^    inline int compare(wstring& left, wstring& right) {$/;"	f	typeref:typename:int
compile	src/node.cpp	/^BOOL compile(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_add	src/node.cpp	/^static BOOL compile_add(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_alignof	src/node.cpp	/^static BOOL compile_alignof(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_alignof_expression	src/node.cpp	/^BOOL compile_alignof_expression(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_and	src/node.cpp	/^static BOOL compile_and(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_and_and	src/node.cpp	/^static BOOL compile_and_and(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_array_with_initialization	src/node.cpp	/^BOOL compile_array_with_initialization(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_block	src/node_block.cpp	/^BOOL compile_block(sNodeBlock* block, sCompileInfo* info, sNodeType* result_type, BOOL free_var_/;"	f	typeref:typename:BOOL
compile_borrow	src/node.cpp	/^static BOOL compile_borrow(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_break_expression	src/node.cpp	/^BOOL compile_break_expression(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_c_string_value	src/node.cpp	/^BOOL compile_c_string_value(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_case_expression	src/node.cpp	/^BOOL compile_case_expression(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_cast	src/node.cpp	/^BOOL compile_cast(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_char_value	src/node.cpp	/^BOOL compile_char_value(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_class_name	src/node.cpp	/^static BOOL compile_class_name(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_class_name_expression	src/node.cpp	/^static BOOL compile_class_name_expression(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_clone	src/node.cpp	/^static BOOL compile_clone(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_comma	src/node.cpp	/^static BOOL compile_comma(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_complement	src/node.cpp	/^static BOOL compile_complement(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_conditional	src/node.cpp	/^static BOOL compile_conditional(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_continue_expression	src/node.cpp	/^BOOL compile_continue_expression(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_define_variable	src/node.cpp	/^static BOOL compile_define_variable(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_define_variables	src/node.cpp	/^static BOOL compile_define_variables(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_delete	src/node.cpp	/^static BOOL compile_delete(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_dereffernce	src/node.cpp	/^static BOOL compile_dereffernce(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_div	src/node.cpp	/^static BOOL compile_div(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_do_while_expression	src/node.cpp	/^static BOOL compile_do_while_expression(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_dummy_heap	src/node.cpp	/^static BOOL compile_dummy_heap(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_equal_and	src/node.cpp	/^static BOOL compile_equal_and(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_equal_div	src/node.cpp	/^static BOOL compile_equal_div(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_equal_lshift	src/node.cpp	/^static BOOL compile_equal_lshift(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_equal_minus	src/node.cpp	/^static BOOL compile_equal_minus(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_equal_mod	src/node.cpp	/^static BOOL compile_equal_mod(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_equal_mult	src/node.cpp	/^static BOOL compile_equal_mult(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_equal_or	src/node.cpp	/^static BOOL compile_equal_or(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_equal_plus	src/node.cpp	/^static BOOL compile_equal_plus(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_equal_rshift	src/node.cpp	/^static BOOL compile_equal_rshift(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_equal_xor	src/node.cpp	/^static BOOL compile_equal_xor(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_equals	src/node.cpp	/^static BOOL compile_equals(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_err_msg	a.cpp	/^void compile_err_msg(const char* msg, ...)$/;"	f	typeref:typename:void
compile_err_msg	src/node.cpp	/^void compile_err_msg(sCompileInfo* info, const char* msg, ...)$/;"	f	typeref:typename:void
compile_external_function	src/node.cpp	/^static BOOL compile_external_function(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_false	src/node.cpp	/^static BOOL compile_false(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_for_expression	src/node.cpp	/^static BOOL compile_for_expression(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_function	src/node.cpp	/^BOOL compile_function(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_function_call	src/node.cpp	/^BOOL compile_function_call(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_generics_function	src/node.cpp	/^BOOL compile_generics_function(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_goto_expression	src/node.cpp	/^BOOL compile_goto_expression(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_gt	src/node.cpp	/^static BOOL compile_gt(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_gteq	src/node.cpp	/^static BOOL compile_gteq(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_if_expression	src/node.cpp	/^static BOOL compile_if_expression(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_impl	src/node.cpp	/^static BOOL compile_impl(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_inline_function	src/node.cpp	/^BOOL compile_inline_function(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_int_value	src/node.cpp	/^static BOOL compile_int_value(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_is_heap	src/node.cpp	/^BOOL compile_is_heap(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_is_heap_expression	src/node.cpp	/^BOOL compile_is_heap_expression(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_label_expression	src/node.cpp	/^BOOL compile_label_expression(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_lambda_call	src/node.cpp	/^BOOL compile_lambda_call(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_le	src/node.cpp	/^static BOOL compile_le(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_leeq	src/node.cpp	/^static BOOL compile_leeq(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_left_shift	src/node.cpp	/^static BOOL compile_left_shift(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_load_address_value	src/node.cpp	/^static BOOL compile_load_address_value(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_load_element	src/node.cpp	/^static BOOL compile_load_element(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_load_field	src/node.cpp	/^static BOOL compile_load_field(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_load_function	src/node.cpp	/^static BOOL compile_load_function(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_load_variable	src/node.cpp	/^static BOOL compile_load_variable(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_logical_denial	src/node.cpp	/^static BOOL compile_logical_denial(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_long_value	src/node.cpp	/^static BOOL compile_long_value(unsigned long long int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_managed	src/node.cpp	/^static BOOL compile_managed(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_minus_minus	src/node.cpp	/^static BOOL compile_minus_minus(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_mod	src/node.cpp	/^static BOOL compile_mod(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_mult	src/node.cpp	/^static BOOL compile_mult(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_normal_block	src/node.cpp	/^BOOL compile_normal_block(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_not_equals	src/node.cpp	/^static BOOL compile_not_equals(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_null	src/node.cpp	/^static BOOL compile_null(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_object	src/node.cpp	/^static BOOL compile_object(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_or	src/node.cpp	/^static BOOL compile_or(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_or_or	src/node.cpp	/^static BOOL compile_or_or(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_plus_plus	src/node.cpp	/^static BOOL compile_plus_plus(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_reffernce	src/node.cpp	/^static BOOL compile_reffernce(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_return	src/node.cpp	/^static BOOL compile_return(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_right_shift	src/node.cpp	/^static BOOL compile_right_shift(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_simple_lambda_param	src/node.cpp	/^static BOOL compile_simple_lambda_param(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_sizeof	src/node.cpp	/^static BOOL compile_sizeof(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_sizeof_expression	src/node.cpp	/^BOOL compile_sizeof_expression(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_source	src/source_compiler.c	/^BOOL compile_source(char* fname, char* source, BOOL optimize, sVarTable* module_var_table)$/;"	f	typeref:typename:BOOL
compile_stack_object	src/node.cpp	/^static BOOL compile_stack_object(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_store_address	src/node.cpp	/^static BOOL compile_store_address(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_store_element	src/node.cpp	/^BOOL compile_store_element(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_store_field	src/node.cpp	/^static BOOL compile_store_field(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_store_variable	src/node.cpp	/^static BOOL compile_store_variable(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_struct	src/node.cpp	/^static BOOL compile_struct(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_struct_with_initialization	src/node.cpp	/^BOOL compile_struct_with_initialization(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_sub	src/node.cpp	/^static BOOL compile_sub(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_switch_expression	src/node.cpp	/^BOOL compile_switch_expression(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
compile_true	src/node.cpp	/^static BOOL compile_true(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_typedef	src/node.cpp	/^static BOOL compile_typedef(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_uint_value	src/node.cpp	/^static BOOL compile_uint_value(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_ulong_value	src/node.cpp	/^static BOOL compile_ulong_value(unsigned long long int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_union	src/node.cpp	/^static BOOL compile_union(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_va_arg	src/node.cpp	/^static BOOL compile_va_arg(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_while_expression	src/node.cpp	/^static BOOL compile_while_expression(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compile_xor	src/node.cpp	/^static BOOL compile_xor(unsigned int node, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
compiler	src/compiler.c	/^static BOOL compiler(char* fname, BOOL optimize, sVarTable* module_var_table, BOOL neo_c_header)$/;"	f	typeref:typename:BOOL	file:
compiler_final	src/compiler.c	/^static void compiler_final()$/;"	f	typeref:typename:void	file:
compiler_init	src/compiler.c	/^static void compiler_init()$/;"	f	typeref:typename:void	file:
compiling_fun_name	src/common.h	/^    char compiling_fun_name[VAR_NAME_MAX];$/;"	m	struct:sCompileInfoStruct	typeref:typename:char[]
compiling_struct_name	src/common.h	/^    char compiling_struct_name[VAR_NAME_MAX];$/;"	m	struct:sCompileInfoStruct	typeref:typename:char[]
core	sevenstars/Makefile.in	/^core: core.ss$/;"	t
createDebugFunctionInfo	src/llvm.cpp	/^void createDebugFunctionInfo(int sline, char* fname, sFunction* function, Function* llvm_functio/;"	f	typeref:typename:void
createDebugFunctionType	src/llvm.cpp	/^static DISubroutineType* createDebugFunctionType(sFunction* function, DIFile* unit)$/;"	f	typeref:typename:DISubroutineType *	file:
create_anonymous_union_var_name	src/llvm.cpp	/^void create_anonymous_union_var_name(char* name, int size_name)$/;"	f	typeref:typename:void
create_anoymous_struct_name	src/parser.c	/^static void create_anoymous_struct_name(char* struct_name, int size_struct_name)$/;"	f	typeref:typename:void	file:
create_debug_type	src/llvm.cpp	/^static DIType* create_debug_type(sNodeType* node_type) $/;"	f	typeref:typename:DIType *	file:
create_generics_finalize_method	src/node.cpp	/^int create_generics_finalize_method(sNodeType* node_type2, Function** llvm_fun, sCompileInfo* in/;"	f	typeref:typename:int
create_generics_fun_name	src/node.cpp	/^void create_generics_fun_name(char* real_fun_name, int size_real_fun_name, char* fun_name, sNode/;"	f	typeref:typename:void
create_internal_functions	src/llvm.cpp	/^void create_internal_functions()$/;"	f	typeref:typename:void
create_lambda_name	src/parser.c	/^void create_lambda_name(char* lambda_name, size_t size_lambda_name, char* module_name)$/;"	f	typeref:typename:void
create_llvm_function	src/llvm.cpp	/^Function* create_llvm_function(const std::string& name)$/;"	f	typeref:typename:Function *
create_llvm_struct_type	src/llvm.cpp	/^BOOL create_llvm_struct_type(sNodeType* node_type, sNodeType* generics_type, BOOL new_create, sC/;"	f	typeref:typename:BOOL
create_llvm_type_from_node_type	src/llvm.cpp	/^BOOL create_llvm_type_from_node_type(Type** result_type, sNodeType* node_type, sNodeType* generi/;"	f	typeref:typename:BOOL
create_llvm_union_type	src/llvm.cpp	/^BOOL create_llvm_union_type(sNodeType* node_type, sNodeType* generics_type, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
create_node_type_with_class_name	src/node_type.c	/^sNodeType* create_node_type_with_class_name(char* class_name)$/;"	f	typeref:typename:sNodeType *
create_node_type_with_class_pointer	src/node_type.c	/^sNodeType* create_node_type_with_class_pointer(sCLClass* klass)$/;"	f	typeref:typename:sNodeType *
create_operator_fun_name	src/node.cpp	/^static void create_operator_fun_name(char* real_fun_name, size_t size_real_fun_name, char* fun_n/;"	f	typeref:typename:void	file:
create_real_fun_name	src/node.cpp	/^void create_real_fun_name(char* real_fun_name, size_t size_real_fun_name, char* fun_name, char* /;"	f	typeref:typename:void
create_real_struct_name	src/llvm.cpp	/^static void create_real_struct_name(char* real_struct_name, int size_real_struct_name, int num_g/;"	f	typeref:typename:void	file:
create_real_union_name	src/llvm.cpp	/^static void create_real_union_name(char* real_union_name, int size_real_union_name, char* union_/;"	f	typeref:typename:void	file:
create_type_name_from_node_type	src/node_type.c	/^void create_type_name_from_node_type(char* type_name, int type_name_max, sNodeType* node_type, B/;"	f	typeref:typename:void
create_undefined_llvm_struct_type	src/llvm.cpp	/^void create_undefined_llvm_struct_type(sNodeType* node_type)$/;"	f	typeref:typename:void
current_block	src/common.h	/^    void* current_block;$/;"	m	struct:sCompileInfoStruct	typeref:typename:void *
current_node_block	src/common.h	/^    struct sNodeBlockStruct* current_node_block;$/;"	m	struct:sCompileInfoStruct	typeref:struct:sNodeBlockStruct *
datadir	Makefile	/^datadir=${datarootdir}$/;"	m
datadir	Makefile.in	/^datadir=@datadir@$/;"	m
datadir	sevenstars/Makefile.in	/^datadir=@datadir@$/;"	m
datadir	tiny/Makefile.in	/^datadir=@datadir@$/;"	m
datadir	wi/Makefile.in	/^datadir=@datadir@$/;"	m
datarootdir	Makefile	/^datarootdir=${prefix}\/share\/neo-c$/;"	m
datarootdir	Makefile.in	/^datarootdir=@datarootdir@\/neo-c$/;"	m
datarootdir	sevenstars/Makefile.in	/^datarootdir=@datarootdir@\/sevenstars$/;"	m
datarootdir	tiny/Makefile.in	/^datarootdir=@datarootdir@\/neo-c$/;"	m
datarootdir	wi/Makefile.in	/^datarootdir=@datarootdir@\/neo-c$/;"	m
debug	configure.in	/^AC_ARG_WITH(debug,              [  --with-debug              include debug info ], [ DEBUGGING=1/;"	w
debug	sevenstars/configure.in	/^AC_ARG_WITH(debug,              [  --with-debug              include debug info ], [ DEBUGGING=1/;"	w
debug	tiny/configure.in	/^AC_ARG_WITH(debug,              [  --with-debug              include debug info ], [ DEBUGGING=1/;"	w
debug	wi/configure.in	/^AC_ARG_WITH(debug,              [  --with-debug              include debug info ], [ DEBUGGING=1/;"	w
debug_runned_default	tiny/common.h	/^    bool debug_runned_default;$/;"	m	struct:TinyNode	typeref:typename:bool
debug_show_none_freed_heap_memory	src/memalloc-stdc.c	/^void debug_show_none_freed_heap_memory() $/;"	f	typeref:typename:void
debug_xcalloc	src/memalloc-stdc.c	/^void *debug_xcalloc(long long int num, long long int nsize, char* type_name, char* sname, int sl/;"	f	typeref:typename:void *
dec_stack_ptr	src/llvm.cpp	/^void dec_stack_ptr(int value, sCompileInfo* info)$/;"	f	typeref:typename:void
declare_builtin_functions	src/llvm.cpp	/^void declare_builtin_functions()$/;"	f	typeref:typename:void
delete_comment	src/source_compiler.c	/^BOOL delete_comment(sBuf* source, sBuf* source2)$/;"	f	typeref:typename:BOOL
delete_debug_heap_memory	src/memalloc-stdc.c	/^static void delete_debug_heap_memory(void* mem)$/;"	f	typeref:typename:void	file:
delete_range	code/neo-c.h	/^    void delete_range(list<T>* self, int head, int tail)$/;"	f	typeref:typename:void
delete_range	neo-c.h	/^    void delete_range(list<T>* self, int head, int tail)$/;"	f	typeref:typename:void
distclean	Makefile	/^distclean: clean$/;"	t
distclean	Makefile.in	/^distclean: clean$/;"	t
distclean	sevenstars/Makefile.in	/^distclean: clean$/;"	t
distclean	tiny/Makefile.in	/^distclean: clean$/;"	t
distclean	wi/Makefile.in	/^distclean: clean$/;"	t
docdir	Makefile	/^docdir=${datarootdir}\/doc$/;"	m
docdir	Makefile.in	/^docdir=@datadir@\/doc$/;"	m
docdir	sevenstars/Makefile.in	/^docdir=@datadir@\/doc$/;"	m
docdir	tiny/Makefile.in	/^docdir=@datadir@\/doc$/;"	m
docdir	wi/Makefile.in	/^docdir=@datadir@\/doc$/;"	m
dollar_endonly	code/neo-c.h	/^    bool dollar_endonly;$/;"	m	struct:regex_struct	typeref:typename:bool
dollar_endonly	neo-c.h	/^    bool dollar_endonly;$/;"	m	struct:regex_struct	typeref:typename:bool
dotall	code/neo-c.h	/^    bool dotall;$/;"	m	struct:regex_struct	typeref:typename:bool
dotall	neo-c.h	/^    bool dotall;$/;"	m	struct:regex_struct	typeref:typename:bool
eNodeType	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	g
each	code/neo-c.h	/^    void each(list<T>* self, void (*block)(T&,int,bool*)) {$/;"	f	typeref:typename:void
each	code/neo-c.h	/^    void each(map<T, T2>* self, void (*block)(T&,T2&,bool*)) $/;"	f	typeref:typename:void
each	code/neo-c.h	/^    void each(vector<T>*  self, void (*block)(T&,int,bool*)) {$/;"	f	typeref:typename:void
each	neo-c.h	/^    void each(list<T>* self, void (*block_)(T&,int,bool*)) {$/;"	f	typeref:typename:void
each	neo-c.h	/^    void each(map<T, T2>* self, void (*block_)(T&,T2&,bool*)) $/;"	f	typeref:typename:void
each	neo-c.h	/^    void each(vector<T>* self, void (*block_)(T&,int,bool*)) {$/;"	f	typeref:typename:void
emitLocaltion	src/llvm.cpp	/^static void emitLocaltion(DebugInfo* info, int sline)$/;"	f	typeref:typename:void	file:
equals	code/neo-c.h	/^    bool equals(list<T>* left, list<T>* right)$/;"	f	typeref:typename:bool
equals	code/neo-c.h	/^    bool equals(map<T, T2>* left, map<T, T2>* right)$/;"	f	typeref:typename:bool
equals	code/neo-c.h	/^    bool equals(tuple1<T>* left, tuple1<T>* right)$/;"	f	typeref:typename:bool
equals	code/neo-c.h	/^    bool equals(tuple2<T, T2>* left, tuple2<T, T2>* right)$/;"	f	typeref:typename:bool
equals	code/neo-c.h	/^    bool equals(tuple3<T, T2, T3>* left, tuple3<T, T2, T3>* right)$/;"	f	typeref:typename:bool
equals	code/neo-c.h	/^    bool equals(tuple4<T, T2, T3, T4>* left, tuple4<T, T2, T3, T4>* right)$/;"	f	typeref:typename:bool
equals	code/neo-c.h	/^    bool equals(vector<T>* left, vector<T>* right)$/;"	f	typeref:typename:bool
equals	code/neo-c.h	/^    inline bool equals(char* left, char* right)$/;"	f	typeref:typename:bool
equals	code/neo-c.h	/^    inline bool equals(int left, int right) $/;"	f	typeref:typename:bool
equals	code/neo-c.h	/^    inline bool equals(wchar_t* left, wchar_t* right)$/;"	f	typeref:typename:bool
equals	neo-c.h	/^    bool equals(list<T>* left, list<T>* right)$/;"	f	typeref:typename:bool
equals	neo-c.h	/^    bool equals(map<T, T2>* left, map<T, T2>* right)$/;"	f	typeref:typename:bool
equals	neo-c.h	/^    bool equals(tuple1<T>* left, tuple1<T>* right)$/;"	f	typeref:typename:bool
equals	neo-c.h	/^    bool equals(tuple2<T, T2>* left, tuple2<T, T2>* right)$/;"	f	typeref:typename:bool
equals	neo-c.h	/^    bool equals(tuple3<T, T2, T3>* left, tuple3<T, T2, T3>* right)$/;"	f	typeref:typename:bool
equals	neo-c.h	/^    bool equals(tuple4<T, T2, T3, T4>* left, tuple4<T, T2, T3, T4>* right)$/;"	f	typeref:typename:bool
equals	neo-c.h	/^    bool equals(vector<T>* left, vector<T>* right)$/;"	f	typeref:typename:bool
equals	neo-c.h	/^    inline bool equals(char left, char right)$/;"	f	typeref:typename:bool
equals	neo-c.h	/^    inline bool equals(char* left, char* right)$/;"	f	typeref:typename:bool
equals	neo-c.h	/^    inline bool equals(int left, int right) $/;"	f	typeref:typename:bool
equals	neo-c.h	/^    inline bool equals(wchar_t left, wchar_t right)$/;"	f	typeref:typename:bool
equals	neo-c.h	/^    inline bool equals(wchar_t* left, wchar_t* right)$/;"	f	typeref:typename:bool
err_num	src/common.h	/^    int err_num;$/;"	m	struct:sCompileInfoStruct	typeref:typename:int
err_num	src/common.h	/^    int err_num;$/;"	m	struct:sParserInfoStruct	typeref:typename:int
err_num	tiny/common.h	/^    int err_num;$/;"	m	struct:TinyParser	typeref:typename:int
exec_prefix	Makefile	/^exec_prefix=${prefix}$/;"	m
exec_prefix	Makefile.in	/^exec_prefix=@exec_prefix@$/;"	m
exec_prefix	sevenstars/Makefile.in	/^exec_prefix=@exec_prefix@$/;"	m
expect_next_character_with_one_forward	src/parser.c	/^void expect_next_character_with_one_forward(char* characters, sParserInfo* info)$/;"	f	typeref:typename:void
expression	src/parser.c	/^BOOL expression(unsigned int* node, sParserInfo* info) $/;"	f	typeref:typename:BOOL
expression_add_sub	src/parser.c	/^static BOOL expression_add_sub(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
expression_and	src/parser.c	/^static BOOL expression_and(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
expression_and_and_or_or	src/parser.c	/^static BOOL expression_and_and_or_or(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
expression_comma_operator	src/parser.c	/^static BOOL expression_comma_operator(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
expression_comparison	src/parser.c	/^static BOOL expression_comparison(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
expression_conditional_operator	src/parser.c	/^static BOOL expression_conditional_operator(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
expression_equal	src/parser.c	/^static BOOL expression_equal(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
expression_mult_div	src/parser.c	/^static BOOL expression_mult_div(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
expression_node	src/parser.c	/^static BOOL expression_node(unsigned int* node, BOOL enable_assginment, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
expression_or	src/parser.c	/^static BOOL expression_or(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
expression_shift	src/parser.c	/^static BOOL expression_shift(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
expression_xor	src/parser.c	/^static BOOL expression_xor(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
extended	code/neo-c.h	/^    bool extended;$/;"	m	struct:regex_struct	typeref:typename:bool
extended	neo-c.h	/^    bool extended;$/;"	m	struct:regex_struct	typeref:typename:bool
extname	src/preprocessor.c	/^static char* extname(char* file_name)$/;"	f	typeref:typename:char *	file:
fNativeMethod	sevenstars/src/common.h	/^typedef bool (*fNativeMethod)(CLVALUE** stack_ptr, sVMInfo* info);$/;"	t	typeref:typename:bool (*)(CLVALUE ** stack_ptr,sVMInfo * info)
final_vtable	src/vtable.c	/^void final_vtable()$/;"	f	typeref:typename:void
finalize	code/neo-c.h	/^    finalize() {$/;"	f
finalize	code/neo-c.h	/^    finalize()$/;"	f
finalize	neo-c.h	/^    finalize() {$/;"	f
finalize	neo-c.h	/^    finalize()$/;"	f
finalize_macro	src/macro.c	/^void finalize_macro()$/;"	f	typeref:typename:void
find	code/neo-c.h	/^    bool find(map<T, T2>* self, T& key) {$/;"	f	typeref:typename:bool
find	neo-c.h	/^    bool find(map<T, T2>* self, T& key) {$/;"	f	typeref:typename:bool
find	neo-c.h	/^    int find(list<T>* self, T& item, int default_value) {$/;"	f	typeref:typename:int
find	neo-c.h	/^    int find(vector<T>* self, T& item, int default_value) {$/;"	f	typeref:typename:int
finishDebugFunctionInfo	src/llvm.cpp	/^void finishDebugFunctionInfo()$/;"	f	typeref:typename:void
first_case	src/common.h	/^    BOOL first_case;$/;"	m	struct:sParserInfoStruct	typeref:typename:BOOL
free_block_variables_on_break	src/vtable.c	/^void free_block_variables_on_break(struct sNodeBlockStruct* current_node_block, struct sCompileI/;"	f	typeref:typename:void
free_class	src/klass.c	/^static void free_class(sCLClass* klass)$/;"	f	typeref:typename:void	file:
free_node_types	src/node_type.c	/^void free_node_types()$/;"	f	typeref:typename:void
free_nodes	src/node_alloc.c	/^void free_nodes()$/;"	f	typeref:typename:void
free_object	src/llvm.cpp	/^void free_object(sNodeType* node_type, void* address, BOOL force_delete, sCompileInfo* info)$/;"	f	typeref:typename:void
free_objects	src/vtable.c	/^void free_objects(sVarTable* table, sCompileInfo* info)$/;"	f	typeref:typename:void
free_objects_on_break	src/vtable.c	/^void free_objects_on_break(sVarTable* table, sCompileInfo* info)$/;"	f	typeref:typename:void
free_right_value_object	src/llvm.cpp	/^static void free_right_value_object(sNodeType* node_type, void* obj, BOOL force_delete, sCompile/;"	f	typeref:typename:void	file:
free_right_value_objects	src/llvm.cpp	/^void free_right_value_objects(sCompileInfo* info)$/;"	f	typeref:typename:void
freed	src/memalloc-stdc.c	/^    int freed;$/;"	m	struct:sHeapDebug	typeref:typename:int	file:
fun	a.c	/^int fun(int a, int b) {$/;"	f	typeref:typename:int
fun_name	src/common.h	/^    char fun_name[VAR_NAME_MAX];$/;"	m	struct:sCompileInfoStruct	typeref:typename:char[]
fun_name	src/common.h	/^    char fun_name[VAR_NAME_MAX];$/;"	m	struct:sParserInfoStruct	typeref:typename:char[]
fun_name	src/memalloc-stdc.c	/^    char fun_name[128];$/;"	m	struct:sHeapDebug	typeref:typename:char[128]	file:
function_lvtable	src/common.h	/^    void* function_lvtable;$/;"	m	struct:sCompileInfoStruct	typeref:typename:void *
function_node_block	src/common.h	/^    struct sNodeBlockStruct* function_node_block;$/;"	m	struct:sCompileInfoStruct	typeref:struct:sNodeBlockStruct *
gARGC	src/compiler.c	/^int gARGC;$/;"	v	typeref:typename:int
gARGV	src/compiler.c	/^char** gARGV;$/;"	v	typeref:typename:char **
gClassTable	src/klass.c	/^static sClassTable gClassTable[CLASS_NUM_MAX];$/;"	v	typeref:typename:sClassTable[]	file:
gFuncs	src/node.cpp	/^std::map<std::string, std::vector<sFunction*>> gFuncs;$/;"	v	typeref:typename:std::map<std::string,std::vector<sFunction * >>
gFunction	src/llvm.cpp	/^Function* gFunction;$/;"	v	typeref:typename:Function *
gFunctionStack	src/node.cpp	/^std::vector<sFunction> gFunctionStack;$/;"	v	typeref:typename:std::vector<sFunction>
gGenericsFunNum	src/node.cpp	/^int gGenericsFunNum = 0;$/;"	v	typeref:typename:int
gHeadClassTable	src/klass.c	/^sClassTable* gHeadClassTable = NULL;$/;"	v	typeref:typename:sClassTable *
gHeadVTable	src/vtable.c	/^sVarTable* gHeadVTable;$/;"	v	typeref:typename:sVarTable *
gHeapDebugs	src/memalloc-stdc.c	/^struct sHeapDebug* gHeapDebugs = NULL;$/;"	v	typeref:struct:sHeapDebug *
gLLVMStack	src/llvm.cpp	/^LVALUE* gLLVMStack;$/;"	v	typeref:typename:LVALUE *
gLLVMStackHead	src/llvm.cpp	/^LVALUE* gLLVMStackHead;$/;"	v	typeref:typename:LVALUE *
gLLVMStructType	src/llvm.cpp	/^std::map<std::string, std::pair<Type*, sNodeType*>> gLLVMStructType;$/;"	v	typeref:typename:std::map<std::string,std::pair<Type *,sNodeType * >>
gLVTableValue	src/llvm.cpp	/^GlobalVariable* gLVTableValue;$/;"	v	typeref:typename:GlobalVariable *
gLabels	src/node.cpp	/^std::map<std::string, BasicBlock*> gLabels;$/;"	v	typeref:typename:std::map<std::string,BasicBlock * >
gMacros	src/macro.c	/^struct sMacro gMacros[MACRO_MAX];$/;"	v	typeref:struct:sMacro[]
gMainModulePath	src/compiler.c	/^char gMainModulePath[PATH_MAX];$/;"	v	typeref:typename:char[]
gMaxMemAlloc	src/memalloc-stdc.c	/^int gMaxMemAlloc = 0;$/;"	v	typeref:typename:int
gNCDebug	src/compiler.c	/^BOOL gNCDebug = FALSE;$/;"	v	typeref:typename:BOOL
gNCDebugHeap	src/compiler.c	/^BOOL gNCDebugHeap = FALSE;$/;"	v	typeref:typename:BOOL
gNCDebugHeap	src/memalloc-stdc.c	/^int gNCDebugHeap = 0;$/;"	v	typeref:typename:int
gNCDebugHeapValue	src/llvm.cpp	/^GlobalVariable* gNCDebugHeapValue;$/;"	v	typeref:typename:GlobalVariable *
gNodeTypes	src/node_type.c	/^static sNodeType** gNodeTypes = NULL;$/;"	v	typeref:typename:sNodeType **	file:
gNodes	src/node_alloc.c	/^sNodeTree* gNodes;$/;"	v	typeref:typename:sNodeTree *
gNumHeapDebugs	src/memalloc-stdc.c	/^int gNumHeapDebugs = 0;$/;"	v	typeref:typename:int
gNumLambdaName	src/parser.c	/^int gNumLambdaName = 0;$/;"	v	typeref:typename:int
gNumMemAlloc	src/memalloc-stdc.c	/^int gNumMemAlloc = 0;$/;"	v	typeref:typename:int
gPreprocessorFunctions	src/preprocessor.c	/^sPreprocessorFunction gPreprocessorFunctions[PREPROCESSOR_FUN_MAX];$/;"	v	typeref:typename:sPreprocessorFunction[]
gSizeHeapDebugs	src/memalloc-stdc.c	/^int gSizeHeapDebugs = 0;$/;"	v	typeref:typename:int
gSizeNodes	src/node_alloc.c	/^int gSizeNodes = 0;$/;"	v	typeref:typename:int
gSizePageNodeTypes	src/node_type.c	/^static int gSizePageNodeTypes = 0;$/;"	v	typeref:typename:int	file:
gTypeDefTable	src/typedef.c	/^static struct sTypeDefTable gTypeDefTable[TYPEDEF_MAX];$/;"	v	typeref:struct:sTypeDefTable[]	file:
gUsedNodeTypes	src/node_type.c	/^static int gUsedNodeTypes = 0;$/;"	v	typeref:typename:int	file:
gUsedNodes	src/node_alloc.c	/^int gUsedNodes = 0;$/;"	v	typeref:typename:int
gUsedPageNodeTypes	src/node_type.c	/^static int gUsedPageNodeTypes = 0;$/;"	v	typeref:typename:int	file:
gVersion	src/compiler.c	/^char* gVersion = "1.2.5";$/;"	v	typeref:typename:char *
generics_type	src/common.h	/^    sNodeType* generics_type;$/;"	m	struct:sCompileInfoStruct	typeref:typename:sNodeType *
get_block_text	src/parser.c	/^static BOOL get_block_text(sBuf* buf, sParserInfo* info, BOOL append_head_currly_brace, BOOL las/;"	f	typeref:typename:BOOL	file:
get_class	src/klass.c	/^sCLClass* get_class(char* class_name)$/;"	f	typeref:typename:sCLClass *
get_command_result	src/macro.c	/^static BOOL get_command_result(sBuf* command_result, char* macro_name, char* cmdline, char* para/;"	f	typeref:typename:BOOL	file:
get_const_value_from_node	src/llvm.cpp	/^BOOL get_const_value_from_node(int* array_size, unsigned int array_size_node, sParserInfo* info)$/;"	f	typeref:typename:BOOL
get_dummy_value	src/llvm.cpp	/^Value* get_dummy_value(sNodeType* node_type, sCompileInfo* info)$/;"	f	typeref:typename:Value *
get_field_index	src/klass.c	/^int get_field_index(sCLClass* klass, char* var_name, int* parent_field_index)$/;"	f	typeref:typename:int
get_free_block	src/memalloc.c	/^struct header_t *get_free_block(size_t size)$/;"	f	typeref:struct:header_t *
get_func	src/preprocessor.c	/^static sPreprocessorFunction* get_func(char* name)$/;"	f	typeref:typename:sPreprocessorFunction *	file:
get_hash_key	code/neo-c.h	/^    inline int get_hash_key(char* value)$/;"	f	typeref:typename:int
get_hash_key	code/neo-c.h	/^    inline int get_hash_key(int value)$/;"	f	typeref:typename:int
get_hash_key	code/neo-c.h	/^    inline int get_hash_key(wchar_t* value)$/;"	f	typeref:typename:int
get_hash_key	neo-c.h	/^    inline int get_hash_key(char value)$/;"	f	typeref:typename:int
get_hash_key	neo-c.h	/^    inline int get_hash_key(char* value)$/;"	f	typeref:typename:int
get_hash_key	neo-c.h	/^    inline int get_hash_key(int value)$/;"	f	typeref:typename:int
get_hash_key	neo-c.h	/^    inline int get_hash_key(wchar_t value)$/;"	f	typeref:typename:int
get_hash_key	neo-c.h	/^    inline int get_hash_key(wchar_t* value)$/;"	f	typeref:typename:int
get_hash_key	src/klass.c	/^unsigned int get_hash_key(char* name, unsigned int max)$/;"	f	typeref:typename:unsigned int
get_hex_number	src/parser.c	/^BOOL get_hex_number(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL
get_llvm_alignment_from_node_type	src/llvm.cpp	/^int get_llvm_alignment_from_node_type(sNodeType* node_type)$/;"	f	typeref:typename:int
get_lvtable_type	src/llvm.cpp	/^static Type* get_lvtable_type()$/;"	f	typeref:typename:Type *	file:
get_macro	src/macro.c	/^char* get_macro(char* name)$/;"	f	typeref:typename:char *
get_number	src/parser.c	/^BOOL get_number(BOOL minus, unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL
get_oct_number	src/parser.c	/^BOOL get_oct_number(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL
get_parent_var_num_of_sum	src/vtable.c	/^int get_parent_var_num_of_sum(sVarTable* table)$/;"	f	typeref:typename:int
get_size_from_node_type	src/llvm.cpp	/^BOOL get_size_from_node_type(uint64_t* result, sNodeType* node_type, sNodeType* generics_type, s/;"	f	typeref:typename:BOOL
get_sum_of_parent_var_num	src/vtable.c	/^static int get_sum_of_parent_var_num(sVarTable* table)$/;"	f	typeref:typename:int	file:
get_type_of_method_generics	src/node_type.c	/^BOOL get_type_of_method_generics(sNodeType* method_generics_types[GENERICS_TYPES_MAX], sNodeType/;"	f	typeref:typename:BOOL
get_typedef	src/typedef.c	/^sNodeType* get_typedef(char* name)$/;"	f	typeref:typename:sNodeType *
get_value_from_stack	src/llvm.cpp	/^LVALUE* get_value_from_stack(int offset)$/;"	f	typeref:typename:LVALUE *
get_var_num	src/vtable.c	/^int get_var_num(sVarTable* table)$/;"	f	typeref:typename:int
get_variable_from_index	src/vtable.c	/^sVar* get_variable_from_index(sVarTable* table, int index)$/;"	f	typeref:typename:sVar *
get_variable_from_table	src/vtable.c	/^sVar* get_variable_from_table(sVarTable* table, char* name)$/;"	f	typeref:typename:sVar *
get_variable_from_this_table_only	src/vtable.c	/^sVar* get_variable_from_this_table_only(sVarTable* table, char* name)$/;"	f	typeref:typename:sVar *
get_variable_index	src/vtable.c	/^int get_variable_index(sVarTable* table, char* name, BOOL* parent)$/;"	f	typeref:typename:int
global	code/neo-c.h	/^    bool global;$/;"	m	struct:regex_struct	typeref:typename:bool
global	neo-c.h	/^    bool global;$/;"	m	struct:regex_struct	typeref:typename:bool
has_block_result	src/common.h	/^    BOOL has_block_result;$/;"	m	struct:sCompileInfoStruct	typeref:typename:BOOL
head	src/memalloc.c	/^struct header_t *head = NULL, *tail = NULL;$/;"	v	typeref:struct:header_t *
header_t	src/memalloc.c	/^struct header_t {$/;"	s	file:
height	wi/common.h	/^    int height;$/;"	m	struct:ViWin	typeref:typename:int
i	code/neo-c.h	/^                var i = 0;$/;"	v	typeref:typename:var
i	code/neo-c.h	/^        for(int i=0; i<len; i++) {$/;"	v	typeref:typename:int
i	code/neo-c.h	/^        var i = 0;$/;"	v	typeref:typename:var
i	neo-c.h	/^                var i = 0;$/;"	v	typeref:typename:var
i	neo-c.h	/^        for(int i=0; i<len; i++) {$/;"	v	typeref:typename:int
i	neo-c.h	/^        for(int i=0; i<self.len; i++) {$/;"	v	typeref:typename:int
i	neo-c.h	/^        var i = 0;$/;"	v	typeref:typename:var
i_	neo-c.h	/^        for(int i_=0; i_<self.len; i_++) {$/;"	v	typeref:typename:int
ignore_case	code/neo-c.h	/^    bool ignore_case;$/;"	m	struct:regex_struct	typeref:typename:bool
ignore_case	neo-c.h	/^    bool ignore_case;$/;"	m	struct:regex_struct	typeref:typename:bool
impl_struct_name	src/common.h	/^    char impl_struct_name[VAR_NAME_MAX];$/;"	m	struct:sParserInfoStruct	typeref:typename:char[]
in_case	src/common.h	/^    BOOL in_case;$/;"	m	struct:sParserInfoStruct	typeref:typename:BOOL
in_clang	src/common.h	/^    BOOL in_clang;$/;"	m	struct:sParserInfoStruct	typeref:typename:BOOL
in_inline_function	src/common.h	/^    BOOL in_inline_function;$/;"	m	struct:sCompileInfoStruct	typeref:typename:BOOL
included_generics_type	src/node_type.c	/^BOOL included_generics_type(sNodeType* node_type, sCLClass* checked_class[], int* num_checked_cl/;"	f	typeref:typename:BOOL
includedir	Makefile	/^includedir=${prefix}\/include\/neo-c$/;"	m
includedir	Makefile.in	/^includedir=@includedir@\/neo-c$/;"	m
includedir	sevenstars/Makefile.in	/^includedir=@includedir@\/sevenstars$/;"	m
includedir	tiny/Makefile.in	/^includedir=@includedir@\/neo-c$/;"	m
includedir	wi/Makefile.in	/^includedir=@includedir@\/neo-c$/;"	m
init_block_vtable	src/vtable.c	/^sVarTable* init_block_vtable(sVarTable* lv_table, BOOL no_increment_block_level)$/;"	f	typeref:typename:sVarTable *
init_macro	src/macro.c	/^void init_macro()$/;"	f	typeref:typename:void
init_node_types	src/node_type.c	/^void init_node_types()$/;"	f	typeref:typename:void
init_nodes	src/node_alloc.c	/^void init_nodes()$/;"	f	typeref:typename:void
init_typedef	src/typedef.c	/^void init_typedef()$/;"	f	typeref:typename:void
init_var_table	src/vtable.c	/^sVarTable* init_var_table()$/;"	f	typeref:typename:sVarTable *
init_vtable	src/vtable.c	/^void init_vtable()$/;"	f	typeref:typename:void
initialize	code/neo-c.h	/^    initialize() $/;"	f
initialize	code/neo-c.h	/^    initialize() {$/;"	f
initialize	neo-c.h	/^    initialize() $/;"	f
initialize	neo-c.h	/^    initialize() {$/;"	f
inline_func_end	src/common.h	/^    void* inline_func_end;$/;"	m	struct:sCompileInfoStruct	typeref:typename:void *
insert	code/neo-c.h	/^    void insert(list<T>* self, int position, T item)$/;"	f	typeref:typename:void
insert	code/neo-c.h	/^    void insert(map<T,T2>* self, T key, T2 item) $/;"	f	typeref:typename:void
insert	neo-c.h	/^    void insert(list<T>* self, int position, T item)$/;"	f	typeref:typename:void
insert	neo-c.h	/^    void insert(map<T,T2>* self, T key, T2 item) $/;"	f	typeref:typename:void
install	Makefile	/^install:$/;"	t
install	Makefile.in	/^install:$/;"	t
install	sevenstars/Makefile.in	/^install:$/;"	t
install	tiny/Makefile.in	/^install:$/;"	t
install	wi/Makefile.in	/^install:$/;"	t
intValue	tiny/common.h	/^    int intValue;$/;"	m	struct:TinyNode	typeref:typename:int
is_free	src/memalloc.c	/^    unsigned is_free;$/;"	m	struct:header_t	typeref:typename:unsigned	file:
is_function_name	src/node.cpp	/^BOOL is_function_name(char* name)$/;"	f	typeref:typename:BOOL
is_generics_type	src/llvm.cpp	/^static BOOL is_generics_type(sNodeType* node_type)$/;"	f	typeref:typename:BOOL	file:
is_included_var_from_this_table_only	src/vtable.c	/^BOOL is_included_var_from_this_table_only(sVarTable* table, sVar* var)$/;"	f	typeref:typename:BOOL
is_number_type	src/node_type.c	/^BOOL is_number_type(sNodeType* node_type)$/;"	f	typeref:typename:BOOL
is_premitive_type	src/parser.c	/^static BOOL is_premitive_type(char* buf, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
is_type_name	src/parser.c	/^static BOOL is_type_name(char* buf, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
is_typeof_type	src/node_type.c	/^BOOL is_typeof_type(sNodeType* node_type)$/;"	f	typeref:typename:BOOL
it	neo-c.h	/^            T& it = self.items[i];$/;"	v	typeref:typename:T &
it	neo-c.h	/^        list_item<T>* it = self.head;$/;"	v	typeref:typename:list_item<T> *
item	code/neo-c.h	/^    T& item(list<T>* self, int position, T& default_value) $/;"	f	typeref:typename:T &
item	code/neo-c.h	/^    T& item(vector<T>* self, int index, T& default_value) $/;"	f	typeref:typename:T &
item	code/neo-c.h	/^    T& item;$/;"	m	struct:list_item	typeref:typename:T &
item	neo-c.h	/^    T& item(list<T>* self, int position, T& default_value) $/;"	f	typeref:typename:T &
item	neo-c.h	/^    T& item(vector<T>* self, int index, T& default_value) $/;"	f	typeref:typename:T &
item	neo-c.h	/^    T& item;$/;"	m	struct:list_item	typeref:typename:T &
item_before	neo-c.h	/^            T& item_before = self.item(0, null);$/;"	v	typeref:typename:T &
item_existance	code/neo-c.h	/^    bool* item_existance;$/;"	m	struct:map	typeref:typename:bool *
item_existance	neo-c.h	/^    bool* item_existance;$/;"	m	struct:map	typeref:typename:bool *
items	code/neo-c.h	/^    T&* items;$/;"	m	struct:vector	typeref:typename:T & *
items	code/neo-c.h	/^    T2&* items;$/;"	m	struct:map	typeref:typename:T2 & *
items	neo-c.h	/^    T&* items;$/;"	m	struct:vector	typeref:typename:T & *
items	neo-c.h	/^    T2&* items;$/;"	m	struct:map	typeref:typename:T2 & *
join	code/neo-c.h	/^    string join(list<string>* self, char* separator) {$/;"	f	typeref:typename:string
join	neo-c.h	/^    string join(list<string>* self, char* separator) {$/;"	f	typeref:typename:string
kNodeTypeAdd	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeAlignOf	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeAlignOfExpression	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeAnd	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeAndAnd	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeArrayWithInitialization	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeBorrow	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeBreak	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeCString	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeCase	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeCast	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeChar	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeClassName	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeClassNameExpression	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeClone	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeComma	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeComplement	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeConditional	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeContinue	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeDefineVariable	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeDefineVariables	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeDelete	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeDerefference	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeDiv	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeDoWhile	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeDummyHeap	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeEqualAnd	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeEqualDiv	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeEqualLShift	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeEqualMinus	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeEqualMod	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeEqualMult	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeEqualOr	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeEqualPlus	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeEqualRShift	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeEqualXor	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeEquals	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeExternalFunction	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeFalse	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeFor	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeFunction	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeFunctionCall	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeGenericsFunction	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeGoto	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeGt	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeGteq	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeIf	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeImpl	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeInlineFunction	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeIntValue	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeIsHeap	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeIsHeapExpression	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeIsManaged	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeIsManagedExpression	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeLabel	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeLambdaCall	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeLe	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeLeeq	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeLeftShift	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeLoadAddressValue	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeLoadElement	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeLoadField	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeLoadFunction	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeLoadVariable	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeLogicalDenial	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeLongValue	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeManaged	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeMinusMinus	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeMod	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeMult	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeNormalBlock	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeNotEquals	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeNull	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeObject	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeOr	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeOrOr	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypePlusPlus	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeRefference	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeReturn	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeRightShift	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeSimpleLambdaParam	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeSizeOf	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeSizeOfExpression	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeStackObject	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeStoreAddress	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeStoreElement	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeStoreField	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeStoreVariable	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeStruct	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeStructWithInitialization	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeSub	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeSwitch	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeTrue	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeTypeDef	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeUIntValue	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeULongValue	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeUnion	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeVaArg	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeWhile	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
kNodeTypeXor	src/common.h	/^enum eNodeType { kNodeTypeIntValue, kNodeTypeUIntValue, kNodeTypeLongValue, kNodeTypeULongValue,/;"	e	enum:eNodeType
keys	code/neo-c.h	/^    T&* keys;$/;"	m	struct:map	typeref:typename:T & *
keys	neo-c.h	/^    T&* keys;$/;"	m	struct:map	typeref:typename:T & *
last_expression_is_return	src/common.h	/^    BOOL last_expression_is_return;$/;"	m	struct:sCompileInfoStruct	typeref:typename:BOOL
len	code/neo-c.h	/^    int len;$/;"	m	struct:buffer	typeref:typename:int
len	code/neo-c.h	/^    int len;$/;"	m	struct:map	typeref:typename:int
len	code/neo-c.h	/^    int len;$/;"	m	struct:vector	typeref:typename:int
len	code/neo-c.h	/^    int len;$/;"	v	typeref:typename:int
len	neo-c.h	/^    int len;$/;"	m	struct:buffer	typeref:typename:int
len	neo-c.h	/^    int len;$/;"	m	struct:map	typeref:typename:int
len	neo-c.h	/^    int len;$/;"	m	struct:vector	typeref:typename:int
len	neo-c.h	/^    int len;$/;"	v	typeref:typename:int
length	code/neo-c.h	/^    inline int length(char* str)$/;"	f	typeref:typename:int
length	code/neo-c.h	/^    inline int length(wchar_t* str)$/;"	f	typeref:typename:int
length	code/neo-c.h	/^    int length(list<T>* self)$/;"	f	typeref:typename:int
length	code/neo-c.h	/^    int length(vector<T>* self)$/;"	f	typeref:typename:int
length	neo-c.h	/^    inline int length(char* str)$/;"	f	typeref:typename:int
length	neo-c.h	/^    inline int length(wchar_t* str)$/;"	f	typeref:typename:int
length	neo-c.h	/^    int length(list<T>* self)$/;"	f	typeref:typename:int
length	neo-c.h	/^    int length(map<T, T2>* self) {$/;"	f	typeref:typename:int
length	neo-c.h	/^    int length(vector<T>* self)$/;"	f	typeref:typename:int
libdir	Makefile	/^libdir=${exec_prefix}\/lib$/;"	m
libdir	Makefile.in	/^libdir=@libdir@$/;"	m
libdir	sevenstars/Makefile.in	/^libdir=@libdir@$/;"	m
libdir	tiny/Makefile.in	/^libdir=@libdir@$/;"	m
libdir	wi/Makefile.in	/^libdir=@libdir@$/;"	m
list1	neo-c.h	/^        var list1 = new list<T>.initialize();$/;"	v	typeref:typename:var
list2	neo-c.h	/^        var list2 = new list<T>.initialize();$/;"	v	typeref:typename:var
list_item	code/neo-c.h	/^struct list_item<T>$/;"	s
list_item	neo-c.h	/^struct list_item<T>$/;"	s
llvm_change_block	src/llvm.cpp	/^void llvm_change_block(BasicBlock* current_block, BasicBlock** current_block_before, sCompileInf/;"	f	typeref:typename:void
llvm_create_string	src/llvm.cpp	/^Value* llvm_create_string(char* str)$/;"	f	typeref:typename:Value *
llvm_final	src/llvm.cpp	/^void llvm_final()$/;"	f	typeref:typename:void
llvm_init	src/llvm.cpp	/^void llvm_init()$/;"	f	typeref:typename:void
load_address_to_lvtable	src/llvm.cpp	/^Value* load_address_to_lvtable(int index, sNodeType* var_type, sCompileInfo* info)$/;"	f	typeref:typename:Value *
load_class	src/klass.c	/^static sCLClass* load_class(char* class_name, int version)$/;"	f	typeref:typename:sCLClass *	file:
load_class_from_class_file	src/klass.c	/^static sCLClass* load_class_from_class_file(char* class_name, char* class_file_name)$/;"	f	typeref:typename:sCLClass *	file:
load_field	src/llvm_common.hpp	/^    BOOL load_field;$/;"	m	struct:LVALUEStruct	typeref:typename:BOOL
loop_begin_block	src/common.h	/^    void* loop_begin_block[LOOP_NEST_MAX];$/;"	m	struct:sCompileInfoStruct	typeref:typename:void * []
loop_end_block	src/common.h	/^    void* loop_end_block[LOOP_NEST_MAX];$/;"	m	struct:sCompileInfoStruct	typeref:typename:void * []
lv_table	src/common.h	/^    sVarTable* lv_table;$/;"	m	struct:sParserInfoStruct	typeref:typename:sVarTable *
mAlloc	src/common.h	/^            BOOL mAlloc;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0208	typeref:typename:BOOL
mAnonymous	src/common.h	/^            BOOL mAnonymous;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0f08	typeref:typename:BOOL
mArrayInitializeNum	src/common.h	/^    int mArrayInitializeNum;$/;"	m	struct:sNodeTypeStruct	typeref:typename:int
mArrayNum	src/common.h	/^    int mArrayNum;$/;"	m	struct:sNodeTypeStruct	typeref:typename:int
mBlockLevel	src/common.h	/^    int mBlockLevel;$/;"	m	struct:sCompileInfoStruct	typeref:typename:int
mBlockLevel	src/common.h	/^    int mBlockLevel;$/;"	m	struct:sParserInfoStruct	typeref:typename:int
mBlockLevel	src/common.h	/^    int mBlockLevel;$/;"	m	struct:sVarStruct	typeref:typename:int
mBlockLevel	src/common.h	/^    int mBlockLevel;$/;"	m	struct:sVarTableStruct	typeref:typename:int
mBlockText	src/common.h	/^            char* mBlockText;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:char *
mBlockText	src/llvm_common.hpp	/^    char* mBlockText;$/;"	m	struct:sFunctionStruct	typeref:typename:char *
mBody	src/macro.c	/^    sBuf mBody;$/;"	m	struct:sMacro	typeref:typename:sBuf	file:
mBuf	src/buffer.h	/^    char* mBuf;$/;"	m	struct:sBufStruct	typeref:typename:char *
mBuf	src/common.h	/^            char* mBuf;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1408	typeref:typename:char *
mCFFIFunction	src/llvm_common.hpp	/^    BOOL mCFFIFunction;$/;"	m	struct:sFunctionStruct	typeref:typename:BOOL
mCaseAfterReturn	src/common.h	/^            BOOL mCaseAfterReturn;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1e08	typeref:typename:BOOL
mCharValue	src/common.h	/^        char mCharValue;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:typename:char
mClass	sevenstars/src/common.h	/^    sCLClass* mClass;$/;"	m	struct:sCLType	typeref:typename:sCLClass *
mClass	src/common.h	/^    sCLClass* mClass;$/;"	m	struct:sNodeTypeStruct	typeref:typename:sCLClass *
mClassNameOffset	src/common.h	/^    int mClassNameOffset;$/;"	m	struct:sCLClassStruct	typeref:typename:int
mConst	src/common.h	/^    char* mConst;$/;"	m	struct:sConstStruct	typeref:typename:char *
mConst	src/common.h	/^    sConst mConst;$/;"	m	struct:sCLClassStruct	typeref:typename:sConst
mConstant	src/common.h	/^    BOOL mConstant;$/;"	m	struct:sNodeTypeStruct	typeref:typename:BOOL
mConstant	src/common.h	/^    BOOL mConstant;$/;"	m	struct:sVarStruct	typeref:typename:BOOL
mConstructorFun	src/common.h	/^            BOOL mConstructorFun;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:BOOL
mDefaultValue	src/common.h	/^    char mDefaultValue[METHOD_DEFAULT_PARAM_MAX];$/;"	m	struct:sParserParamStruct	typeref:typename:char[]
mDummyHeap	src/common.h	/^    BOOL mDummyHeap;$/;"	m	struct:sNodeTypeStruct	typeref:typename:BOOL
mDynamicArrayNum	src/common.h	/^    unsigned int mDynamicArrayNum;$/;"	m	struct:sNodeTypeStruct	typeref:typename:unsigned int
mElifExpressionNodes	src/common.h	/^            unsigned int mElifExpressionNodes[ELIF_NUM_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0d08	typeref:typename:unsigned int[]
mElifNodeBlocks	src/common.h	/^            MANAGED struct sNodeBlockStruct* mElifNodeBlocks[ELIF_NUM_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0d08	typeref:struct:sNodeBlockStruct * []
mElifNum	src/common.h	/^            int mElifNum;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0d08	typeref:typename:int
mElseNodeBlock	src/common.h	/^            MANAGED struct sNodeBlockStruct* mElseNodeBlock;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0d08	typeref:struct:sNodeBlockStruct *
mExpression	src/common.h	/^            unsigned int mExpression;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1d08	typeref:typename:unsigned int
mExpression	src/common.h	/^            unsigned int mExpression;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1e08	typeref:typename:unsigned int
mExpressionNode	src/common.h	/^            unsigned int mExpressionNode;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0d08	typeref:typename:unsigned int
mExpressionNode	src/common.h	/^            unsigned int mExpressionNode;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0e08	typeref:typename:unsigned int
mExpressionNode	src/common.h	/^            unsigned int mExpressionNode;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1308	typeref:typename:unsigned int
mExpressionNode2	src/common.h	/^            unsigned int mExpressionNode2;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1308	typeref:typename:unsigned int
mExpressionNode3	src/common.h	/^            unsigned int mExpressionNode3;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1308	typeref:typename:unsigned int
mExtern	src/common.h	/^            BOOL mExtern;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0308	typeref:typename:BOOL
mExtern	src/common.h	/^            BOOL mExtern;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0508	typeref:typename:BOOL
mExternCLang	src/common.h	/^    int mExternCLang;$/;"	m	struct:sNodeBlockStruct	typeref:typename:int
mExternal	src/llvm_common.hpp	/^    BOOL mExternal;$/;"	m	struct:sFunctionStruct	typeref:typename:BOOL
mFieldNameOffsets	src/common.h	/^    unsigned int mFieldNameOffsets[STRUCT_FIELD_MAX];$/;"	m	struct:sCLClassStruct	typeref:typename:unsigned int[]
mFields	src/common.h	/^    struct sNodeTypeStruct* mFields[STRUCT_FIELD_MAX];$/;"	m	struct:sCLClassStruct	typeref:struct:sNodeTypeStruct * []
mFinalize	src/common.h	/^            BOOL mFinalize;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:BOOL
mFinalizeGenericsFunNum	src/common.h	/^    int mFinalizeGenericsFunNum;$/;"	m	struct:sNodeTypeStruct	typeref:typename:int
mFirstCase	src/common.h	/^            BOOL mFirstCase;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1e08	typeref:typename:BOOL
mFlags	src/common.h	/^    clint64 mFlags;$/;"	m	struct:sCLClassStruct	typeref:typename:clint64
mForNodeBlock	src/common.h	/^            MANAGED struct sNodeBlockStruct* mForNodeBlock;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1308	typeref:struct:sNodeBlockStruct *
mFreed	src/common.h	/^    BOOL mFreed;$/;"	m	struct:sClassTableStruct	typeref:typename:BOOL
mFunName	src/common.h	/^            char mFunName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0408	typeref:typename:char[]
mFunVersion	src/common.h	/^    int mFunVersion;$/;"	m	struct:sParserInfoStruct	typeref:typename:int
mGenericsFunNum	src/common.h	/^            int mGenericsFunNum;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:int
mGenericsFunNum	src/llvm_common.hpp	/^    int mGenericsFunNum;$/;"	m	struct:sFunctionStruct	typeref:typename:int
mGenericsFunction	src/common.h	/^            BOOL mGenericsFunction;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:BOOL
mGenericsFunction	src/llvm_common.hpp	/^    BOOL mGenericsFunction;$/;"	m	struct:sFunctionStruct	typeref:typename:BOOL
mGenericsNum	src/common.h	/^    int mGenericsNum;$/;"	m	struct:sCLClassStruct	typeref:typename:int
mGenericsType	src/common.h	/^    sNodeType* mGenericsType;$/;"	m	struct:sParserInfoStruct	typeref:typename:sNodeType *
mGenericsType	src/llvm_common.hpp	/^    sNodeType* mGenericsType;$/;"	m	struct:sFunctionStruct	typeref:typename:sNodeType *
mGenericsTypeNames	src/common.h	/^            char mGenericsTypeNames[PARAMS_MAX][VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:char[][]
mGenericsTypeNames	src/common.h	/^            char mGenericsTypeNames[PARAMS_MAX][VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0c08	typeref:typename:char[][]
mGenericsTypeNames	src/common.h	/^    char mGenericsTypeNames[GENERICS_TYPES_MAX][VAR_NAME_MAX];$/;"	m	struct:sParserInfoStruct	typeref:typename:char[][]
mGenericsTypeNames	src/llvm_common.hpp	/^    char mGenericsTypeNames[GENERICS_TYPES_MAX][VAR_NAME_MAX];$/;"	m	struct:sFunctionStruct	typeref:typename:char[][]
mGenericsTypes	sevenstars/src/common.h	/^    sCLType* mGenericsTypes[GENERICS_TYPES_MAX];$/;"	m	struct:sCLType	typeref:typename:sCLType * []
mGenericsTypes	src/common.h	/^    struct sNodeTypeStruct* mGenericsTypes[GENERICS_TYPES_MAX];$/;"	m	struct:sNodeTypeStruct	typeref:struct:sNodeTypeStruct * []
mGlobal	src/common.h	/^            BOOL mGlobal;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0208	typeref:typename:BOOL
mGlobal	src/common.h	/^            BOOL mGlobal;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0308	typeref:typename:BOOL
mGlobal	src/common.h	/^            BOOL mGlobal;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0508	typeref:typename:BOOL
mGlobal	src/common.h	/^            BOOL mGlobal;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0608	typeref:typename:BOOL
mGlobal	src/common.h	/^    BOOL mGlobal;$/;"	m	struct:sVarStruct	typeref:typename:BOOL
mHasResult	src/common.h	/^    BOOL mHasResult;$/;"	m	struct:sNodeBlockStruct	typeref:typename:BOOL
mHeap	src/common.h	/^            BOOL mHeap;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1c08	typeref:typename:BOOL
mHeap	src/common.h	/^    BOOL mHeap;$/;"	m	struct:sNodeTypeStruct	typeref:typename:BOOL
mID	src/common.h	/^    int mID;$/;"	m	struct:sVarTableStruct	typeref:typename:int
mIfNodeBlock	src/common.h	/^            MANAGED struct sNodeBlockStruct* mIfNodeBlock;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0d08	typeref:struct:sNodeBlockStruct *
mImplStructName	src/common.h	/^            char mImplStructName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0c08	typeref:typename:char[]
mImplVersion	src/common.h	/^    int mImplVersion;$/;"	m	struct:sParserInfoStruct	typeref:typename:int
mInCLang	src/common.h	/^            BOOL mInCLang;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:BOOL
mInCLang	src/common.h	/^            BOOL mInCLang;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0c08	typeref:typename:BOOL
mInCLang	src/common.h	/^    BOOL mInCLang;$/;"	m	struct:sNodeBlockStruct	typeref:typename:BOOL
mInCLang	src/llvm_common.hpp	/^    BOOL mInCLang;$/;"	m	struct:sFunctionStruct	typeref:typename:BOOL
mIndex	sevenstars/src/common.h	/^    int mIndex;$/;"	m	struct:sCLField	typeref:typename:int
mIndex	src/common.h	/^    int mIndex;$/;"	m	struct:sVarStruct	typeref:typename:int
mInherit	src/common.h	/^            BOOL mInherit;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0c08	typeref:typename:BOOL
mInitializeArrayValue	src/common.h	/^            unsigned int mInitializeArrayValue[INIT_ARRAY_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1b08	typeref:typename:unsigned int[]
mInitialized	src/common.h	/^    BOOL mInitialized;$/;"	m	struct:sClassTableStruct	typeref:typename:BOOL
mInlineFunction	src/llvm_common.hpp	/^    BOOL mInlineFunction;$/;"	m	struct:sFunctionStruct	typeref:typename:BOOL
mIntValue	src/common.h	/^        int mIntValue;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:typename:int
mItem	src/common.h	/^    sCLClass* mItem;$/;"	m	struct:sClassTableStruct	typeref:typename:sCLClass *
mItem	src/typedef.c	/^    sNodeType* mItem;$/;"	m	struct:sTypeDefTable	typeref:typename:sNodeType *	file:
mLLVMFunction	src/llvm_common.hpp	/^    Function* mLLVMFunction;$/;"	m	struct:sFunctionStruct	typeref:typename:Function *
mLLVMValue	src/common.h	/^    void* mLLVMValue;$/;"	m	struct:sVarStruct	typeref:typename:void *
mLVTable	src/common.h	/^    sVarTable* mLVTable;$/;"	m	struct:sNodeBlockStruct	typeref:typename:sVarTable *
mLambda	src/common.h	/^            BOOL mLambda;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:BOOL
mLastCase	src/common.h	/^            BOOL mLastCase;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1e08	typeref:typename:BOOL
mLeft	src/common.h	/^    unsigned int mLeft;$/;"	m	struct:sNodeTreeStruct	typeref:typename:unsigned int
mLen	src/buffer.h	/^    int mLen;$/;"	m	struct:sBufStruct	typeref:typename:int
mLen	src/common.h	/^    unsigned int mLen;$/;"	m	struct:sConstStruct	typeref:typename:unsigned int
mLine	src/common.h	/^    int mLine;$/;"	m	struct:sNodeTreeStruct	typeref:typename:int
mLocalVariables	src/common.h	/^    sVar mLocalVariables[LOCAL_VARIABLE_MAX];  \/\/ open address hash$/;"	m	struct:sVarTableStruct	typeref:typename:sVar[]
mLongValue	src/common.h	/^        long long int mLongValue;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:typename:long long int
mMaxBlockVarNum	src/common.h	/^    int mMaxBlockVarNum;$/;"	m	struct:sVarTableStruct	typeref:typename:int
mMaxVarNum	sevenstars/src/common.h	/^    int mMaxVarNum;$/;"	m	struct:sCLMethod	typeref:typename:int
mMethod	src/common.h	/^            BOOL mMethod;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0c08	typeref:typename:BOOL
mMethodGenericsNum	src/common.h	/^    int mMethodGenericsNum;$/;"	m	struct:sCLClassStruct	typeref:typename:int
mMethodGenericsTypeNames	src/common.h	/^            char mMethodGenericsTypeNames[GENERICS_TYPES_MAX][VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:char[][]
mMethodGenericsTypeNames	src/common.h	/^    char mMethodGenericsTypeNames[GENERICS_TYPES_MAX][VAR_NAME_MAX];$/;"	m	struct:sParserInfoStruct	typeref:typename:char[][]
mMethodGenericsTypeNames	src/llvm_common.hpp	/^    char mMethodGenericsTypeNames[GENERICS_TYPES_MAX][VAR_NAME_MAX];$/;"	m	struct:sFunctionStruct	typeref:typename:char[][]
mMethodGenericsTypes	src/common.h	/^    sNodeType* mMethodGenericsTypes[GENERICS_TYPES_MAX];$/;"	m	struct:sParserInfoStruct	typeref:typename:sNodeType * []
mMiddle	src/common.h	/^    unsigned int mMiddle;$/;"	m	struct:sNodeTreeStruct	typeref:typename:unsigned int
mName	sevenstars/src/common.h	/^    char mName[VAR_NAME_MAX];$/;"	m	struct:sCLParam	typeref:typename:char[]
mName	sevenstars/src/common.h	/^    string mName;$/;"	m	struct:sCLClass	typeref:typename:string
mName	sevenstars/src/common.h	/^    string mName;$/;"	m	struct:sCLField	typeref:typename:string
mName	sevenstars/src/common.h	/^    string mName;$/;"	m	struct:sCLMethod	typeref:typename:string
mName	sevenstars/src/common.h	/^    string mName;$/;"	m	struct:sCLType	typeref:typename:string
mName	src/common.h	/^            char mName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:char[]
mName	src/common.h	/^            char mName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0c08	typeref:typename:char[]
mName	src/common.h	/^            char mName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1608	typeref:typename:char[]
mName	src/common.h	/^            char mName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1f08	typeref:typename:char[]
mName	src/common.h	/^            char mName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b2008	typeref:typename:char[]
mName	src/common.h	/^    char mName[VAR_NAME_MAX];$/;"	m	struct:sParserParamStruct	typeref:typename:char[]
mName	src/common.h	/^    char mName[VAR_NAME_MAX];$/;"	m	struct:sVarStruct	typeref:typename:char[]
mName	src/common.h	/^    char* mName;$/;"	m	struct:sClassTableStruct	typeref:typename:char *
mName	src/llvm_common.hpp	/^    char mName[VAR_NAME_MAX];$/;"	m	struct:sFunctionStruct	typeref:typename:char[]
mName	src/macro.c	/^    char mName[VAR_NAME_MAX];$/;"	m	struct:sMacro	typeref:typename:char[]	file:
mName	src/preprocessor.c	/^    char* mName;$/;"	m	struct:sPreprocessorFunctionStruct	typeref:typename:char *	file:
mName	src/typedef.c	/^    char mName[VAR_NAME_MAX];$/;"	m	struct:sTypeDefTable	typeref:typename:char[]	file:
mNext	src/common.h	/^    struct sVarTableStruct* mNext;              \/\/ for free var table$/;"	m	struct:sVarTableStruct	typeref:struct:sVarTableStruct *
mNextClass	src/common.h	/^    struct sClassTableStruct* mNextClass;$/;"	m	struct:sClassTableStruct	typeref:struct:sClassTableStruct *
mNoHeap	src/common.h	/^    BOOL mNoHeap;$/;"	m	struct:sNodeTypeStruct	typeref:typename:BOOL
mNodeBlock	sevenstars/src/common.h	/^    sCLNodeBlock* mNodeBlock;$/;"	m	struct:sCLMethod	typeref:typename:sCLNodeBlock *
mNodeBlock	src/common.h	/^            struct sNodeBlockStruct* mNodeBlock;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:struct:sNodeBlockStruct *
mNodeBlock	src/common.h	/^            struct sNodeBlockStruct* mNodeBlock;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1c08	typeref:struct:sNodeBlockStruct *
mNodeType	src/common.h	/^            sNodeType* mNodeType;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0908	typeref:typename:sNodeType *
mNodeType	src/common.h	/^            sNodeType* mNodeType;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1608	typeref:typename:sNodeType *
mNodeType	src/common.h	/^    enum eNodeType mNodeType;$/;"	m	struct:sNodeTreeStruct	typeref:enum:eNodeType
mNodes	src/common.h	/^            unsigned int mNodes[IMPL_DEF_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0508	typeref:typename:unsigned int[]
mNodes	src/common.h	/^            unsigned int mNodes[IMPL_DEF_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1508	typeref:typename:unsigned int[]
mNodes	src/common.h	/^    unsigned int* mNodes;$/;"	m	struct:sNodeBlockStruct	typeref:typename:unsigned int *
mNullable	sevenstars/src/common.h	/^    bool mNullable;$/;"	m	struct:sCLType	typeref:typename:bool
mNullable	src/common.h	/^    BOOL mNullable;$/;"	m	struct:sNodeTypeStruct	typeref:typename:BOOL
mNumFields	src/common.h	/^    int mNumFields;$/;"	m	struct:sCLClassStruct	typeref:typename:int
mNumFields	src/common.h	/^    int mNumFields;$/;"	m	struct:sNodeTypeStruct	typeref:typename:int
mNumGenerics	src/common.h	/^            int mNumGenerics;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:int
mNumGenerics	src/common.h	/^            int mNumGenerics;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0c08	typeref:typename:int
mNumGenerics	src/common.h	/^    int mNumGenerics;$/;"	m	struct:sParserInfoStruct	typeref:typename:int
mNumGenerics	src/llvm_common.hpp	/^    int mNumGenerics;$/;"	m	struct:sFunctionStruct	typeref:typename:int
mNumGenericsTypes	sevenstars/src/common.h	/^    int mNumGenericsTypes;$/;"	m	struct:sCLType	typeref:typename:int
mNumGenericsTypes	src/common.h	/^    int mNumGenericsTypes;$/;"	m	struct:sNodeTypeStruct	typeref:typename:int
mNumInitializeArrayValue	src/common.h	/^            int mNumInitializeArrayValue;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1b08	typeref:typename:int
mNumMethodGenerics	src/common.h	/^            int mNumMethodGenerics;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:int
mNumMethodGenerics	src/common.h	/^    int mNumMethodGenerics;$/;"	m	struct:sParserInfoStruct	typeref:typename:int
mNumMethodGenerics	src/llvm_common.hpp	/^    int mNumMethodGenerics;$/;"	m	struct:sFunctionStruct	typeref:typename:int
mNumMethodGenericsTypes	src/common.h	/^    int mNumMethodGenericsTypes;$/;"	m	struct:sParserInfoStruct	typeref:typename:int
mNumNodes	src/common.h	/^            int mNumNodes;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0508	typeref:typename:int
mNumNodes	src/common.h	/^            int mNumNodes;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1508	typeref:typename:int
mNumNodes	src/common.h	/^    unsigned int mNumNodes;$/;"	m	struct:sNodeBlockStruct	typeref:typename:unsigned int
mNumParams	sevenstars/src/common.h	/^    int mNumParams;$/;"	m	struct:sCLMethod	typeref:typename:int
mNumParams	sevenstars/src/common.h	/^    int mNumParams;$/;"	m	struct:sCLType	typeref:typename:int
mNumParams	src/common.h	/^            int mNumParams;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:int
mNumParams	src/common.h	/^            int mNumParams;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0b08	typeref:typename:int
mNumParams	src/common.h	/^            int mNumParams;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0c08	typeref:typename:int
mNumParams	src/common.h	/^    int mNumParams;$/;"	m	struct:sNodeTypeStruct	typeref:typename:int
mNumParams	src/llvm_common.hpp	/^    int mNumParams;$/;"	m	struct:sFunctionStruct	typeref:typename:int
mNumSwitchExpression	src/common.h	/^            int mNumSwitchExpression;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1d08	typeref:typename:int
mNumVarTables	src/vtable.c	/^static int mNumVarTables = 0;$/;"	v	typeref:typename:int	file:
mObjectValue	sevenstars/src/common.h	/^    CLObject mObjectValue;$/;"	m	union:CLVALUE	typeref:typename:CLObject
mOperatorFun	src/common.h	/^            BOOL mOperatorFun;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:BOOL
mParamNames	src/llvm_common.hpp	/^    char mParamNames[PARAMS_MAX][VAR_NAME_MAX];$/;"	m	struct:sFunctionStruct	typeref:typename:char[][]
mParamTypes	src/common.h	/^    struct sNodeTypeStruct* mParamTypes[PARAMS_MAX];$/;"	m	struct:sNodeTypeStruct	typeref:struct:sNodeTypeStruct * []
mParamTypes	src/llvm_common.hpp	/^    sNodeType* mParamTypes[PARAMS_MAX];$/;"	m	struct:sFunctionStruct	typeref:typename:sNodeType * []
mParams	sevenstars/src/common.h	/^    sCLParam mParams[PARAMS_MAX];$/;"	m	struct:sCLMethod	typeref:typename:sCLParam[]
mParams	sevenstars/src/common.h	/^    sCLParam mParams[PARAMS_MAX];$/;"	m	struct:sCLType	typeref:typename:sCLParam[]
mParams	src/common.h	/^            sParserParam mParams[PARAMS_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:sParserParam[]
mParams	src/common.h	/^            unsigned int mParams[PARAMS_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0b08	typeref:typename:unsigned int[]
mParams	src/common.h	/^            unsigned int mParams[PARAMS_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0c08	typeref:typename:unsigned int[]
mParent	src/common.h	/^    struct sVarTableStruct* mParent;            \/\/ make linked list$/;"	m	struct:sVarTableStruct	typeref:struct:sVarTableStruct *
mParseStructPhase	src/common.h	/^            BOOL mParseStructPhase;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0208	typeref:typename:BOOL
mParseStructPhase	src/common.h	/^            BOOL mParseStructPhase;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:BOOL
mPointerNum	src/common.h	/^    int mPointerNum;$/;"	m	struct:sNodeTypeStruct	typeref:typename:int
mReadOnly	src/common.h	/^    BOOL mReadOnly;$/;"	m	struct:sVarStruct	typeref:typename:BOOL
mRealName	src/llvm_common.hpp	/^    char mRealName[REAL_FUN_NAME_MAX];$/;"	m	struct:sFunctionStruct	typeref:typename:char[]
mRegister	src/common.h	/^    BOOL mRegister;$/;"	m	struct:sNodeTypeStruct	typeref:typename:BOOL
mResultType	sevenstars/src/common.h	/^    sCLType* mResultType;$/;"	m	struct:sCLField	typeref:typename:sCLType *
mResultType	sevenstars/src/common.h	/^    sCLType* mResultType;$/;"	m	struct:sCLMethod	typeref:typename:sCLType *
mResultType	sevenstars/src/common.h	/^    sCLType* mResultType;$/;"	m	struct:sCLType	typeref:typename:sCLType *
mResultType	src/common.h	/^            sNodeType* mResultType;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:sNodeType *
mResultType	src/common.h	/^    struct sNodeTypeStruct* mResultType;$/;"	m	struct:sNodeTypeStruct	typeref:struct:sNodeTypeStruct *
mResultType	src/llvm_common.hpp	/^    sNodeType* mResultType;$/;"	m	struct:sFunctionStruct	typeref:typename:sNodeType *
mRight	src/common.h	/^    unsigned int mRight;$/;"	m	struct:sNodeTreeStruct	typeref:typename:unsigned int
mSLine	src/common.h	/^            int mSLine;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:int
mSLine	src/common.h	/^            int mSLine;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1408	typeref:typename:int
mSLine	src/common.h	/^    int mSLine;$/;"	m	struct:sNodeBlockStruct	typeref:typename:int
mSLine	src/llvm_common.hpp	/^    int mSLine;$/;"	m	struct:sFunctionStruct	typeref:typename:int
mSName	src/common.h	/^            char mSName[PATH_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1408	typeref:typename:char[]
mSName	src/common.h	/^    char mSName[PATH_MAX];$/;"	m	struct:sNodeBlockStruct	typeref:typename:char[]
mSName	src/common.h	/^    char mSName[PATH_MAX];$/;"	m	struct:sNodeTreeStruct	typeref:typename:char[]
mSName	src/llvm_common.hpp	/^    char mSName[PATH_MAX];$/;"	m	struct:sFunctionStruct	typeref:typename:char[]
mSimpleLambdaParam	src/common.h	/^            BOOL mSimpleLambdaParam;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:BOOL
mSimpleName	src/common.h	/^            char mSimpleName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:char[]
mSimpleName	src/llvm_common.hpp	/^    char mSimpleName[VAR_NAME_MAX];$/;"	m	struct:sFunctionStruct	typeref:typename:char[]
mSize	src/buffer.h	/^    int mSize;$/;"	m	struct:sBufStruct	typeref:typename:int
mSize	src/common.h	/^    unsigned int mSize;$/;"	m	struct:sConstStruct	typeref:typename:unsigned int
mSizeNodes	src/common.h	/^    unsigned int mSizeNodes;$/;"	m	struct:sNodeBlockStruct	typeref:typename:unsigned int
mSizeNum	src/common.h	/^    int mSizeNum;$/;"	m	struct:sNodeTypeStruct	typeref:typename:int
mSource	src/common.h	/^    sBuf mSource;$/;"	m	struct:sNodeBlockStruct	typeref:typename:sBuf
mSource	src/preprocessor.c	/^    sBuf mSource;$/;"	m	struct:sPreprocessorFunctionStruct	typeref:typename:sBuf	file:
mStatic	src/common.h	/^    BOOL mStatic;$/;"	m	struct:sNodeTypeStruct	typeref:typename:BOOL
mString	src/common.h	/^            char* mString;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0808	typeref:typename:char *
mStructName	src/common.h	/^            char mStructName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:char[]
mStructName	src/llvm_common.hpp	/^    char mStructName[VAR_NAME_MAX];$/;"	m	struct:sFunctionStruct	typeref:typename:char[]
mSwitchExpression	src/common.h	/^            unsigned int* mSwitchExpression;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1d08	typeref:typename:unsigned int *
mType	sevenstars/src/common.h	/^    sCLType* mType;$/;"	m	struct:sCLParam	typeref:typename:sCLType *
mType	src/common.h	/^            sNodeType* mType;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0f08	typeref:typename:sNodeType *
mType	src/common.h	/^            sNodeType* mType;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1008	typeref:typename:sNodeType *
mType	src/common.h	/^            sNodeType* mType;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1708	typeref:typename:sNodeType *
mType	src/common.h	/^            sNodeType* mType;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1808	typeref:typename:sNodeType *
mType	src/common.h	/^            sNodeType* mType;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1908	typeref:typename:sNodeType *
mType	src/common.h	/^            sNodeType* mType;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1a08	typeref:typename:sNodeType *
mType	src/common.h	/^        sNodeType* mType;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:typename:sNodeType *
mType	src/common.h	/^    sNodeType* mType;$/;"	m	struct:sParserParamStruct	typeref:typename:sNodeType *
mType	src/common.h	/^    sNodeType* mType;$/;"	m	struct:sVarStruct	typeref:typename:sNodeType *
mTypeName	src/common.h	/^    char mTypeName[VAR_NAME_MAX];$/;"	m	struct:sNodeTypeStruct	typeref:typename:char[]
mTypeOfExpression	src/common.h	/^    unsigned int mTypeOfExpression;$/;"	m	struct:sNodeTypeStruct	typeref:typename:unsigned int
mTypePointerNum	src/common.h	/^    int mTypePointerNum;$/;"	m	struct:sNodeTypeStruct	typeref:typename:int
mULongValue	src/common.h	/^        unsigned long long int mULongValue;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:typename:unsigned long long int
mUndefinedStructType	src/common.h	/^    void* mUndefinedStructType;$/;"	m	struct:sCLClassStruct	typeref:typename:void *
mUnsigned	src/common.h	/^    BOOL mUnsigned;$/;"	m	struct:sNodeTypeStruct	typeref:typename:BOOL
mValue	sevenstars/src/common.h	/^    CLVALUE mValue;$/;"	m	struct:sCLField	typeref:typename:CLVALUE
mVarArg	src/common.h	/^            BOOL mVarArg;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:BOOL
mVarArg	src/llvm_common.hpp	/^    BOOL mVarArg;$/;"	m	struct:sFunctionStruct	typeref:typename:BOOL
mVarName	src/common.h	/^            char mVarName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0208	typeref:typename:char[]
mVarName	src/common.h	/^            char mVarName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0308	typeref:typename:char[]
mVarName	src/common.h	/^            char mVarName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0608	typeref:typename:char[]
mVarName	src/common.h	/^            char mVarName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0708	typeref:typename:char[]
mVarName	src/common.h	/^            char mVarName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1108	typeref:typename:char[]
mVarName	src/common.h	/^            char mVarName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1208	typeref:typename:char[]
mVarName	src/common.h	/^            char mVarName[VAR_NAME_MAX];$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1b08	typeref:typename:char[]
mVarNum	sevenstars/src/common.h	/^    int mVarNum;$/;"	m	struct:sCLType	typeref:typename:int
mVarNum	src/common.h	/^    int mVarNum;$/;"	m	struct:sVarTableStruct	typeref:typename:int
mVarTable	src/common.h	/^            sVarTable* mVarTable;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:sVarTable *
mVersion	src/common.h	/^            int mVersion;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08	typeref:typename:int
mVersion	src/common.h	/^            int mVersion;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0c08	typeref:typename:int
mVersion	src/common.h	/^    int mVersion;$/;"	m	struct:sCLClassStruct	typeref:typename:int
mVersion	src/llvm_common.hpp	/^    int mVersion;$/;"	m	struct:sFunctionStruct	typeref:typename:int
mVolatile	src/common.h	/^    BOOL mVolatile;$/;"	m	struct:sNodeTypeStruct	typeref:typename:BOOL
mWhileNodeBlock	src/common.h	/^            MANAGED struct sNodeBlockStruct* mWhileNodeBlock;$/;"	m	struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0e08	typeref:struct:sNodeBlockStruct *
main	a.c	/^int main() {$/;"	f	typeref:typename:int
main	b.c	/^int main() {$/;"	f	typeref:typename:int
main	src/compiler.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	src/preprocessor.c	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	tiny/a.c	/^int main()$/;"	f	typeref:typename:int
main	wi/a.c	/^int main()$/;"	f	typeref:typename:int
main.nc	tiny/configure.in	/^AC_INIT(main.nc)$/;"	p
main.nc	wi/configure.in	/^AC_INIT(main.nc)$/;"	p
make_clone_for_recursive_field_type	src/llvm.cpp	/^BOOL make_clone_for_recursive_field_type(sNodeType* node_type, sCompileInfo* info) $/;"	f	typeref:typename:BOOL
make_finalize_for_recursive_field_type	src/llvm.cpp	/^BOOL make_finalize_for_recursive_field_type(sNodeType* node_type, sCompileInfo* info) $/;"	f	typeref:typename:BOOL
mandir	Makefile	/^mandir=${datarootdir}\/man$/;"	m
mandir	Makefile.in	/^mandir=@mandir@$/;"	m
mandir	sevenstars/Makefile.in	/^mandir=@mandir@$/;"	m
mandir	tiny/Makefile.in	/^mandir=@mandir@$/;"	m
mandir	wi/Makefile.in	/^mandir=@mandir@$/;"	m
map	code/neo-c.h	/^struct map<T, T2>$/;"	s
map	neo-c.h	/^struct map<T, T2>$/;"	s
mem	src/memalloc-stdc.c	/^    void* mem;$/;"	m	struct:sHeapDebug	typeref:typename:void *	file:
memalloc-stdc.o	Makefile	/^memalloc-stdc.o: src\/memalloc-stdc.c$/;"	t
memalloc-stdc.o	Makefile.in	/^memalloc-stdc.o: src\/memalloc-stdc.c$/;"	t
memalloc.o	Makefile	/^memalloc.o: src\/memalloc.c$/;"	t
memalloc.o	Makefile.in	/^memalloc.o: src\/memalloc.c$/;"	t
memleak-debug	sevenstars/configure.in	/^AC_ARG_WITH(memleak-debug,           [  --with-memleak-debug      with memleak debug ], [ ENABLE/;"	w
memleak-debug	wi/configure.in	/^AC_ARG_WITH(memleak-debug,              [  --with-meak-debug              include memleak debug /;"	w
module_name	src/common.h	/^    char* module_name;$/;"	m	struct:sParserInfoStruct	typeref:typename:char *
multiline	code/neo-c.h	/^    bool multiline;$/;"	m	struct:regex_struct	typeref:typename:bool
multiline	neo-c.h	/^    bool multiline;$/;"	m	struct:regex_struct	typeref:typename:bool
neo-c	Makefile	/^neo-c: config.h src\/compiler.o $(COMMON_OBJS) $(OBJS) memalloc.o memalloc-stdc.o$/;"	t
neo-c	Makefile.in	/^neo-c: config.h src\/compiler.o $(COMMON_OBJS) $(OBJS) memalloc.o memalloc-stdc.o$/;"	t
neo-c compiler language	README.md	/^# neo-c compiler language$/;"	c
neo-c.o	Makefile	/^neo-c.o: neo-c.nc$/;"	t
neo-c.o	Makefile.in	/^neo-c.o: neo-c.nc$/;"	t
neo-vi	Makefile	/^neo-vi: neo-vi\/neo-vi$/;"	t
neo-vi	Makefile.in	/^neo-vi: neo-vi\/neo-vi$/;"	t
neo-vi-clean	Makefile	/^neo-vi-clean: neo-vi\/Makefile$/;"	t
neo-vi-clean	Makefile.in	/^neo-vi-clean: neo-vi\/Makefile$/;"	t
neo-vi-install	Makefile	/^neo-vi-install: neo-vi\/Makefile$/;"	t
neo-vi-install	Makefile.in	/^neo-vi-install: neo-vi\/Makefile$/;"	t
neo-vi-test	Makefile	/^neo-vi-test: neo-vi\/Makefile$/;"	t
neo-vi-test	Makefile.in	/^neo-vi-test: neo-vi\/Makefile$/;"	t
neo-vi/Makefile	Makefile	/^neo-vi\/Makefile: neo-vi\/Makefile.in$/;"	t
neo-vi/Makefile	Makefile.in	/^neo-vi\/Makefile: neo-vi\/Makefile.in$/;"	t
neo-vi/neo-vi	Makefile	/^neo-vi\/neo-vi: neo-vi\/configure neo-vi\/Makefile$/;"	t
neo-vi/neo-vi	Makefile.in	/^neo-vi\/neo-vi: neo-vi\/configure neo-vi\/Makefile$/;"	t
new_right_value_objects_container	src/llvm.cpp	/^void* new_right_value_objects_container(sCompileInfo* info)$/;"	f	typeref:typename:void *
next	src/memalloc.c	/^    struct header_t *next;$/;"	m	struct:header_t	typeref:struct:header_t *	file:
no_comma_operator	src/common.h	/^    BOOL no_comma_operator;$/;"	m	struct:sParserInfoStruct	typeref:typename:BOOL
no_output	src/common.h	/^    BOOL no_output;$/;"	m	struct:sCompileInfoStruct	typeref:typename:BOOL
nregex	neo-c.h	/^typedef regex_struct*% nregex;$/;"	t	typeref:typename:regex_struct * %
num_loop	src/common.h	/^    int num_loop;$/;"	m	struct:sCompileInfoStruct	typeref:typename:int
num_loop2	src/common.h	/^    int num_loop2;$/;"	m	struct:sCompileInfoStruct	typeref:typename:int
optimize	configure.in	/^AC_ARG_WITH(optimize,           [  --with-optimize           with optimize(-O in CFLAGS) ], [ EN/;"	w
optimize	sevenstars/configure.in	/^AC_ARG_WITH(optimize,           [  --with-optimize           with optimize(-O in CFLAGS) ], [ EN/;"	w
optimize	tiny/configure.in	/^AC_ARG_WITH(optimize,           [  --with-optimize           with optimize(-O in CFLAGS) ], [ EN/;"	w
optimize	wi/configure.in	/^AC_ARG_WITH(optimize,           [  --with-optimize           with optimize(-O in CFLAGS) ], [ EN/;"	w
output_native_code	src/llvm.cpp	/^void output_native_code(char* sname, BOOL optimize)$/;"	f	typeref:typename:void
p	src/common.h	/^    char* p;$/;"	m	struct:sParserInfoStruct	typeref:typename:char *
p	tiny/common.h	/^    char* p;$/;"	m	struct:TinyParser	typeref:typename:char *
parse_alignof	src/parser.c	/^static BOOL parse_alignof(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_alloca	src/parser.c	/^static BOOL parse_alloca(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_anonymous_enum	src/parser.c	/^static BOOL parse_anonymous_enum(unsigned int* node, sParserInfo* info) $/;"	f	typeref:typename:BOOL	file:
parse_attribute	src/parser.c	/^static BOOL parse_attribute(sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_block	src/common.h	/^    BOOL parse_block;$/;"	m	struct:sParserInfoStruct	typeref:typename:BOOL
parse_block	src/node_block.cpp	/^BOOL parse_block(sNodeBlock* node_block, BOOL extern_c_lang, BOOL single_expression, sParserInfo/;"	f	typeref:typename:BOOL
parse_block_easy	src/node_block.cpp	/^BOOL parse_block_easy(ALLOC sNodeBlock** node_block, BOOL extern_c_lang, sParserInfo* info)$/;"	f	typeref:typename:BOOL
parse_borrow	src/parser.c	/^BOOL parse_borrow(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL
parse_call_macro	src/parser.c	/^BOOL parse_call_macro(unsigned int* node, char* name, sParserInfo* info)$/;"	f	typeref:typename:BOOL
parse_case	src/parser.c	/^static BOOL parse_case(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_class_name	src/node_type.c	/^static sNodeType* parse_class_name(char** p, char** p2, char* buf)$/;"	f	typeref:typename:sNodeType *	file:
parse_class_name_expression	src/parser.c	/^BOOL parse_class_name_expression(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL
parse_clone	src/parser.c	/^BOOL parse_clone(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL
parse_cmp	src/parser.c	/^int parse_cmp(char* p, char* str)$/;"	f	typeref:typename:int
parse_constructor	src/parser.c	/^static BOOL parse_constructor(unsigned int* node, char* struct_name, sParserInfo* info) $/;"	f	typeref:typename:BOOL	file:
parse_default	src/parser.c	/^static BOOL parse_default(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_delete	src/parser.c	/^BOOL parse_delete(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL
parse_destructor	src/parser.c	/^BOOL parse_destructor(unsigned int* node, char* struct_name, sParserInfo* info, BOOL recursive) $/;"	f	typeref:typename:BOOL
parse_do	src/parser.c	/^static BOOL parse_do(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_dummy_heap	src/parser.c	/^BOOL parse_dummy_heap(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL
parse_enum	src/parser.c	/^BOOL parse_enum(unsigned int* node, char* name, sParserInfo* info) $/;"	f	typeref:typename:BOOL
parse_for	src/parser.c	/^static BOOL parse_for(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_funcation_call_params	src/parser.c	/^static BOOL parse_funcation_call_params(int* num_params, unsigned int* params, sParserInfo* info/;"	f	typeref:typename:BOOL	file:
parse_function	src/parser.c	/^BOOL parse_function(unsigned int* node, sNodeType* result_type, char* fun_name, char* struct_nam/;"	f	typeref:typename:BOOL
parse_generics_fun	src/node.cpp	/^static BOOL parse_generics_fun(unsigned int* node, char* buf, sFunction* fun, char* sname, int s/;"	f	typeref:typename:BOOL	file:
parse_generics_function	src/parser.c	/^static BOOL parse_generics_function(unsigned int* node, sNodeType* result_type, char* fun_name, /;"	f	typeref:typename:BOOL	file:
parse_goto	src/parser.c	/^static BOOL parse_goto(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_if	src/parser.c	/^static BOOL parse_if(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_impl	src/parser.c	/^static BOOL parse_impl(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_impl_end	src/parser.c	/^static void parse_impl_end(sParserInfo* info)$/;"	f	typeref:typename:void	file:
parse_inherit	src/parser.c	/^static BOOL parse_inherit(unsigned int* node, sParserInfo* info) $/;"	f	typeref:typename:BOOL	file:
parse_inline_function	src/node.cpp	/^static BOOL parse_inline_function(sNodeBlock** node_block, char* buf, sFunction* fun, char* snam/;"	f	typeref:typename:BOOL	file:
parse_inline_function	src/parser.c	/^static BOOL parse_inline_function(unsigned int* node, char* struct_name, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_is_heap	src/parser.c	/^static BOOL parse_is_heap(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_label	src/parser.c	/^static BOOL parse_label(unsigned int* node, char* name, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_lambda	src/parser.c	/^static BOOL parse_lambda(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_macro	src/parser.c	/^BOOL parse_macro(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL
parse_managed	src/parser.c	/^BOOL parse_managed(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL
parse_method_generics_function	src/parser.c	/^static BOOL parse_method_generics_function(unsigned int* node, char* struct_name, sParserInfo* i/;"	f	typeref:typename:BOOL	file:
parse_new	src/parser.c	/^static BOOL parse_new(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_param	src/parser.c	/^static BOOL parse_param(sParserParam* param, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_params	src/parser.c	/^static BOOL parse_params(sParserParam* params, int* num_params, sParserInfo* info, int character/;"	f	typeref:typename:BOOL	file:
parse_phase	src/common.h	/^    int parse_phase;$/;"	m	struct:sParserInfoStruct	typeref:typename:int
parse_return	src/parser.c	/^static BOOL parse_return(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_ruby_macro	src/parser.c	/^BOOL parse_ruby_macro(unsigned int* node, sParserInfo* info, BOOL really_appended)$/;"	f	typeref:typename:BOOL
parse_sharp	src/parser.c	/^BOOL parse_sharp(sParserInfo* info)$/;"	f	typeref:typename:BOOL
parse_simple_lambda_param	src/node.cpp	/^static BOOL parse_simple_lambda_param(unsigned int* node, char* buf, sFunction* fun, char* sname/;"	f	typeref:typename:BOOL	file:
parse_simple_lambda_params	src/parser.c	/^static BOOL parse_simple_lambda_params(unsigned int* node, int sline, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_sizeof	src/parser.c	/^static BOOL parse_sizeof(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_struct	src/parser.c	/^static BOOL parse_struct(unsigned int* node, char* struct_name, int size_struct_name, BOOL* defi/;"	f	typeref:typename:BOOL	file:
parse_struct_name	src/common.h	/^    char parse_struct_name[VAR_NAME_MAX];$/;"	m	struct:sParserInfoStruct	typeref:typename:char[]
parse_struct_phase	src/common.h	/^    BOOL parse_struct_phase;$/;"	m	struct:sParserInfoStruct	typeref:typename:BOOL
parse_switch	src/parser.c	/^static BOOL parse_switch(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_type	src/parser.c	/^static BOOL parse_type(sNodeType** result_type, sParserInfo* info, char* func_pointer_name, BOOL/;"	f	typeref:typename:BOOL	file:
parse_typedef	src/parser.c	/^BOOL parse_typedef(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL
parse_typedef_attribute	src/parser.c	/^static BOOL parse_typedef_attribute(sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_union	src/parser.c	/^static BOOL parse_union(unsigned int* node, char* union_name, int size_union_name, sParserInfo* /;"	f	typeref:typename:BOOL	file:
parse_va_arg	src/parser.c	/^static BOOL parse_va_arg(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_var	src/parser.c	/^static BOOL parse_var(unsigned int* node, sParserInfo* info, BOOL readonly)$/;"	f	typeref:typename:BOOL	file:
parse_variable	src/parser.c	/^static BOOL parse_variable(unsigned int* node, sNodeType* result_type, char* name, BOOL extern_,/;"	f	typeref:typename:BOOL	file:
parse_variable_name	src/parser.c	/^static BOOL parse_variable_name(char* buf, int buf_size, sParserInfo* info, sNodeType* node_type/;"	f	typeref:typename:BOOL	file:
parse_version	src/parser.c	/^static void parse_version(int* version, sParserInfo* info)$/;"	f	typeref:typename:void	file:
parse_while	src/parser.c	/^static BOOL parse_while(unsigned int* node, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
parse_word	src/parser.c	/^BOOL parse_word(char* buf, int buf_size, sParserInfo* info, BOOL print_out_err_msg, BOOL no_skip/;"	f	typeref:typename:BOOL
parser_err_msg	src/parser.c	/^void parser_err_msg(sParserInfo* info, const char* msg, ...)$/;"	f	typeref:typename:void
parser_final	src/parser.c	/^void parser_final()$/;"	f	typeref:typename:void
parser_init	src/parser.c	/^void parser_init()$/;"	f	typeref:typename:void
permission	Makefile	/^permission:$/;"	t
permission	Makefile.in	/^permission:$/;"	t
permission	sevenstars/Makefile.in	/^permission:$/;"	t
permission	tiny/Makefile.in	/^permission:$/;"	t
permission	wi/Makefile.in	/^permission:$/;"	t
pinfo	src/common.h	/^    struct sParserInfoStruct* pinfo;$/;"	m	struct:sCompileInfoStruct	typeref:struct:sParserInfoStruct *
pop_back	code/neo-c.h	/^    T pop_back(list<T>* self, T default_value)$/;"	f	typeref:typename:T
pop_back	code/neo-c.h	/^    T pop_back(vector<T>* self, T default_value)$/;"	f	typeref:typename:T
pop_back	neo-c.h	/^    T pop_back(list<T>* self, T& default_value)$/;"	f	typeref:typename:T
pop_back	neo-c.h	/^    T pop_back(vector<T>* self, T& default_value)$/;"	f	typeref:typename:T
pop_front	neo-c.h	/^    T pop_front(list<T>* self, T& default_value)$/;"	f	typeref:typename:T
postposition_operator	src/parser.c	/^static BOOL postposition_operator(unsigned int* node, BOOL enable_assginment, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
prefix	Makefile	/^prefix=\/data\/data\/com.termux\/files\/home$/;"	m
prefix	Makefile.in	/^prefix=@prefix@$/;"	m
prefix	sevenstars/Makefile.in	/^prefix=@prefix@$/;"	m
prefix	tiny/Makefile.in	/^prefix=@prefix@ exec_prefix=@exec_prefix@$/;"	m
prefix	wi/Makefile.in	/^prefix=@prefix@ exec_prefix=@exec_prefix@$/;"	m
preprocess_source	src/preprocessor.c	/^static BOOL preprocess_source(char* sname, char* output_sname)$/;"	f	typeref:typename:BOOL	file:
preprocessor	src/preprocessor.c	/^static BOOL preprocessor(sBuf* source, sBuf* source2)$/;"	f	typeref:typename:BOOL	file:
preprocessor_final	src/preprocessor.c	/^static void preprocessor_final()$/;"	f	typeref:typename:void	file:
preprocessor_init	src/preprocessor.c	/^static void preprocessor_init()$/;"	f	typeref:typename:void	file:
prevent_from_free_right_value_objects	src/common.h	/^    BOOL prevent_from_free_right_value_objects;$/;"	m	struct:sCompileInfoStruct	typeref:typename:BOOL
prevent_from_right_object_free	src/llvm.cpp	/^void prevent_from_right_object_free(LVALUE* llvm_value, sCompileInfo* info)$/;"	f	typeref:typename:void
push_back	code/neo-c.h	/^    void push_back(list<T>* self, T item) $/;"	f	typeref:typename:void
push_back	code/neo-c.h	/^    void push_back(vector<T>* self, T item) {$/;"	f	typeref:typename:void
push_back	neo-c.h	/^    void push_back(list<T>* self, T item) $/;"	f	typeref:typename:void
push_back	neo-c.h	/^    void push_back(vector<T>* self, T item) {$/;"	f	typeref:typename:void
push_value_to_stack_ptr	src/llvm.cpp	/^void push_value_to_stack_ptr(LVALUE* value, sCompileInfo* info)$/;"	f	typeref:typename:void
put_class_to_table	src/klass.c	/^static BOOL put_class_to_table(char* class_name, sCLClass* klass)$/;"	f	typeref:typename:BOOL	file:
read_char_from_file	src/klass.c	/^void read_char_from_file(char** p, char* c)$/;"	f	typeref:typename:void
read_class_from_file	src/klass.c	/^static sCLClass* read_class_from_file(char* class_name, char** p, char* head)$/;"	f	typeref:typename:sCLClass *	file:
read_const_from_file	src/klass.c	/^void read_const_from_file(char** p, sConst* constant, char* head)$/;"	f	typeref:typename:void
read_from_file	src/klass.c	/^void read_from_file(char** p, void* buf, size_t size, char* head)$/;"	f	typeref:typename:void
read_int_from_file	src/klass.c	/^void read_int_from_file(char** p, int* n)$/;"	f	typeref:typename:void
read_long_from_file	src/klass.c	/^void read_long_from_file(char** p, clint64* n)$/;"	f	typeref:typename:void
read_source	src/source_compiler.c	/^BOOL read_source(char* fname, sBuf* source)$/;"	f	typeref:typename:BOOL
real_fun_name	src/common.h	/^    char real_fun_name[VAR_NAME_MAX];$/;"	m	struct:sCompileInfoStruct	typeref:typename:char[]
real_fun_name	src/memalloc-stdc.c	/^    char real_fun_name[128];$/;"	m	struct:sHeapDebug	typeref:typename:char[128]	file:
regex	code/neo-c.h	/^    pcre* regex;$/;"	m	struct:regex_struct	typeref:typename:pcre *
regex	code/neo-c.h	/^typedef regex_struct*% regex;$/;"	t	typeref:typename:regex_struct * %
regex	neo-c.h	/^    pcre* regex;$/;"	m	struct:regex_struct	typeref:typename:pcre *
regex_struct	code/neo-c.h	/^struct regex_struct {$/;"	s
regex_struct	neo-c.h	/^struct regex_struct {$/;"	s
rehash	code/neo-c.h	/^    void rehash(map<T,T2>* self) {$/;"	f	typeref:typename:void
rehash	neo-c.h	/^    void rehash(map<T,T2>* self) {$/;"	f	typeref:typename:void
remove_class	src/klass.c	/^static void remove_class(char* class_name)$/;"	f	typeref:typename:void	file:
remove_from_right_value_object	src/llvm.cpp	/^void remove_from_right_value_object(Value* value, sCompileInfo* info)$/;"	f	typeref:typename:void
replace	code/neo-c.h	/^    bool replace(vector<T>* self, int index, T value) $/;"	f	typeref:typename:bool
replace	code/neo-c.h	/^    void replace(list<T>* self, int position, T item)$/;"	f	typeref:typename:void
replace	neo-c.h	/^    bool replace(vector<T>* self, int index, T value) $/;"	f	typeref:typename:bool
replace	neo-c.h	/^    void replace(list<T>* self, int position, T item)$/;"	f	typeref:typename:void
reset	code/neo-c.h	/^    void reset(list<T>* self) {$/;"	f	typeref:typename:void
reset	neo-c.h	/^    void reset(list<T>* self) {$/;"	f	typeref:typename:void
reset	neo-c.h	/^    void reset(vector<T>* self) {$/;"	f	typeref:typename:void
restore_lvtable	src/llvm.cpp	/^void restore_lvtable(Value* lvtable)$/;"	f	typeref:typename:void
restore_right_value_objects_container	src/llvm.cpp	/^void restore_right_value_objects_container(void* right_value_objects, sCompileInfo* info)$/;"	f	typeref:typename:void
restore_var_table	src/vtable.c	/^void restore_var_table(sVarTable* left, sVarTable* right)$/;"	f	typeref:typename:void
result	code/neo-c.h	/^        var result = new list<T>.initialize();$/;"	v	typeref:typename:var
result	code/neo-c.h	/^        var result = new map<T,T2>.initialize();$/;"	v	typeref:typename:var
result	code/neo-c.h	/^        var result = new vector<R>.initialize();$/;"	v	typeref:typename:var
result	code/neo-c.h	/^        var result = new vector<T>.initialize();$/;"	v	typeref:typename:var
result	neo-c.h	/^        var result = new list<T>.initialize();$/;"	v	typeref:typename:var
result	neo-c.h	/^        var result = new map<T,T2>.initialize();$/;"	v	typeref:typename:var
result	neo-c.h	/^        var result = new vector<T>.initialize();$/;"	v	typeref:typename:var
result_	neo-c.h	/^        var result_ = new list<R>.initialize();$/;"	v	typeref:typename:var
result_	neo-c.h	/^        var result_ = new list<T>.initialize();$/;"	v	typeref:typename:var
result_	neo-c.h	/^        var result_ = new vector<R>.initialize();$/;"	v	typeref:typename:var
result_type	src/common.h	/^    sNodeType* result_type;$/;"	m	struct:sCompileInfoStruct	typeref:typename:sNodeType *
result_variable	src/common.h	/^    void* result_variable;$/;"	m	struct:sCompileInfoStruct	typeref:typename:void *
right_value_objects	src/common.h	/^    void* right_value_objects;$/;"	m	struct:sCompileInfoStruct	typeref:typename:void *
runOnModule	src/llvm.cpp	/^    virtual bool runOnModule(Module &M) {$/;"	f	struct:MyModulePass	typeref:typename:bool	file:
sAlignOf	src/common.h	/^        } sAlignOf;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1808
sArrayWithInitialization	src/common.h	/^        } sArrayWithInitialization;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1b08
sBuf	src/buffer.h	/^typedef struct sBufStruct sBuf;$/;"	t	typeref:struct:sBufStruct
sBufStruct	src/buffer.h	/^struct sBufStruct {$/;"	s
sBuf_append	src/buffer.c	/^void sBuf_append(sBuf* self, void* str, size_t size)$/;"	f	typeref:typename:void
sBuf_append_char	src/buffer.c	/^void sBuf_append_char(sBuf* self, char c)$/;"	f	typeref:typename:void
sBuf_append_int	src/buffer.c	/^void sBuf_append_int(sBuf* self, int value)$/;"	f	typeref:typename:void
sBuf_append_long	src/buffer.c	/^void sBuf_append_long(sBuf* self, long long value)$/;"	f	typeref:typename:void
sBuf_append_str	src/buffer.c	/^void sBuf_append_str(sBuf* self, char* str)$/;"	f	typeref:typename:void
sBuf_clone	src/buffer.c	/^void sBuf_clone(sBuf* self, sBuf* buf)$/;"	f	typeref:typename:void
sBuf_init	src/buffer.c	/^void sBuf_init(sBuf* self)$/;"	f	typeref:typename:void
sCLClass	sevenstars/src/common.h	/^struct sCLClass {$/;"	s
sCLClass	src/common.h	/^typedef struct sCLClassStruct sCLClass;$/;"	t	typeref:struct:sCLClassStruct
sCLClassStruct	src/common.h	/^struct sCLClassStruct {$/;"	s
sCLField	sevenstars/src/common.h	/^struct sCLField {$/;"	s
sCLMethod	sevenstars/src/common.h	/^struct sCLMethod {$/;"	s
sCLParam	sevenstars/src/common.h	/^struct sCLParam {$/;"	s
sCLType	sevenstars/src/common.h	/^struct sCLType {$/;"	s
sCase	src/common.h	/^        } sCase;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1e08
sClassTable	src/common.h	/^typedef struct sClassTableStruct sClassTable;$/;"	t	typeref:struct:sClassTableStruct
sClassTableStruct	src/common.h	/^struct sClassTableStruct$/;"	s
sCompileInfo	src/common.h	/^typedef struct sCompileInfoStruct sCompileInfo;$/;"	t	typeref:struct:sCompileInfoStruct
sCompileInfoStruct	src/common.h	/^struct sCompileInfoStruct$/;"	s
sConst	src/common.h	/^typedef struct sConstStruct sConst;$/;"	t	typeref:struct:sConstStruct
sConstStruct	src/common.h	/^struct sConstStruct$/;"	s
sConst_append	src/constant.c	/^unsigned int sConst_append(sConst* self, void* data, int size, BOOL no_output)$/;"	f	typeref:typename:unsigned int
sConst_clone	src/constant.c	/^void sConst_clone(sConst* self, sConst* constant)$/;"	f	typeref:typename:void
sConst_free	src/constant.c	/^void sConst_free(sConst* self)$/;"	f	typeref:typename:void
sConst_init	src/constant.c	/^void sConst_init(sConst* self)$/;"	f	typeref:typename:void
sConst_init_with_size	src/constant.c	/^void sConst_init_with_size(sConst* self, unsigned int size)$/;"	f	typeref:typename:void
sDefineVariable	src/common.h	/^        } sDefineVariable;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0308
sDefineVariables	src/common.h	/^        } sDefineVariables;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0508
sFor	src/common.h	/^        } sFor;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1308
sFunction	src/common.h	/^        } sFunction;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0a08
sFunction	src/llvm_common.hpp	/^typedef struct sFunctionStruct sFunction;$/;"	t	typeref:struct:sFunctionStruct
sFunctionCall	src/common.h	/^        } sFunctionCall;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0c08
sFunctionStruct	src/llvm_common.hpp	/^struct sFunctionStruct {$/;"	s
sGoto	src/common.h	/^        } sGoto;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b2008
sHeapDebug	src/memalloc-stdc.c	/^struct sHeapDebug {$/;"	s	file:
sIf	src/common.h	/^        } sIf;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0d08
sImpl	src/common.h	/^        } sImpl;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1508
sIsHeap	src/common.h	/^        } sIsHeap;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1908
sIsManaged	src/common.h	/^        } sIsManaged;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1a08
sLabel	src/common.h	/^        } sLabel;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1f08
sLoadField	src/common.h	/^        } sLoadField;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1208
sLoadFunction	src/common.h	/^        } sLoadFunction;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0408
sLoadVariable	src/common.h	/^        } sLoadVariable;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0608
sMacro	src/macro.c	/^struct sMacro {$/;"	s	file:
sManaged	src/common.h	/^        } sManaged;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0708
sNodeBlock	src/common.h	/^typedef struct sNodeBlockStruct sNodeBlock;$/;"	t	typeref:struct:sNodeBlockStruct
sNodeBlockStruct	src/common.h	/^struct sNodeBlockStruct$/;"	s
sNodeBlock_alloc	src/node_alloc.c	/^sNodeBlock* sNodeBlock_alloc()$/;"	f	typeref:typename:sNodeBlock *
sNodeBlock_free	src/node_alloc.c	/^void sNodeBlock_free(sNodeBlock* block)$/;"	f	typeref:typename:void
sNodeTree	src/common.h	/^typedef struct sNodeTreeStruct sNodeTree;$/;"	t	typeref:struct:sNodeTreeStruct
sNodeTreeStruct	src/common.h	/^struct sNodeTreeStruct $/;"	s
sNodeTree_case_expression	src/node.cpp	/^unsigned int sNodeTree_case_expression(unsigned int expression_node, BOOL last_case, BOOL case_a/;"	f	typeref:typename:unsigned int
sNodeTree_create_add	src/node.cpp	/^unsigned int sNodeTree_create_add(unsigned int left, unsigned int right, unsigned int middle, sP/;"	f	typeref:typename:unsigned int
sNodeTree_create_alignof	src/node.cpp	/^unsigned int sNodeTree_create_alignof(sNodeType* node_type, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_alignof_expression	src/node.cpp	/^unsigned int sNodeTree_create_alignof_expression(unsigned int lnode, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_and	src/node.cpp	/^unsigned int sNodeTree_create_and(unsigned int left, unsigned int right, unsigned int middle, sP/;"	f	typeref:typename:unsigned int
sNodeTree_create_and_and	src/node.cpp	/^unsigned int sNodeTree_create_and_and(unsigned int left_node, unsigned int right_node, sParserIn/;"	f	typeref:typename:unsigned int
sNodeTree_create_array_with_initialization	src/node.cpp	/^unsigned int sNodeTree_create_array_with_initialization(char* name, int num_initialize_array_val/;"	f	typeref:typename:unsigned int
sNodeTree_create_borrow	src/node.cpp	/^unsigned int sNodeTree_create_borrow(unsigned int object_node, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_break_expression	src/node.cpp	/^unsigned int sNodeTree_create_break_expression(sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_c_string_value	src/node.cpp	/^unsigned int sNodeTree_create_c_string_value(MANAGED char* value, int len, int sline, sParserInf/;"	f	typeref:typename:unsigned int
sNodeTree_create_cast	src/node.cpp	/^unsigned int sNodeTree_create_cast(sNodeType* left_type, unsigned int left_node, sParserInfo* in/;"	f	typeref:typename:unsigned int
sNodeTree_create_character_value	src/node.cpp	/^unsigned int sNodeTree_create_character_value(char c, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_class_name	src/node.cpp	/^unsigned int sNodeTree_create_class_name(sNodeType* node_type, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_class_name_expression	src/node.cpp	/^unsigned int sNodeTree_create_class_name_expression(unsigned int lnode, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_clone	src/node.cpp	/^unsigned int sNodeTree_create_clone(unsigned int left, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_comma	src/node.cpp	/^unsigned int sNodeTree_create_comma(unsigned int left_node, unsigned int right_node, sParserInfo/;"	f	typeref:typename:unsigned int
sNodeTree_create_complement	src/node.cpp	/^unsigned int sNodeTree_create_complement(unsigned int left_node, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_conditional	src/node.cpp	/^unsigned int sNodeTree_create_conditional(unsigned int conditional, unsigned int value1, unsigne/;"	f	typeref:typename:unsigned int
sNodeTree_create_continue_expression	src/node.cpp	/^unsigned int sNodeTree_create_continue_expression(sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_define_variable	src/node.cpp	/^unsigned int sNodeTree_create_define_variable(char* var_name, BOOL extern_, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_define_variables	src/node.cpp	/^unsigned int sNodeTree_create_define_variables(unsigned int* nodes, int num_nodes, BOOL extern_,/;"	f	typeref:typename:unsigned int
sNodeTree_create_delete	src/node.cpp	/^unsigned int sNodeTree_create_delete(unsigned int object_node, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_dereffernce	src/node.cpp	/^unsigned int sNodeTree_create_dereffernce(unsigned int left_node, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_div	src/node.cpp	/^unsigned int sNodeTree_create_div(unsigned int left, unsigned int right, unsigned int middle, sP/;"	f	typeref:typename:unsigned int
sNodeTree_create_dummy_heap	src/node.cpp	/^unsigned int sNodeTree_create_dummy_heap(unsigned int object_node, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_equal_and	src/node.cpp	/^unsigned int sNodeTree_create_equal_and(unsigned int left_node, unsigned int right_node, sParser/;"	f	typeref:typename:unsigned int
sNodeTree_create_equal_div	src/node.cpp	/^unsigned int sNodeTree_create_equal_div(unsigned int left_node, unsigned int right_node, sParser/;"	f	typeref:typename:unsigned int
sNodeTree_create_equal_lshift	src/node.cpp	/^unsigned int sNodeTree_create_equal_lshift(unsigned int left_node, unsigned int right_node, sPar/;"	f	typeref:typename:unsigned int
sNodeTree_create_equal_minus	src/node.cpp	/^unsigned int sNodeTree_create_equal_minus(unsigned int left_node, unsigned int right_node, sPars/;"	f	typeref:typename:unsigned int
sNodeTree_create_equal_mod	src/node.cpp	/^unsigned int sNodeTree_create_equal_mod(unsigned int left_node, unsigned int right_node, sParser/;"	f	typeref:typename:unsigned int
sNodeTree_create_equal_mult	src/node.cpp	/^unsigned int sNodeTree_create_equal_mult(unsigned int left_node, unsigned int right_node, sParse/;"	f	typeref:typename:unsigned int
sNodeTree_create_equal_or	src/node.cpp	/^unsigned int sNodeTree_create_equal_or(unsigned int left_node, unsigned int right_node, sParserI/;"	f	typeref:typename:unsigned int
sNodeTree_create_equal_plus	src/node.cpp	/^unsigned int sNodeTree_create_equal_plus(unsigned int left_node, unsigned int right_node, sParse/;"	f	typeref:typename:unsigned int
sNodeTree_create_equal_rshift	src/node.cpp	/^unsigned int sNodeTree_create_equal_rshift(unsigned int left_node, unsigned int right_node, sPar/;"	f	typeref:typename:unsigned int
sNodeTree_create_equal_xor	src/node.cpp	/^unsigned int sNodeTree_create_equal_xor(unsigned int left_node, unsigned int right_node, sParser/;"	f	typeref:typename:unsigned int
sNodeTree_create_equals	src/node.cpp	/^unsigned int sNodeTree_create_equals(unsigned int left, unsigned int right, unsigned int middle,/;"	f	typeref:typename:unsigned int
sNodeTree_create_external_function	src/node.cpp	/^unsigned int sNodeTree_create_external_function(char* fun_name, sParserParam* params, int num_pa/;"	f	typeref:typename:unsigned int
sNodeTree_create_false	src/node.cpp	/^unsigned int sNodeTree_create_false(sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_function	src/node.cpp	/^unsigned int sNodeTree_create_function(char* fun_name, sParserParam* params, int num_params, sNo/;"	f	typeref:typename:unsigned int
sNodeTree_create_function_call	src/node.cpp	/^unsigned int sNodeTree_create_function_call(char* fun_name, unsigned int* params, int num_params/;"	f	typeref:typename:unsigned int
sNodeTree_create_generics_function	src/node.cpp	/^unsigned int sNodeTree_create_generics_function(char* fun_name, sParserParam* params, int num_pa/;"	f	typeref:typename:unsigned int
sNodeTree_create_gt	src/node.cpp	/^unsigned int sNodeTree_create_gt(unsigned int left, unsigned int right, unsigned int middle, sPa/;"	f	typeref:typename:unsigned int
sNodeTree_create_gteq	src/node.cpp	/^unsigned int sNodeTree_create_gteq(unsigned int left, unsigned int right, unsigned int middle, s/;"	f	typeref:typename:unsigned int
sNodeTree_create_impl	src/node.cpp	/^unsigned int sNodeTree_create_impl(unsigned int* nodes, int num_nodes, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_inline_function	src/node.cpp	/^unsigned int sNodeTree_create_inline_function(char* fun_name, sParserParam* params, int num_para/;"	f	typeref:typename:unsigned int
sNodeTree_create_int_value	src/node.cpp	/^unsigned int sNodeTree_create_int_value(int value, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_is_heap	src/node.cpp	/^unsigned int sNodeTree_create_is_heap(sNodeType* node_type, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_is_heap_expression	src/node.cpp	/^unsigned int sNodeTree_create_is_heap_expression(unsigned int lnode, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_lambda_call	src/node.cpp	/^unsigned int sNodeTree_create_lambda_call(unsigned int lambda_node, unsigned int* params, int nu/;"	f	typeref:typename:unsigned int
sNodeTree_create_le	src/node.cpp	/^unsigned int sNodeTree_create_le(unsigned int left, unsigned int right, unsigned int middle, sPa/;"	f	typeref:typename:unsigned int
sNodeTree_create_leeq	src/node.cpp	/^unsigned int sNodeTree_create_leeq(unsigned int left, unsigned int right, unsigned int middle, s/;"	f	typeref:typename:unsigned int
sNodeTree_create_left_shift	src/node.cpp	/^unsigned int sNodeTree_create_left_shift(unsigned int left, unsigned int right, unsigned int mid/;"	f	typeref:typename:unsigned int
sNodeTree_create_load_adress_value	src/node.cpp	/^unsigned int sNodeTree_create_load_adress_value(unsigned int address_node, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_load_array_element	src/node.cpp	/^unsigned int sNodeTree_create_load_array_element(unsigned int array, unsigned int index_node, sP/;"	f	typeref:typename:unsigned int
sNodeTree_create_load_field	src/node.cpp	/^unsigned int sNodeTree_create_load_field(char* name, unsigned int left_node, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_load_function	src/node.cpp	/^unsigned int sNodeTree_create_load_function(char* fun_name, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_load_variable	src/node.cpp	/^unsigned int sNodeTree_create_load_variable(char* var_name, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_logical_denial	src/node.cpp	/^unsigned int sNodeTree_create_logical_denial(unsigned int left, unsigned int right, unsigned int/;"	f	typeref:typename:unsigned int
sNodeTree_create_long_value	src/node.cpp	/^unsigned int sNodeTree_create_long_value(long long int value, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_managed	src/node.cpp	/^unsigned int sNodeTree_create_managed(char* var_name, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_minus_minus	src/node.cpp	/^unsigned int sNodeTree_create_minus_minus(unsigned int left_node, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_mod	src/node.cpp	/^unsigned int sNodeTree_create_mod(unsigned int left, unsigned int right, unsigned int middle, sP/;"	f	typeref:typename:unsigned int
sNodeTree_create_mult	src/node.cpp	/^unsigned int sNodeTree_create_mult(unsigned int left, unsigned int right, unsigned int middle, s/;"	f	typeref:typename:unsigned int
sNodeTree_create_normal_block	src/node.cpp	/^unsigned int sNodeTree_create_normal_block(struct sNodeBlockStruct* node_block, sParserInfo* inf/;"	f	typeref:typename:unsigned int
sNodeTree_create_not_equals	src/node.cpp	/^unsigned int sNodeTree_create_not_equals(unsigned int left, unsigned int right, unsigned int mid/;"	f	typeref:typename:unsigned int
sNodeTree_create_null	src/node.cpp	/^unsigned int sNodeTree_create_null(sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_object	src/node.cpp	/^unsigned int sNodeTree_create_object(sNodeType* node_type, unsigned int object_num, char* sname,/;"	f	typeref:typename:unsigned int
sNodeTree_create_or	src/node.cpp	/^unsigned int sNodeTree_create_or(unsigned int left, unsigned int right, unsigned int middle, sPa/;"	f	typeref:typename:unsigned int
sNodeTree_create_or_or	src/node.cpp	/^unsigned int sNodeTree_create_or_or(unsigned int left_node, unsigned int right_node, sParserInfo/;"	f	typeref:typename:unsigned int
sNodeTree_create_plus_plus	src/node.cpp	/^unsigned int sNodeTree_create_plus_plus(unsigned int left_node, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_reffernce	src/node.cpp	/^unsigned int sNodeTree_create_reffernce(unsigned int left_node, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_return	src/node.cpp	/^unsigned int sNodeTree_create_return(unsigned int left, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_right_shift	src/node.cpp	/^unsigned int sNodeTree_create_right_shift(unsigned int left, unsigned int right, unsigned int mi/;"	f	typeref:typename:unsigned int
sNodeTree_create_simple_lambda_param	src/node.cpp	/^unsigned int sNodeTree_create_simple_lambda_param(char* buf, char* sname, int sline, sParserInfo/;"	f	typeref:typename:unsigned int
sNodeTree_create_sizeof	src/node.cpp	/^unsigned int sNodeTree_create_sizeof(sNodeType* node_type, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_sizeof_expression	src/node.cpp	/^unsigned int sNodeTree_create_sizeof_expression(unsigned int lnode, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_stack_object	src/node.cpp	/^unsigned int sNodeTree_create_stack_object(sNodeType* node_type, unsigned int object_num, char* /;"	f	typeref:typename:unsigned int
sNodeTree_create_store_element	src/node.cpp	/^unsigned int sNodeTree_create_store_element(unsigned int array, unsigned int index_node, unsigne/;"	f	typeref:typename:unsigned int
sNodeTree_create_store_field	src/node.cpp	/^unsigned int sNodeTree_create_store_field(char* var_name, unsigned int left_node, unsigned int r/;"	f	typeref:typename:unsigned int
sNodeTree_create_store_value_to_address	src/node.cpp	/^unsigned int sNodeTree_create_store_value_to_address(unsigned int address_node, unsigned int rig/;"	f	typeref:typename:unsigned int
sNodeTree_create_store_variable	src/node.cpp	/^unsigned int sNodeTree_create_store_variable(char* var_name, int right, BOOL alloc, sParserInfo*/;"	f	typeref:typename:unsigned int
sNodeTree_create_struct_with_initialization	src/node.cpp	/^unsigned int sNodeTree_create_struct_with_initialization(char* name, int num_initialize_array_va/;"	f	typeref:typename:unsigned int
sNodeTree_create_sub	src/node.cpp	/^unsigned int sNodeTree_create_sub(unsigned int left, unsigned int right, unsigned int middle, sP/;"	f	typeref:typename:unsigned int
sNodeTree_create_true	src/node.cpp	/^unsigned int sNodeTree_create_true(sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_typedef	src/node.cpp	/^unsigned int sNodeTree_create_typedef(char* name, sNodeType* node_type, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_uint_value	src/node.cpp	/^unsigned int sNodeTree_create_uint_value(int value, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_ulong_value	src/node.cpp	/^unsigned int sNodeTree_create_ulong_value(unsigned long long int value, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_create_va_arg	src/node.cpp	/^unsigned int sNodeTree_create_va_arg(unsigned int lnode, sNodeType* node_type, sParserInfo* info/;"	f	typeref:typename:unsigned int
sNodeTree_create_xor	src/node.cpp	/^unsigned int sNodeTree_create_xor(unsigned int left, unsigned int right, unsigned int middle, sP/;"	f	typeref:typename:unsigned int
sNodeTree_do_while_expression	src/node.cpp	/^unsigned int sNodeTree_do_while_expression(unsigned int expression_node, MANAGED struct sNodeBlo/;"	f	typeref:typename:unsigned int
sNodeTree_for_expression	src/node.cpp	/^unsigned int sNodeTree_for_expression(unsigned int expression_node1, unsigned int expression_nod/;"	f	typeref:typename:unsigned int
sNodeTree_goto_expression	src/node.cpp	/^unsigned int sNodeTree_goto_expression(char* name, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_if_expression	src/node.cpp	/^unsigned int sNodeTree_if_expression(unsigned int expression_node, MANAGED struct sNodeBlockStru/;"	f	typeref:typename:unsigned int
sNodeTree_label_expression	src/node.cpp	/^unsigned int sNodeTree_label_expression(char* name, sParserInfo* info)$/;"	f	typeref:typename:unsigned int
sNodeTree_struct	src/node.cpp	/^unsigned int sNodeTree_struct(sNodeType* struct_type, sParserInfo* info, char* sname, int sline,/;"	f	typeref:typename:unsigned int
sNodeTree_switch_expression	src/node.cpp	/^unsigned int sNodeTree_switch_expression(unsigned int expression_node, int num_switch_expression/;"	f	typeref:typename:unsigned int
sNodeTree_union	src/node.cpp	/^unsigned int sNodeTree_union(sNodeType* struct_type, sParserInfo* info, char* sname, int sline, /;"	f	typeref:typename:unsigned int
sNodeTree_while_expression	src/node.cpp	/^unsigned int sNodeTree_while_expression(unsigned int expression_node, MANAGED struct sNodeBlockS/;"	f	typeref:typename:unsigned int
sNodeType	src/common.h	/^typedef struct sNodeTypeStruct sNodeType;$/;"	t	typeref:struct:sNodeTypeStruct
sNodeTypeStruct	src/common.h	/^struct sNodeTypeStruct {$/;"	s
sNormalBlock	src/common.h	/^        } sNormalBlock;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1c08
sObject	src/common.h	/^        } sObject;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1008
sParserInfo	src/common.h	/^typedef struct sParserInfoStruct sParserInfo;$/;"	t	typeref:struct:sParserInfoStruct
sParserInfoStruct	src/common.h	/^struct sParserInfoStruct$/;"	s
sParserParam	src/common.h	/^typedef struct sParserParamStruct sParserParam;$/;"	t	typeref:struct:sParserParamStruct
sParserParamStruct	src/common.h	/^struct sParserParamStruct $/;"	s
sPreprocessorFunction	src/preprocessor.c	/^typedef struct sPreprocessorFunctionStruct sPreprocessorFunction;$/;"	t	typeref:struct:sPreprocessorFunctionStruct	file:
sPreprocessorFunctionStruct	src/preprocessor.c	/^struct sPreprocessorFunctionStruct {$/;"	s	file:
sSimpleLambdaParam	src/common.h	/^        } sSimpleLambdaParam;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1408
sSizeOf	src/common.h	/^        } sSizeOf;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1708
sStoreField	src/common.h	/^        } sStoreField;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1108
sStoreVariable	src/common.h	/^        } sStoreVariable;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0208
sString	src/common.h	/^        } sString;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0808
sStruct	src/common.h	/^        } sStruct;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0f08
sSwitch	src/common.h	/^        } sSwitch;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1d08
sTypeDef	src/common.h	/^        } sTypeDef;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b1608
sTypeDefTable	src/typedef.c	/^struct sTypeDefTable$/;"	s	file:
sVaArg	src/common.h	/^        } sVaArg;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0908
sVar	src/common.h	/^typedef struct sVarStruct sVar;$/;"	t	typeref:struct:sVarStruct
sVarStruct	src/common.h	/^struct sVarStruct {$/;"	s
sVarTable	src/common.h	/^typedef struct sVarTableStruct sVarTable;$/;"	t	typeref:struct:sVarTableStruct
sVarTableStruct	src/common.h	/^struct sVarTableStruct {$/;"	s
sVector	src/common.h	/^        } sVector;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0b08
sWhile	src/common.h	/^        } sWhile;$/;"	m	union:sNodeTreeStruct::__anon70586b7b010a	typeref:struct:sNodeTreeStruct::__anon70586b7b010a::__anon70586b7b0e08
same_struct_type	src/llvm.cpp	/^static BOOL same_struct_type(sNodeType* left_type, sNodeType* right_type, sCompileInfo* info)$/;"	f	typeref:typename:BOOL	file:
search_for_class_file	src/klass.c	/^static BOOL search_for_class_file(char* class_name, char* class_file_name, size_t class_file_nam/;"	f	typeref:typename:BOOL	file:
setCurrentDebugLocation	src/llvm.cpp	/^void setCurrentDebugLocation(int sline)$/;"	f	typeref:typename:void
set_max_block_var_num	src/vtable.c	/^void set_max_block_var_num(sVarTable* lv_table, sVarTable* old_table)$/;"	f	typeref:typename:void
sevenstars	sevenstars/Makefile.in	/^sevenstars: config.h src\/*.h Makefile configure src\/compiler.nc src\/parser.o src\/node.o src\//;"	t
sharedstatedir	Makefile	/^sharedstatedir=${prefix}\/com$/;"	m
sharedstatedir	Makefile.in	/^sharedstatedir=@sharedstatedir@$/;"	m
sharedstatedir	sevenstars/Makefile.in	/^sharedstatedir=@sharedstatedir@$/;"	m
sharedstatedir	tiny/Makefile.in	/^sharedstatedir=@sharedstatedir@$/;"	m
sharedstatedir	wi/Makefile.in	/^sharedstatedir=@sharedstatedir@$/;"	m
show_node	src/node.cpp	/^void show_node(unsigned int node)$/;"	f	typeref:typename:void
show_node_type	src/node_type.c	/^void show_node_type(sNodeType* node_type)$/;"	f	typeref:typename:void
show_vtable	src/vtable.c	/^void show_vtable(sVarTable* table)$/;"	f	typeref:typename:void
show_vtable_current_only	src/vtable.c	/^void show_vtable_current_only(sVarTable* table)$/;"	f	typeref:typename:void
size	code/neo-c.h	/^    int size;$/;"	m	struct:buffer	typeref:typename:int
size	code/neo-c.h	/^    int size;$/;"	m	struct:map	typeref:typename:int
size	code/neo-c.h	/^    int size;$/;"	m	struct:vector	typeref:typename:int
size	neo-c.h	/^    int size;$/;"	m	struct:buffer	typeref:typename:int
size	neo-c.h	/^    int size;$/;"	m	struct:map	typeref:typename:int
size	neo-c.h	/^    int size;$/;"	m	struct:vector	typeref:typename:int
size	src/memalloc.c	/^    size_t size;$/;"	m	struct:header_t	typeref:typename:size_t	file:
skip_block	src/node_block.cpp	/^BOOL skip_block(sParserInfo* info)$/;"	f	typeref:typename:BOOL
skip_paren	src/parser.c	/^static BOOL skip_paren(char head_char, char tail_char, sParserInfo* info)$/;"	f	typeref:typename:BOOL	file:
skip_spaces	src/parser.c	/^void skip_spaces(sParserInfo* info)$/;"	f	typeref:typename:void
skip_spaces_and_lf	src/parser.c	/^void skip_spaces_and_lf(sParserInfo* info)$/;"	f	typeref:typename:void
skip_spaces_for_parse_class_name	src/node_type.c	/^static void skip_spaces_for_parse_class_name(char** p) $/;"	f	typeref:typename:void	file:
sline	src/common.h	/^    int sline;$/;"	m	struct:sCompileInfoStruct	typeref:typename:int
sline	src/common.h	/^    int sline;$/;"	m	struct:sParserInfoStruct	typeref:typename:int
sline	src/memalloc-stdc.c	/^    int sline;$/;"	m	struct:sHeapDebug	typeref:typename:int	file:
sline	tiny/common.h	/^    int sline;$/;"	m	struct:TinyNode	typeref:typename:int
sline	tiny/common.h	/^    int sline;$/;"	m	struct:TinyParser	typeref:typename:int
sline_top	src/common.h	/^    int sline_top;$/;"	m	struct:sParserInfoStruct	typeref:typename:int
sname	src/common.h	/^    char sname[PATH_MAX];$/;"	m	struct:sCompileInfoStruct	typeref:typename:char[]
sname	src/common.h	/^    char sname[PATH_MAX];$/;"	m	struct:sParserInfoStruct	typeref:typename:char[]
sname	src/memalloc-stdc.c	/^    char sname[128];$/;"	m	struct:sHeapDebug	typeref:typename:char[128]	file:
sname	tiny/common.h	/^    string sname;$/;"	m	struct:TinyNode	typeref:typename:string
sname	tiny/common.h	/^    string sname;$/;"	m	struct:TinyParser	typeref:typename:string
solve_generics	src/node_type.c	/^BOOL solve_generics(sNodeType** node_type, sNodeType* generics_type, BOOL* success_volve)$/;"	f	typeref:typename:BOOL
solve_method_generics	src/node_type.c	/^BOOL solve_method_generics(sNodeType** node_type, int num_method_generics_types, sNodeType* meth/;"	f	typeref:typename:BOOL
solve_typeof	src/node_type.c	/^BOOL solve_typeof(sNodeType** node_type, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
solve_undefined_strcut_type	src/llvm.cpp	/^static BOOL solve_undefined_strcut_type(sNodeType* node_type, sNodeType* generics_type, char* re/;"	f	typeref:typename:BOOL	file:
solve_undefined_strcut_type_when_definision	src/llvm.cpp	/^BOOL solve_undefined_strcut_type_when_definision(sNodeType* node_type, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
source	src/common.h	/^    char* source;$/;"	m	struct:sParserInfoStruct	typeref:typename:char *
src/block.o	sevenstars/Makefile.in	/^src\/block.o: config.h src\/*.h Makefile configure src\/block.nc$/;"	t
src/class.o	sevenstars/Makefile.in	/^src\/class.o: config.h src\/*.h Makefile configure src\/class.nc$/;"	t
src/compiler.c	configure.in	/^AC_INIT(src\/compiler.c)$/;"	p
src/compiler.nc	sevenstars/configure.in	/^AC_INIT(src\/compiler.nc)$/;"	p
src/heap.o	sevenstars/Makefile.in	/^src\/heap.o: config.h src\/*.h Makefile configure src\/heap.nc$/;"	t
src/macro.o	sevenstars/Makefile.in	/^src\/macro.o: config.h src\/*.h Makefile configure src\/macro.nc$/;"	t
src/native.o	sevenstars/Makefile.in	/^src\/native.o: config.h src\/*.h Makefile configure src\/native.nc$/;"	t
src/node.o	sevenstars/Makefile.in	/^src\/node.o: config.h src\/*.h Makefile configure src\/node.nc$/;"	t
src/object.o	sevenstars/Makefile.in	/^src\/object.o: config.h src\/*.h Makefile configure src\/object.nc$/;"	t
src/objet.o	sevenstars/Makefile.in	/^src\/objet.o: config.h src\/*.h Makefile configure src\/object.nc$/;"	t
src/parser.o	sevenstars/Makefile.in	/^src\/parser.o: config.h src\/*.h Makefile configure src\/parser.nc$/;"	t
src/type.o	sevenstars/Makefile.in	/^src\/type.o: config.h src\/*.h Makefile configure src\/type.nc$/;"	t
src/vm.o	sevenstars/Makefile.in	/^src\/vm.o: config.h src\/*.h Makefile configure src\/vm.nc$/;"	t
src/vtable.o	sevenstars/Makefile.in	/^src\/vtable.o: config.h src\/*.h Makefile configure src\/vtable.nc$/;"	t
stackValue	tiny/common.h	/^    int stackValue;$/;"	m	struct:TinyNode	typeref:typename:int
stack_num	src/common.h	/^    int stack_num;$/;"	m	struct:sCompileInfoStruct	typeref:typename:int
start_to_make_native_code	src/llvm.cpp	/^void start_to_make_native_code(char* sname)$/;"	f	typeref:typename:void
std_move	src/llvm.cpp	/^void std_move(Value* var_address, sNodeType* lvar_type, LVALUE* rvalue, BOOL alloc, sCompileInfo/;"	f	typeref:typename:void
store_address_to_lvtable	src/llvm.cpp	/^void store_address_to_lvtable(int index, Value* address)$/;"	f	typeref:typename:void
store_lvtable	src/llvm.cpp	/^Value* store_lvtable()$/;"	f	typeref:typename:Value *
str	code/neo-c.h	/^    string str;$/;"	m	struct:regex_struct	typeref:typename:string
str	neo-c.h	/^    string str;$/;"	m	struct:regex_struct	typeref:typename:string
string	code/neo-c.h	/^typedef char*% string;$/;"	t	typeref:typename:char * %
string	neo-c.h	/^typedef char*% string;$/;"	t	typeref:typename:char * %
substitution_posibility	src/node_type.c	/^BOOL substitution_posibility(sNodeType* left_type, sNodeType* right_type, sCompileInfo* info)$/;"	f	typeref:typename:BOOL
switch_expression	src/common.h	/^    void* switch_expression;$/;"	m	struct:sCompileInfoStruct	typeref:typename:void *
switch_expression_type	src/common.h	/^    sNodeType* switch_expression_type;$/;"	m	struct:sCompileInfoStruct	typeref:typename:sNodeType *
switch_nest	src/common.h	/^    int switch_nest;$/;"	m	struct:sParserInfoStruct	typeref:typename:int
sysconfdir	Makefile	/^sysconfdir=${prefix}\/etc\/neo-c$/;"	m
sysconfdir	Makefile.in	/^sysconfdir=@sysconfdir@\/neo-c$/;"	m
sysconfdir	sevenstars/Makefile.in	/^sysconfdir=@sysconfdir@\/sevenstars$/;"	m
sysconfdir	tiny/Makefile.in	/^sysconfdir=@sysconfdir@\/neo-c$/;"	m
sysconfdir	wi/Makefile.in	/^sysconfdir=@sysconfdir@\/neo-c$/;"	m
test	Makefile	/^test: $/;"	t
test	Makefile.in	/^test: $/;"	t
test	sevenstars/Makefile.in	/^test: $/;"	t
test	tiny/Makefile.in	/^test:$/;"	t
test	wi/Makefile.in	/^test:$/;"	t
tiny	tiny/Makefile.in	/^tiny: configure Makefile config.h main.nc 01init.o 02base.o 03mult.o 04var.o common.h$/;"	t
tiny	tiny/README.md	/^# tiny$/;"	c
to_string	neo-c.h	/^    inline string to_string(char value) {$/;"	f	typeref:typename:string
to_string	neo-c.h	/^    inline string to_string(char* value) {$/;"	f	typeref:typename:string
to_string	neo-c.h	/^    inline string to_string(int value) {$/;"	f	typeref:typename:string
to_string	neo-c.h	/^    inline string to_string(wchar_t value) {$/;"	f	typeref:typename:string
to_string	neo-c.h	/^    inline string to_string(wchar_t* str, char* default_value) {$/;"	f	typeref:typename:string
to_vector	neo-c.h	/^    vector<T> to_vector(list<T>* self) {$/;"	f	typeref:typename:vector<T>
to_wstring	neo-c.h	/^    inline wstring to_wstring(char* value) {$/;"	f	typeref:typename:wstring
to_wstring	neo-c.h	/^    inline wstring to_wstring(wchar_t* str) {$/;"	f	typeref:typename:wstring
tuple1	code/neo-c.h	/^struct tuple1<T>$/;"	s
tuple1	neo-c.h	/^struct tuple1<T>$/;"	s
tuple2	code/neo-c.h	/^struct tuple2<T, T2>$/;"	s
tuple2	neo-c.h	/^struct tuple2<T, T2>$/;"	s
tuple3	code/neo-c.h	/^struct tuple3<T, T2, T3>$/;"	s
tuple3	neo-c.h	/^struct tuple3<T, T2, T3>$/;"	s
tuple4	code/neo-c.h	/^struct tuple4<T, T2, T3, T4>$/;"	s
tuple4	neo-c.h	/^struct tuple4<T, T2, T3, T4>$/;"	s
type	src/common.h	/^    sNodeType* type;$/;"	m	struct:sCompileInfoStruct	typeref:typename:sNodeType *
type	src/llvm_common.hpp	/^    sNodeType* type;$/;"	m	struct:LVALUEStruct	typeref:typename:sNodeType *
type	tiny/common.h	/^    int type;$/;"	m	struct:TinyNode	typeref:typename:int
type_identify	src/node_type.c	/^BOOL type_identify(sNodeType* left, sNodeType* right)$/;"	f	typeref:typename:BOOL
type_identify_with_class_name	src/node_type.c	/^BOOL type_identify_with_class_name(sNodeType* left, char* right_class_name)$/;"	f	typeref:typename:BOOL
type_name	src/memalloc-stdc.c	/^    char type_name[128];$/;"	m	struct:sHeapDebug	typeref:typename:char[128]	file:
uValue	src/common.h	/^    } uValue;$/;"	m	struct:sNodeTreeStruct	typeref:union:sNodeTreeStruct::__anon70586b7b010a
ungreedy	code/neo-c.h	/^    bool ungreedy;$/;"	m	struct:regex_struct	typeref:typename:bool
ungreedy	neo-c.h	/^    bool ungreedy;$/;"	m	struct:regex_struct	typeref:typename:bool
uninstall	Makefile	/^uninstall:$/;"	t
uninstall	Makefile.in	/^uninstall:$/;"	t
uninstall	sevenstars/Makefile.in	/^uninstall:$/;"	t
uninstall	tiny/Makefile.in	/^uninstall:$/;"	t
uninstall	wi/Makefile.in	/^uninstall:$/;"	t
v1	code/neo-c.h	/^    T v1;$/;"	m	struct:tuple1	typeref:typename:T
v1	code/neo-c.h	/^    T v1;$/;"	m	struct:tuple2	typeref:typename:T
v1	code/neo-c.h	/^    T v1;$/;"	m	struct:tuple3	typeref:typename:T
v1	code/neo-c.h	/^    T v1;$/;"	m	struct:tuple4	typeref:typename:T
v1	neo-c.h	/^    T v1;$/;"	m	struct:tuple1	typeref:typename:T
v1	neo-c.h	/^    T v1;$/;"	m	struct:tuple2	typeref:typename:T
v1	neo-c.h	/^    T v1;$/;"	m	struct:tuple3	typeref:typename:T
v1	neo-c.h	/^    T v1;$/;"	m	struct:tuple4	typeref:typename:T
v2	code/neo-c.h	/^    T2 v2;$/;"	m	struct:tuple2	typeref:typename:T2
v2	code/neo-c.h	/^    T2 v2;$/;"	m	struct:tuple3	typeref:typename:T2
v2	code/neo-c.h	/^    T2 v2;$/;"	m	struct:tuple4	typeref:typename:T2
v2	neo-c.h	/^    T2 v2;$/;"	m	struct:tuple2	typeref:typename:T2
v2	neo-c.h	/^    T2 v2;$/;"	m	struct:tuple3	typeref:typename:T2
v2	neo-c.h	/^    T2 v2;$/;"	m	struct:tuple4	typeref:typename:T2
v3	code/neo-c.h	/^    T3 v3;$/;"	m	struct:tuple3	typeref:typename:T3
v3	code/neo-c.h	/^    T3 v3;$/;"	m	struct:tuple4	typeref:typename:T3
v3	code/neo-c.h	/^    T4 v3;$/;"	m	struct:tuple4	typeref:typename:T4
v3	neo-c.h	/^    T3 v3;$/;"	m	struct:tuple3	typeref:typename:T3
v3	neo-c.h	/^    T3 v3;$/;"	m	struct:tuple4	typeref:typename:T3
v3	neo-c.h	/^    T4 v3;$/;"	m	struct:tuple4	typeref:typename:T4
value	src/llvm_common.hpp	/^    Value* value;$/;"	m	struct:LVALUEStruct	typeref:typename:Value *
var	src/llvm_common.hpp	/^    sVar* var;$/;"	m	struct:LVALUEStruct	typeref:typename:sVar *
vector	code/neo-c.h	/^struct vector<T> $/;"	s
vector	neo-c.h	/^struct vector<T> $/;"	s
version	code/HelloWorld6.h	/^struct StructData1 version 2$/;"	s
vi	wi/common.h	/^    void* vi;$/;"	m	struct:ViWin	typeref:typename:void *
wi	wi/Makefile.in	/^wi: configure Makefile config.h main.nc 01init.o 02base.o 03insert_mode.o 04word.o 05undo.o 06fi/;"	t
wi	wi/README.md	/^# wi $/;"	c
width	wi/common.h	/^    int width;$/;"	m	struct:ViWin	typeref:typename:int
win	wi/common.h	/^    WINDOW* win;$/;"	m	struct:ViWin	typeref:typename:WINDOW *
write_to_automatically_header	src/parser.c	/^static BOOL write_to_automatically_header(sBuf* buf)$/;"	f	typeref:typename:BOOL	file:
wstring	code/neo-c.h	/^typedef wchar_t*% wstring;$/;"	t	typeref:typename:wchar_t * %
wstring	neo-c.h	/^typedef wchar_t*% wstring;$/;"	t	typeref:typename:wchar_t * %
x	wi/common.h	/^    int x;$/;"	m	struct:ViWin	typeref:typename:int
xasprintf	src/memalloc-stdc.c	/^void *xasprintf(char* msg, ...)$/;"	f	typeref:typename:void *
xcalloc	src/memalloc.c	/^void *xcalloc(size_t num, size_t nsize)$/;"	f	typeref:typename:void *
xcalloc	src/xfunc.c	/^ALLOC void* xcalloc(size_t count, size_t size)$/;"	f	typeref:typename:ALLOC void *
xfree	src/memalloc.c	/^void xfree(void *block)$/;"	f	typeref:typename:void
xmalloc	src/memalloc.c	/^void *xmalloc(size_t size)$/;"	f	typeref:typename:void *
xmalloc	src/xfunc.c	/^ALLOC void* xmalloc(size_t size)$/;"	f	typeref:typename:ALLOC void *
xmemcpy	src/memalloc.c	/^char* xmemcpy(char* mem, char* mem2, int size)$/;"	f	typeref:typename:char *
xmemdup	src/memalloc.c	/^void *xmemdup(char *block)$/;"	f	typeref:typename:void *
xrealloc	src/memalloc.c	/^void *xrealloc(char *block, size_t size)$/;"	f	typeref:typename:void *
xrealloc	src/xfunc.c	/^ALLOC void* xrealloc(void* ptr, size_t size)$/;"	f	typeref:typename:ALLOC void *
xsprintf	src/memalloc-stdc.c	/^void *xsprintf(char* msg, ...)$/;"	f	typeref:typename:void *
xstrdup	src/xfunc.c	/^ALLOC char* xstrdup(char* str)$/;"	f	typeref:typename:ALLOC char *
xstrncat	src/xfunc.c	/^char* xstrncat(char* des, char* str, int size)$/;"	f	typeref:typename:char *
xstrncpy	src/xfunc.c	/^char* xstrncpy(char* des, char* src, int size)$/;"	f	typeref:typename:char *
xxxcalloc	src/memalloc-stdc.c	/^void *xxxcalloc(size_t num, size_t nsize)$/;"	f	typeref:typename:void *
xxxfree	src/memalloc-stdc.c	/^void xxxfree(void *block)$/;"	f	typeref:typename:void
xxxmalloc	src/memalloc-stdc.c	/^void *xxxmalloc(size_t size)$/;"	f	typeref:typename:void *
xxxmemcpy	src/memalloc-stdc.c	/^void* xxxmemcpy(void* mem, void* mem2, size_t size)$/;"	f	typeref:typename:void *
xxxmemdup	src/memalloc-stdc.c	/^void *xxxmemdup(void *block)$/;"	f	typeref:typename:void *
xxxrealloc	src/memalloc-stdc.c	/^void *xxxrealloc(void *block, size_t size)$/;"	f	typeref:typename:void *
y	wi/common.h	/^    int y;$/;"	m	struct:ViWin	typeref:typename:int
